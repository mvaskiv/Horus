(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('prop-types'), require('react-dom')) :
	typeof define === 'function' && define.amd ? define(['exports', 'react', 'prop-types', 'react-dom'], factory) :
	(factory((global.UIKit = {}),global.React,global.PropTypes,global.ReactDOM));
}(this, (function (exports,React,PropTypes,reactDom) { 'use strict';

var React__default = React['default'];
var PropTypes__default = PropTypes['default'];
reactDom = reactDom && reactDom.hasOwnProperty('default') ? reactDom['default'] : reactDom;

/* eslint-disable */
// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
function hashString(str) {
  return murmurhash2_32_gc(str, str.length).toString(36);
}

function murmurhash2_32_gc(str, seed) {
  var l = str.length,
      h = seed ^ l,
      i = 0,
      k;

  while (l >= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    k ^= k >>> 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;
    l -= 4;
    ++i;
  }

  switch (l) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  }

  h ^= h >>> 13;
  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  h ^= h >>> 15;
  return h >>> 0;
}

var pa = function fa(ha) {
  function V(f, d, c, l, a) {
    for (var g = 0, b = 0, n = 0, e = 0, k, r, m, v = 0, B = 0, C = 0, x = 0, D = 0, p = 0, H = 0, q = 0, O = r = 0, M = 0, t = 0, y = c.length, G = y - 1, h = '', u = '', F = '', N = '', I; q < y;) {
      m = c.charCodeAt(q);
      q === G && 0 !== b + e + n + g && (0 !== b && (m = 47 === b ? 10 : 47), e = n = g = 0, y++, G++);

      if (0 === b + e + n + g) {
        if (q === G && (0 < r && (h = h.replace(Q, '')), 0 < h.trim().length)) {
          switch (m) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;

            default:
              h += c.charAt(q);
          }

          m = 59;
        }

        if (1 === O) switch (m) {
          case 123:
          case 125:
          case 59:
          case 34:
          case 39:
          case 40:
          case 41:
          case 44:
            O = 0;

          case 9:
          case 13:
          case 10:
          case 32:
            break;

          default:
            for (O = 0, t = q, k = m, q--, m = 59; t < y;) {
              switch (c.charCodeAt(t++)) {
                case 10:
                case 13:
                case 59:
                  ++q;
                  m = k;
                  t = y;
                  break;

                case 58:
                  0 < r && (++q, m = k);

                case 123:
                  t = y;
              }
            }

        }

        switch (m) {
          case 123:
            h = h.trim();
            k = h.charCodeAt(0);
            x = 1;

            for (t = ++q; q < y;) {
              m = c.charCodeAt(q);

              switch (m) {
                case 123:
                  x++;
                  break;

                case 125:
                  x--;
              }

              if (0 === x) break;
              q++;
            }

            p = c.substring(t, q);
            0 === k && (k = (h = h.replace(qa, '').trim()).charCodeAt(0));

            switch (k) {
              case 64:
                0 < r && (h = h.replace(Q, ''));
                r = h.charCodeAt(1);

                switch (r) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    k = d;
                    break;

                  default:
                    k = W;
                }

                p = V(d, k, p, r, a + 1);
                t = p.length;
                0 < X && 0 === t && (t = h.length);
                0 < E && (k = ia(W, h, M), I = P(3, p, k, d, J, z, t, r, a, l), h = k.join(''), void 0 !== I && 0 === (t = (p = I.trim()).length) && (r = 0, p = ''));
                if (0 < t) switch (r) {
                  case 115:
                    h = h.replace(ra, sa);

                  case 100:
                  case 109:
                  case 45:
                    p = h + '{' + p + '}';
                    break;

                  case 107:
                    h = h.replace(ta, '$1 $2' + (0 < R ? T : ''));
                    p = h + '{' + p + '}';
                    p = 1 === w || 2 === w && U('@' + p, 3) ? '@-webkit-' + p + '@' + p : '@' + p;
                    break;

                  default:
                    ;
                    p = h + p, 112 === l && (p = (u += p, ''));
                } else p = '';
                break;

              default:
                p = V(d, ia(d, h, M), p, l, a + 1);
            }

            F += p;
            p = M = r = H = O = D = 0;
            h = '';
            m = c.charCodeAt(++q);
            break;

          case 125:
          case 59:
            h = (0 < r ? h.replace(Q, '') : h).trim();
            if (1 < (t = h.length)) switch (0 === H && (k = h.charCodeAt(0), 45 === k || 96 < k && 123 > k) && (t = (h = h.replace(' ', ':')).length), 0 < E && void 0 !== (I = P(1, h, d, f, J, z, u.length, l, a, l)) && 0 === (t = (h = I.trim()).length) && (h = '\x00\x00'), k = h.charCodeAt(0), r = h.charCodeAt(1), k + r) {
              case 0:
                break;

              case 169:
              case 163:
                N += h + c.charAt(q);
                break;

              default:
                58 !== h.charCodeAt(t - 1) && (u += Y(h, k, r, h.charCodeAt(2)));
            }
            M = r = H = O = D = 0;
            h = '';
            m = c.charCodeAt(++q);
        }
      }

      switch (m) {
        case 13:
        case 10:
          if (0 === b + e + n + g + ja) switch (C) {
            case 41:
            case 39:
            case 34:
            case 64:
            case 126:
            case 62:
            case 42:
            case 43:
            case 47:
            case 45:
            case 58:
            case 44:
            case 59:
            case 123:
            case 125:
              break;

            default:
              0 < H && (O = 1);
          }
          47 === b ? b = 0 : 0 === A + D && (r = 1, h += '\x00');
          0 < E * ka && P(0, h, d, f, J, z, u.length, l, a, l);
          z = 1;
          J++;
          break;

        case 59:
        case 125:
          if (0 === b + e + n + g) {
            z++;
            break;
          }

        default:
          z++;
          k = c.charAt(q);

          switch (m) {
            case 9:
            case 32:
              if (0 === e + g + b) switch (v) {
                case 44:
                case 58:
                case 9:
                case 32:
                  k = '';
                  break;

                default:
                  32 !== m && (k = ' ');
              }
              break;

            case 0:
              k = '\\0';
              break;

            case 12:
              k = '\\f';
              break;

            case 11:
              k = '\\v';
              break;

            case 38:
              0 === e + b + g && 0 < A && (r = M = 1, k = '\f' + k);
              break;

            case 108:
              if (0 === e + b + g + K && 0 < H) switch (q - H) {
                case 2:
                  112 === v && 58 === c.charCodeAt(q - 3) && (K = v);

                case 8:
                  111 === B && (K = B);
              }
              break;

            case 58:
              0 === e + b + g && (H = q);
              break;

            case 44:
              0 === b + n + e + g && (r = 1, k += '\r');
              break;

            case 34:
              0 === b && (e = e === m ? 0 : 0 === e ? m : e);
              break;

            case 39:
              0 === b && (e = e === m ? 0 : 0 === e ? m : e);
              break;

            case 91:
              0 === e + b + n && g++;
              break;

            case 93:
              0 === e + b + n && g--;
              break;

            case 41:
              0 === e + b + g && n--;
              break;

            case 40:
              if (0 === e + b + g) {
                if (0 === D) switch (2 * v + 3 * B) {
                  case 533:
                    break;

                  default:
                    ;
                    x = 0, D = 1;
                }
                n++;
              }

              break;

            case 64:
              0 === b + n + e + g + H + p && (p = 1);
              break;

            case 42:
            case 47:
              if (!(0 < e + g + n)) switch (b) {
                case 0:
                  switch (2 * m + 3 * c.charCodeAt(q + 1)) {
                    case 235:
                      b = 47;
                      break;

                    case 220:
                      ;
                      t = q, b = 42;
                  }

                  break;

                case 42:
                  47 === m && 42 === v && (33 === c.charCodeAt(t + 2) && (u += c.substring(t, q + 1)), k = '', b = 0);
              }
          }

          if (0 === b) {
            if (0 === A + e + g + p && 107 !== l && 59 !== m) switch (m) {
              case 44:
              case 126:
              case 62:
              case 43:
              case 41:
              case 40:
                if (0 === D) {
                  switch (v) {
                    case 9:
                    case 32:
                    case 10:
                    case 13:
                      k += '\x00';
                      break;

                    default:
                      k = '\x00' + k + (44 === m ? '' : '\x00');
                  }

                  r = 1;
                } else switch (m) {
                  case 40:
                    D = ++x;
                    break;

                  case 41:
                    0 === (D = --x) && (r = 1, k += '\x00');
                }

                break;

              case 9:
              case 32:
                switch (v) {
                  case 0:
                  case 123:
                  case 125:
                  case 59:
                  case 44:
                  case 12:
                  case 9:
                  case 32:
                  case 10:
                  case 13:
                    break;

                  default:
                    0 === D && (r = 1, k += '\x00');
                }

            }
            h += k;
            32 !== m && 9 !== m && (C = m);
          }

      }

      B = v;
      v = m;
      q++;
    }

    t = u.length;
    0 < X && 0 === t && 0 === F.length && 0 === d[0].length === !1 && (109 !== l || 1 === d.length && (0 < A ? L : S) === d[0]) && (t = d.join(',').length + 2);

    if (0 < t) {
      if (0 === A && 107 !== l) {
        c = 0;
        g = d.length;

        for (b = Array(g); c < g; ++c) {
          v = d[c].split(ua);
          B = '';
          C = 0;

          for (y = v.length; C < y; ++C) {
            if (!(0 === (x = (e = v[C]).length) && 1 < y)) {
              q = B.charCodeAt(B.length - 1);
              M = e.charCodeAt(0);
              n = '';
              if (0 !== C) switch (q) {
                case 42:
                case 126:
                case 62:
                case 43:
                case 32:
                case 40:
                  break;

                default:
                  n = ' ';
              }

              switch (M) {
                case 38:
                  e = n + L;

                case 126:
                case 62:
                case 43:
                case 32:
                case 41:
                case 40:
                  break;

                case 91:
                  e = n + e + L;
                  break;

                case 58:
                  switch (2 * e.charCodeAt(1) + 3 * e.charCodeAt(2)) {
                    case 530:
                      if (0 < Z) {
                        e = n + e.substring(8, x - 1);
                        break;
                      }

                    default:
                      if (1 > C || 1 > v[C - 1].length) e = n + L + e;
                  }

                  break;

                case 44:
                  n = '';

                default:
                  e = 1 < x && 0 < e.indexOf(':') ? n + e.replace(va, '$1' + L + '$2') : n + e + L;
              }

              B += e;
            }
          }

          b[c] = B.replace(Q, '').trim();
        }

        d = b;
      }

      k = d;
      if (0 < E && (I = P(2, u, k, f, J, z, t, l, a, l), void 0 !== I && 0 === (u = I).length)) return N + u + F;
      u = k.join(',') + '{' + u + '}';

      if (0 !== w * K) {
        2 !== w || U(u, 2) || (K = 0);

        switch (K) {
          case 111:
            u = u.replace(wa, ':-moz-$1') + u;
            break;

          case 112:
            u = u.replace(aa, '::-webkit-input-$1') + u.replace(aa, '::-moz-$1') + u.replace(aa, ':-ms-input-$1') + u;
        }

        K = 0;
      }
    }

    return N + u + F;
  }

  function ia(f, d, c) {
    var l = d.trim().split(xa);
    d = l;
    var a = l.length,
        g = f.length;

    switch (g) {
      case 0:
      case 1:
        var b = 0;

        for (f = 0 === g ? '' : f[0] + ' '; b < a; ++b) {
          d[b] = la(f, d[b], c, g).trim();
        }

        break;

      default:
        var n = b = 0;

        for (d = []; b < a; ++b) {
          for (var e = 0; e < g; ++e) {
            d[n++] = la(f[e] + ' ', l[b], c, g).trim();
          }
        }

    }

    return d;
  }

  function la(f, d, c, l) {
    var a = d.charCodeAt(0);
    33 > a && (a = (d = d.trim()).charCodeAt(0));

    switch (a) {
      case 38:
        switch (A + l) {
          case 0:
          case 1:
            if (0 === f.trim().length) break;

          default:
            return d.replace(F, '$1' + f.trim());
        }

        break;

      case 58:
        switch (d.charCodeAt(1)) {
          case 103:
            if (0 < Z && 0 < A) return d.replace(ya, '$1').replace(F, '$1' + S);
            break;

          default:
            return f.trim() + d.replace(F, '$1' + f.trim());
        }

      default:
        if (0 < c * A && 0 < d.indexOf('\f')) return d.replace(F, (58 === f.charCodeAt(0) ? '' : '$1') + f.trim());
    }

    return f + d;
  }

  function Y(f, d, c, l) {
    var a = f + ';',
        g = 2 * d + 3 * c + 4 * l;

    if (944 === g) {
      f = a.length;
      var b = a.indexOf(':', 9) + 1;
      d = a.substring(0, b).trim();
      c = a.substring(b, f - 1).trim();

      switch (a.charCodeAt(9) * R) {
        case 0:
          break;

        case 45:
          if (110 !== a.charCodeAt(10)) break;

        default:
          for (a = c.split((c = '', za)), b = l = 0, f = a.length; l < f; b = 0, ++l) {
            g = a[l];

            for (var n = g.split(Aa); g = n[b];) {
              var e = g.charCodeAt(0);
              if (1 === R && (64 < e && 90 > e || 96 < e && 123 > e || 95 === e || 45 === e && 45 !== g.charCodeAt(1))) switch (isNaN(parseFloat(g)) + (-1 !== g.indexOf('('))) {
                case 1:
                  switch (g) {
                    case 'infinite':
                    case 'alternate':
                    case 'backwards':
                    case 'running':
                    case 'normal':
                    case 'forwards':
                    case 'both':
                    case 'none':
                    case 'linear':
                    case 'ease':
                    case 'ease-in':
                    case 'ease-out':
                    case 'ease-in-out':
                    case 'paused':
                    case 'reverse':
                    case 'alternate-reverse':
                    case 'inherit':
                    case 'initial':
                    case 'unset':
                    case 'step-start':
                    case 'step-end':
                      break;

                    default:
                      g += T;
                  }

              }
              n[b++] = g;
            }

            c += (0 === l ? '' : ',') + n.join(' ');
          }

      }

      c = d + c + ';';
      return 1 === w || 2 === w && U(c, 1) ? '-webkit-' + c + c : c;
    }

    if (0 === w || 2 === w && !U(a, 1)) return a;

    switch (g) {
      case 1015:
        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;

      case 951:
        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;

      case 963:
        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;

      case 1009:
        if (100 !== a.charCodeAt(4)) break;

      case 969:
      case 942:
        return '-webkit-' + a + a;

      case 978:
        return '-webkit-' + a + '-moz-' + a + a;

      case 1019:
      case 983:
        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;

      case 883:
        return 45 === a.charCodeAt(8) ? '-webkit-' + a + a : a;

      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;

          case 115:
            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;

          case 98:
            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
        }
        return '-webkit-' + a + '-ms-' + a + a;

      case 964:
        return '-webkit-' + a + '-ms-flex-' + a + a;

      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;

      case 1005:
        return Ba.test(a) ? a.replace(ma, ':-webkit-') + a.replace(ma, ':-moz-') + a : a;

      case 1e3:
        b = a.substring(13).trim();
        d = b.indexOf('-') + 1;

        switch (b.charCodeAt(0) + b.charCodeAt(d)) {
          case 226:
            b = a.replace(N, 'tb');
            break;

          case 232:
            b = a.replace(N, 'tb-rl');
            break;

          case 220:
            b = a.replace(N, 'lr');
            break;

          default:
            return a;
        }

        return '-webkit-' + a + '-ms-' + b + a;

      case 1017:
        if (-1 === a.indexOf('sticky', 9)) break;

      case 975:
        d = (a = f).length - 10;
        b = (33 === a.charCodeAt(d) ? a.substring(0, d) : a).substring(f.indexOf(':', 7) + 1).trim();

        switch (g = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;

          case 115:
            a = a.replace(b, '-webkit-' + b) + ';' + a;
            break;

          case 207:
          case 102:
            a = a.replace(b, '-webkit-' + (102 < g ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
        }

        return a + ';';

      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;

          case 115:
            return '-webkit-' + a + '-ms-flex-item-' + a.replace(na, '') + a;

          default:
            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(na, '') + a;
        }
        break;

      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;

      case 931:
      case 953:
        if (!0 === Ca.test(f)) return 115 === (b = f.substring(f.indexOf(':') + 1)).charCodeAt(0) ? Y(f.replace('stretch', 'fill-available'), d, c, l).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
        break;

      case 962:
        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === c + l && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(Da, '$1-webkit-$2') + a;
    }

    return a;
  }

  function U(f, d) {
    var c = f.indexOf(1 === d ? ':' : '{'),
        l = f.substring(0, 3 !== d ? c : 10);
    c = f.substring(c + 1, f.length - 1);
    return ba(2 !== d ? l : l.replace(Ea, '$1'), c, d);
  }

  function sa(f, d) {
    var c = Y(d, d.charCodeAt(0), d.charCodeAt(1), d.charCodeAt(2));
    return c !== d + ';' ? c.replace(Fa, ' or ($1)').substring(4) : '(' + d + ')';
  }

  function P(f, d, c, l, a, g, b, n, e, k) {
    for (var r = 0, m = d, v; r < E; ++r) {
      switch (v = ca[r].call(G, f, m, c, l, a, g, b, n, e, k)) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;

        default:
          m = v;
      }
    }

    switch (m) {
      case void 0:
      case !1:
      case !0:
      case null:
      case d:
        break;

      default:
        return m;
    }
  }

  function da(f) {
    switch (f) {
      case void 0:
      case null:
        E = ca.length = 0;
        break;

      default:
        switch (f.constructor) {
          case Array:
            for (var d = 0, c = f.length; d < c; ++d) {
              da(f[d]);
            }

            break;

          case Function:
            ca[E++] = f;
            break;

          case Boolean:
            ka = !!f | 0;
        }

    }

    return da;
  }

  function ea(f) {
    for (var d in f) {
      var c = f[d];

      switch (d) {
        case 'keyframe':
          R = c | 0;
          break;

        case 'global':
          Z = c | 0;
          break;

        case 'cascade':
          A = c | 0;
          break;

        case 'compress':
          oa = c | 0;
          break;

        case 'semicolon':
          ja = c | 0;
          break;

        case 'preserve':
          X = c | 0;
          break;

        case 'prefix':
          ;
          ba = null, c ? 'function' !== typeof c ? w = 1 : (w = 2, ba = c) : w = 0;
      }
    }

    return ea;
  }

  function G(f, d) {
    if (void 0 !== this && this.constructor === G) return fa(f);
    var c = f,
        l = c.charCodeAt(0);
    33 > l && (l = (c = c.trim()).charCodeAt(0));
    0 < R && (T = c.replace(Ga, 91 === l ? '' : '-'));
    l = 1;
    1 === A ? S = c : L = c;
    c = [S];

    if (0 < E) {
      var a = P(-1, d, c, c, J, z, 0, 0, 0, 0);
      void 0 !== a && 'string' === typeof a && (d = a);
    }

    var g = V(W, c, d, 0, 0);
    0 < E && (a = P(-2, g, c, c, J, z, g.length, 0, 0, 0), void 0 !== a && 'string' !== typeof (g = a) && (l = 0));
    L = S = T = '';
    K = 0;
    z = J = 1;
    return 0 === oa * l ? g : g.replace(Q, '').replace(Ha, '').replace(Ia, '$1').replace(Ja, '$1').replace(Ka, ' ');
  }

  var qa = /^\0+/g,
      Q = /[\0\r\f]/g,
      ma = /: */g,
      Ba = /zoo|gra/,
      Da = /([,: ])(transform)/g,
      za = /,+\s*(?![^(]*[)])/g,
      Aa = / +\s*(?![^(]*[)])/g,
      ua = / *[\0] */g,
      xa = /,\r+?/g,
      F = /([\t\r\n ])*\f?&/g,
      ya = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,
      Ga = /\W+/g,
      ta = /@(k\w+)\s*(\S*)\s*/,
      aa = /::(place)/g,
      wa = /:(read-only)/g,
      Ha = /\s+(?=[{\];=:>])/g,
      Ia = /([[}=:>])\s+/g,
      Ja = /(\{[^{]+?);(?=\})/g,
      Ka = /\s{2,}/g,
      va = /([^\(])(:+) */g,
      N = /[svh]\w+-[tblr]{2}/,
      ra = /\(\s*(.*)\s*\)/g,
      Fa = /([\s\S]*?);/g,
      na = /-self|flex-/g,
      Ea = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      Ca = /stretch|:\s*\w+\-(?:conte|avail)/,
      z = 1,
      J = 1,
      K = 0,
      A = 1,
      w = 1,
      Z = 1,
      oa = 0,
      ja = 0,
      X = 0,
      W = [],
      ca = [],
      E = 0,
      ba = null,
      ka = 0,
      R = 1,
      T = '',
      L = '',
      S = '';
  G.use = da;
  G.set = ea;
  void 0 !== ha && ea(ha);
  return G;
};

var memoize = function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
};
var STYLES_KEY = '__emotion_styles';
var unitless = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};



function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var stylisRuleSheet = createCommonjsModule(function (module, exports) {
(function (factory) {
	module['exports'] = factory();
}(function () {

	return function (insertRule) {
		var delimiter = '/*|*/';
		var needle = delimiter+'}';

		function toSheet (block) {
			if (block)
				try {
					insertRule(block + '}');
				} catch (e) {}
		}

		return function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {
			switch (context) {
				// property
				case 1:
					// @import
					if (depth === 0 && content.charCodeAt(0) === 64)
						return insertRule(content+';'), ''
					break
				// selector
				case 2:
					if (ns === 0)
						return content + delimiter
					break
				// at-rule
				case 3:
					switch (ns) {
						// @font-face, @page
						case 102:
						case 112:
							return insertRule(selectors[0]+content), ''
						default:
							return content + (at === 0 ? delimiter : '')
					}
				case -2:
					content.split(needle).forEach(toSheet);
			}
		}
	}
}));
});

var hyphenateRegex = /[A-Z]|^ms/g;
var processStyleName = memoize(function (styleName) {
  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});
var processStyleValue = function processStyleValue(key, value) {
  if (value == null || typeof value === 'boolean') {
    return '';
  }

  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties
  !isNaN(value) && value !== 0) {
    return value + 'px';
  }

  return value;
};
var classnames = function classnames(args) {
  var len = args.length;
  var i = 0;
  var cls = '';

  for (; i < len; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;

    switch (typeof arg) {
      case 'boolean':
        break;

      case 'function':
        toAdd = classnames([arg()]);
        break;

      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            toAdd = '';

            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }

          break;
        }

      default:
        {
          toAdd = arg;
        }
    }

    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }

  return cls;
};
var isBrowser = typeof document !== 'undefined';

/*

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance
- 'polyfills' on server side

// usage

import StyleSheet from 'glamor/lib/sheet'
let styleSheet = new StyleSheet()

styleSheet.inject()
- 'injects' the stylesheet into the page (or into memory if on server)

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function makeStyleTag(opts) {
  var tag = document.createElement('style');
  tag.type = 'text/css';
  tag.setAttribute('data-emotion', opts.key || '');

  if (opts.nonce !== undefined) {
    tag.setAttribute('nonce', opts.nonce);
  }

  tag.appendChild(document.createTextNode('')) // $FlowFixMe
  ;
  (opts.container !== undefined ? opts.container : document.head).appendChild(tag);
  return tag;
}

function _StyleSheet(options) {
  this.isSpeedy = "development" === 'production'; // the big drawback here is that the css won't be editable in devtools

  this.tags = [];
  this.ctr = 0;
  this.opts = options;
}

function _inject() {
  if (this.injected) {
    throw new Error('already injected!');
  }

  this.tags[0] = makeStyleTag(this.opts);
  this.injected = true;
}

function _speedy(bool$$1) {
  if (this.ctr !== 0) {
    // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})
    throw new Error("cannot change speedy now");
  }

  this.isSpeedy = !!bool$$1;
}

function _insert(rule, sourceMap) {
  // this is the ultrafast version, works across browsers
  if (this.isSpeedy) {
    var tag = this.tags[this.tags.length - 1];
    var sheet = sheetForTag(tag);

    try {
      sheet.insertRule(rule, sheet.cssRules.length);
    } catch (e) {
      {
        console.warn('illegal rule', rule); // eslint-disable-line no-console
      }
    }
  } else {
    var _tag = makeStyleTag(this.opts);

    this.tags.push(_tag);

    _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));
  }

  this.ctr++;

  if (this.ctr % 65000 === 0) {
    this.tags.push(makeStyleTag(this.opts));
  }
}

function _ref(tag) {
  return tag.parentNode.removeChild(tag);
}

function _flush() {
  // $FlowFixMe
  this.tags.forEach(_ref);
  this.tags = [];
  this.ctr = 0; // todo - look for remnants in document.styleSheets

  this.injected = false;
}

var StyleSheet =
/*#__PURE__*/
function () {
  var _proto = _StyleSheet.prototype;
  _proto.inject = _inject;
  _proto.speedy = _speedy;
  _proto.insert = _insert;
  _proto.flush = _flush;
  return _StyleSheet;
}();

function createEmotion(context, options) {
  if (context.__SECRET_EMOTION__ !== undefined) {
    return context.__SECRET_EMOTION__;
  }

  if (options === undefined) options = {};
  var key = options.key || 'css';

  {
    if (/[^a-z-]/.test(key)) {
      throw new Error("Emotion key must only contain lower case alphabetical characters and - but \"" + key + "\" was passed");
    }
  }

  var current;

  function insertRule(rule) {
    current += rule;

    if (isBrowser) {
      sheet.insert(rule, currentSourceMap);
    }
  }

  var insertionPlugin = stylisRuleSheet(insertRule);
  var stylisOptions = {
    keyframe: false,
    global: false,
    prefix: options.prefix === undefined ? true : options.prefix,
    semicolon: true
  };

  {
    stylisOptions.compress = false;
  }

  var caches = {
    registered: {},
    inserted: {},
    nonce: options.nonce,
    key: key
  };
  var sheet = new StyleSheet(options);

  if (isBrowser) {
    // 🚀
    sheet.inject();
  }

  var stylis = new pa(stylisOptions);
  stylis.use(options.stylisPlugins)(insertionPlugin);
  var currentSourceMap = '';

  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {
    if (interpolation == null) {
      return '';
    }

    switch (typeof interpolation) {
      case 'boolean':
        return '';

      case 'function':
        if (interpolation[STYLES_KEY] !== undefined) {
          var selector = interpolation.toString();

          if (selector === 'NO_COMPONENT_SELECTOR' && "development" !== 'production') {
            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
          }

          return selector;
        }

        return handleInterpolation.call(this, this === undefined ? interpolation() : // $FlowFixMe
        interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);

      case 'object':
        return createStringFromObject.call(this, interpolation);

      default:
        var cached = caches.registered[interpolation];
        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;
    }
  }

  var objectToStringCache = new WeakMap();

  function createStringFromObject(obj) {
    if (objectToStringCache.has(obj)) {
      // $FlowFixMe
      return objectToStringCache.get(obj);
    }

    var string$$1 = '';

    function _ref(interpolation) {
      string$$1 += handleInterpolation.call(this, interpolation, false);
    }

    function _ref2(key) {
      if (typeof obj[key] !== 'object') {
        if (caches.registered[obj[key]] !== undefined) {
          string$$1 += key + "{" + caches.registered[obj[key]] + "}";
        } else {
          string$$1 += processStyleName(key) + ":" + processStyleValue(key, obj[key]) + ";";
        }
      } else {
        if (key === 'NO_COMPONENT_SELECTOR' && "development" !== 'production') {
          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
        }

        string$$1 += key + "{" + handleInterpolation.call(this, obj[key], false) + "}";
      }
    }

    if (Array.isArray(obj)) {
      obj.forEach(_ref, this);
    } else {
      Object.keys(obj).forEach(_ref2, this);
    }

    objectToStringCache.set(obj, string$$1);
    return string$$1;
  }

  var name;
  var stylesWithLabel;
  var labelPattern = /label:\s*([^\s;\n{]+)\s*;/g;

  var createStyles = function createStyles(strings) {
    var stringMode = true;
    var styles = '';
    var identifierName = '';

    if (strings == null || strings.raw === undefined) {
      stringMode = false;
      styles += handleInterpolation.call(this, strings, false);
    } else {
      styles += strings[0];
    }

    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      interpolations[_key - 1] = arguments[_key];
    }

    interpolations.forEach(function (interpolation, i) {
      styles += handleInterpolation.call(this, interpolation, styles.charCodeAt(styles.length - 1) === 46 // .
      );

      if (stringMode === true && strings[i + 1] !== undefined) {
        styles += strings[i + 1];
      }
    }, this);
    stylesWithLabel = styles;
    styles = styles.replace(labelPattern, function (match, p1) {
      identifierName += "-" + p1;
      return '';
    });
    name = hashString(styles + identifierName) + identifierName;
    return styles;
  };

  {
    var sourceMapRegEx = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//;
    var oldStylis = stylis;

    stylis = function stylis(selector, styles) {
      var result = sourceMapRegEx.exec(styles);
      currentSourceMap = result ? result[0] : '';
      oldStylis(selector, styles);
      currentSourceMap = '';
    };
  }

  function insert(scope, styles) {
    if (caches.inserted[name] === undefined) {
      current = '';
      stylis(scope, styles);
      caches.inserted[name] = current;
    }
  }

  var css = function css() {
    var styles = createStyles.apply(this, arguments);
    var selector = key + "-" + name;

    if (caches.registered[selector] === undefined) {
      caches.registered[selector] = stylesWithLabel;
    }

    insert("." + selector, styles);
    return selector;
  };

  var keyframes = function keyframes() {
    var styles = createStyles.apply(this, arguments);
    var animation = "animation-" + name;
    insert('', "@keyframes " + animation + "{" + styles + "}");
    return animation;
  };

  var injectGlobal = function injectGlobal() {
    var styles = createStyles.apply(this, arguments);
    insert('', styles);
  };

  function getRegisteredStyles(registeredStyles, classNames) {
    var rawClassName = '';
    classNames.split(' ').forEach(function (className) {
      if (caches.registered[className] !== undefined) {
        registeredStyles.push(className);
      } else {
        rawClassName += className + " ";
      }
    });
    return rawClassName;
  }

  function merge(className, sourceMap) {
    var registeredStyles = [];
    var rawClassName = getRegisteredStyles(registeredStyles, className);

    if (registeredStyles.length < 2) {
      return className;
    }

    return rawClassName + css(registeredStyles, sourceMap);
  }

  function cx() {
    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      classNames[_key2] = arguments[_key2];
    }

    return merge(classnames(classNames));
  }

  function hydrateSingleId(id) {
    caches.inserted[id] = true;
  }

  function hydrate(ids) {
    ids.forEach(hydrateSingleId);
  }

  function flush() {
    if (isBrowser) {
      sheet.flush();
      sheet.inject();
    }

    caches.inserted = {};
    caches.registered = {};
  }

  function _ref3(node$$1) {
    // $FlowFixMe
    sheet.tags[0].parentNode.insertBefore(node$$1, sheet.tags[0]); // $FlowFixMe

    node$$1.getAttribute("data-emotion-" + key).split(' ').forEach(hydrateSingleId);
  }

  if (isBrowser) {
    var chunks = document.querySelectorAll("[data-emotion-" + key + "]");
    Array.prototype.forEach.call(chunks, _ref3);
  }

  var emotion = {
    flush: flush,
    hydrate: hydrate,
    cx: cx,
    merge: merge,
    getRegisteredStyles: getRegisteredStyles,
    injectGlobal: injectGlobal,
    keyframes: keyframes,
    css: css,
    sheet: sheet,
    caches: caches
  };
  context.__SECRET_EMOTION__ = emotion;
  return emotion;
}

var stylisCustomProperties = createCommonjsModule(function (module, exports) {
(function (factory) {
	module['exports'] = factory();
}(function () {
	
	var store = null;

	function replace (match, group) {
		return store[group] || match
	}

	return function (context, content, selectors, parents, line, column, length) {
		switch (context) {
			case -1: {
				// create store
				store = {};
				break
			}
			case -2: {
				// destroy store
				store = null;
				break
			}
			case 1: {
				if (content.charCodeAt(0) + content.charCodeAt(1) === 90) {
					// collect custom properties
					var index = content.indexOf(':');
					var name = content.substring(0, index);
					var value = content.substring(index+1).trim();

					return (store[name] = value, '')
				} else if (content.indexOf('var(') > 0) {
					// replace custom properties
					return content.replace(/var\((.*)\)/g, replace)
				}

				break
			}
		}
	}
}));
});

var emotion = createEmotion({}, { key: 'lc', stylisPlugins: [stylisCustomProperties] });
var css = emotion.css;
var cx = emotion.cx;
var injectGlobal = emotion.injectGlobal;
var keyframes = emotion.keyframes;

var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|accept|acceptCharset|accessKey|action|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan)|(on[A-Z].*)|((data|aria)-.*))$/;
var index = RegExp.prototype.test.bind(reactPropsRegex);

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var channel = '__EMOTION_THEMING__';

var _contextTypes;

var contextTypes = (_contextTypes = {}, _contextTypes[channel] = PropTypes__default.object, _contextTypes);

function setTheme(theme) {
  this.setState({
    theme: theme
  });
}
var testOmitPropsOnStringTag = memoize(index);
var testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {
  return key !== 'theme' && key !== 'innerRef';
};
var testAlwaysTrue = function testAlwaysTrue() {
  return true;
};
var omitAssign = function omitAssign(testFn, target) {
  var i = 2;
  var length = arguments.length;

  for (; i < length; i++) {
    var source = arguments[i];

    var _key = void 0;

    for (_key in source) {
      if (testFn(_key)) {
        target[_key] = source[_key];
      }
    }
  }

  return target;
};

function _componentWillMount() {
  if (this.context[channel] !== undefined) {
    this.unsubscribe = this.context[channel].subscribe(setTheme.bind(this));
  }
}

function _componentWillUnmount() {
  if (this.unsubscribe !== undefined) {
    this.context[channel].unsubscribe(this.unsubscribe);
  }
}

function _get(target, property) {
  switch (property) {
    // react-hot-loader tries to access this stuff
    case '__proto__':
    case 'name':
    case 'prototype':
    case 'displayName':
      {
        return target[property];
      }

    default:
      {
        throw new Error("You're trying to use the styled shorthand without babel-plugin-emotion." + ("\nPlease install and setup babel-plugin-emotion or use the function call syntax(`styled('" + property + "')` instead of `styled." + property + "`)"));
      }
  }
}

function createEmotionStyled(emotion, view) {
  var _createStyled = function createStyled(tag, options) {
    {
      if (tag === undefined) {
        throw new Error('You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.');
      }
    }

    var staticClassName;
    var identifierName;
    var stableClassName;

    if (options !== undefined) {
      staticClassName = options.e;
      identifierName = options.label;
      stableClassName = options.target;
    }

    var isReal = tag.__emotion_real === tag;
    var baseTag = staticClassName === undefined ? isReal && tag.__emotion_base || tag : tag;
    var omitFn = typeof baseTag === 'string' && baseTag.charAt(0) === baseTag.charAt(0).toLowerCase() ? testOmitPropsOnStringTag : testOmitPropsOnComponent;

    function _value() {
      if ("development" !== 'production' && stableClassName === undefined) {
        return 'NO_COMPONENT_SELECTOR';
      }

      return "." + stableClassName;
    }

    return function () {
      var args = arguments;
      var styles = isReal && tag[STYLES_KEY] !== undefined ? tag[STYLES_KEY].slice(0) : [];

      if (identifierName !== undefined) {
        styles.push("label:" + identifierName + ";");
      }

      if (staticClassName === undefined) {
        if (args[0] == null || args[0].raw === undefined) {
          styles.push.apply(styles, args);
        } else {
          styles.push(args[0][0]);
          var len = args.length;
          var i = 1;

          for (; i < len; i++) {
            styles.push(args[i], args[0][i]);
          }
        }
      }

      function _render() {
        var props = this.props,
            state = this.state;
        this.mergedProps = omitAssign(testAlwaysTrue, {}, props, {
          theme: state !== null && state.theme || props.theme || {}
        });
        var className = '';
        var classInterpolations = [];

        if (props.className) {
          if (staticClassName === undefined) {
            className += emotion.getRegisteredStyles(classInterpolations, props.className);
          } else {
            className += props.className + " ";
          }
        }

        if (staticClassName === undefined) {
          className += emotion.css.apply(this, styles.concat(classInterpolations));
        } else {
          className += staticClassName;
        }

        if (stableClassName !== undefined) {
          className += " " + stableClassName;
        }

        return view.createElement(baseTag, omitAssign(omitFn, {}, props, {
          className: className,
          ref: props.innerRef
        }));
      }

      var Styled =
      /*#__PURE__*/
      function (_view$Component) {
        _inheritsLoose(Styled, _view$Component);

        function Styled() {
          return _view$Component.apply(this, arguments) || this;
        }

        var _proto = Styled.prototype;
        _proto.componentWillMount = _componentWillMount;
        _proto.componentWillUnmount = _componentWillUnmount;
        _proto.render = _render;
        return Styled;
      }(view.Component);

      Styled.displayName = identifierName !== undefined ? identifierName : "Styled(" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + ")";
      Styled.contextTypes = contextTypes;
      Styled[STYLES_KEY] = styles;
      Styled.__emotion_base = baseTag;
      Styled.__emotion_real = Styled;
      Object.defineProperty(Styled, 'toString', {
        enumerable: false,
        value: _value
      });

      Styled.withComponent = function (nextTag, nextOptions) {
        return _createStyled(nextTag, nextOptions !== undefined ? // $FlowFixMe
        omitAssign(testAlwaysTrue, {}, options, nextOptions) : options).apply(void 0, styles);
      };

      return Styled;
    };
  };

  if ("development" !== 'production' && typeof Proxy !== 'undefined') {
    _createStyled = new Proxy(_createStyled, {
      get: _get
    });
  }

  return _createStyled;
}

var _ref$1 = {};
var hasOwnProperty = _ref$1.hasOwnProperty;

function hasOwn(prop, obj) {
	return hasOwnProperty.call(obj, prop);
}

var isArray = Array.isArray;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

function isObject(obj) {
	return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null && !isArray(obj);
}

function mapValues(iteratee, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		acc[key] = iteratee(obj[key]);
		return acc;
	}, {});
}

function compact(collection) {
	return isArray(collection) ? collection.filter(Boolean) : Object.keys(collection).reduce(function (result, key) {
		if (collection[key]) {
			result[key] = collection[key];
		}
		return result;
	}, {});
}

// eslint-disable-next-line consistent-return
function find(predicate, arr) {
	for (var index = 0; index < arr.length; index++) {
		var element = arr[index];
		if (predicate(element)) {
			return element;
		}
	}
}

function findIndex(predicate, arr) {
	for (var index = 0; index < arr.length; index++) {
		if (predicate(arr[index])) {
			return index;
		}
	}

	return -1;
}

// eslint-disable-next-line lodash-fp/prefer-identity
function identity(value) {
	return value;
}

function forOwn(callback, obj) {
	return Object.keys(obj).forEach(function (key) {
		callback(obj[key], key);
	});
}

function groupKeys(mapper, obj) {
	return Object.keys(obj).reduce(function (grouped, key) {
		var groupKey = mapper(key);
		grouped[groupKey] = grouped[groupKey] || {};
		grouped[groupKey][key] = obj[key];
		return grouped;
	}, {});
}

function isEmpty(collection) {
	return (isArray(collection) ? collection : Object.keys(collection)).length === 0;
}

function mapKeys(mapper, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		acc[mapper(key)] = obj[key];
		return acc;
	}, {});
}

function mapValuesIndexed(iteratee, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		acc[key] = iteratee(obj[key], key);
		return acc;
	}, {});
}

function merge(objA, objB) {
	if (isEmpty(objB)) {
		return objA;
	}

	var result = {};

	forOwn(function (value, key) {
		if (hasOwn(key, objB)) {
			if (isObject(objA[key]) && isObject(objB[key])) {
				result[key] = merge(objA[key], objB[key]);
			} else {
				result[key] = objB[key];
			}
		} else {
			result[key] = objA[key];
		}
	}, objA);

	forOwn(function (value, key) {
		if (!hasOwn(key, result)) {
			result[key] = objB[key];
		}
	}, objB);

	return result;
}

function mergeAll(objs) {
	if (objs.length === 0) {
		return {};
	}

	var first = objs[0],
	    rest = objs.slice(1);

	return rest.reduce(function (merged, obj) {
		return merge(merged, obj);
	}, first);
}

function memoize$1(func$$1) {
	var keys = [];
	var values = [];
	return function () {
		var key = arguments.length <= 0 ? undefined : arguments[0];
		var index = keys.indexOf(key);

		if (index !== -1) {
			return values[index];
		}

		var value = func$$1.apply(undefined, arguments);
		keys.push(key);
		values.push(value);
		return value;
	};
}

function memoize$1$1(fn) {
	var memoized = void 0;
	var cacheKey = void 0;
	return function () {
		if ((arguments.length <= 0 ? undefined : arguments[0]) === cacheKey) {
			return memoized;
		}
		cacheKey = arguments.length <= 0 ? undefined : arguments[0];
		memoized = fn.apply(undefined, arguments);
		return memoized;
	};
}

function noop() {}

function values(obj) {
	return Object.keys(obj).map(function (key) {
		return obj[key];
	});
}

function omitByIndexed(predicate, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		if (!predicate(obj[key], key)) {
			acc[key] = obj[key];
		}
		return acc;
	}, {});
}

function once(fn) {
	var called = false;
	var result = void 0;
	return function () {
		if (called) {
			return result;
		}
		called = true;
		return result = fn.apply(undefined, arguments);
	};
}

function pick(props, obj) {
	return props.reduce(function (acc, prop) {
		acc[prop] = obj[prop];
		return acc;
	}, {});
}

function pickBy(predicate, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		if (predicate(obj[key])) {
			acc[key] = obj[key];
		}
		return acc;
	}, {});
}

function pickByIndexed(predicate, obj) {
	return Object.keys(obj).reduce(function (acc, key) {
		if (predicate(obj[key], key)) {
			acc[key] = obj[key];
		}
		return acc;
	}, {});
}

function throttle(ms, fn) {
	var lastCall = Date.now() - 2 * ms;
	var result = void 0;
	var trailing = void 0;

	var invoke = function invoke() {
		lastCall = Date.now();
		return result = fn.apply(undefined, arguments);
	};

	return function () {
		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		var now = Date.now();

		if (now - lastCall >= ms) {
			return invoke.apply(undefined, args);
		}

		clearTimeout(trailing);
		trailing = setTimeout.apply(undefined, [invoke, lastCall - now + ms].concat(args));

		return result;
	};
}

var trailingWhiteSpace = /\s+$/;

function trimEnd(str) {
	return str.replace(trailingWhiteSpace, '');
}

var mapCommonPropsToStyles = (function (props) {
	var styles = {};

	if (props.flexFill) {
		styles.flexGrow = 1;
		styles.maxWidth = '100%';
	}

	if (props.flexFit) {
		if ("development" === 'development' && props.flexFill) {
			// eslint-disable-next-line no-console
			console.warn("Using flexFill & flexFit props together doesn't make sense.");
		}
		styles.flexGrow = 0;
	}

	if (props.noShrink) {
		styles.flexShrink = 0;
	}

	if (props.ellipsis) {
		styles.whiteSpace = 'nowrap';
		styles.overflow = 'hidden';
		styles.textOverflow = 'ellipsis';
	}

	if (props.nowrap) {
		styles.whiteSpace = 'nowrap';
	}

	if (props.textWrap) {
		var breakWord = 'break-word';
		styles.wordWrap = breakWord;
		styles.overflowWrap = breakWord;
		styles.wordBreak = breakWord;
	}

	return styles;
});

var hoistNonReactStatics = createCommonjsModule(function (module, exports) {
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
(function (global, factory) {
    module.exports = factory();
}(commonjsGlobal, (function () {
    var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        getDerivedStateFromProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };
    
    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
    };
    
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);
    
    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
            
            if (objectPrototype) {
                var inheritedComponent = getPrototypeOf(sourceComponent);
                if (inheritedComponent && inheritedComponent !== objectPrototype) {
                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                }
            }
            
            var keys = getOwnPropertyNames(sourceComponent);
            
            if (getOwnPropertySymbols) {
                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }
            
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                    try { // Avoid failures from read-only properties
                        defineProperty(targetComponent, key, descriptor);
                    } catch (e) {}
                }
            }
            
            return targetComponent;
        }
        
        return targetComponent;
    };
})));
});

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

// https://github.com/styled-components/styled-components/blob/e05b3fe247e9d956bcde786cec376e32afb85bca/src/utils/create-broadcast.js
var createBroadcast = function createBroadcast(initialState) {
  var listeners = {};
  var id = 0;
  var state = initialState;

  function publish(nextState) {
    state = nextState;

    for (var key in listeners) {
      // $FlowFixMe
      var listener = listeners[key];

      if (listener === undefined) {
        continue;
      }

      listener(state);
    }
  }

  function subscribe(listener) {
    var currentId = id;
    listeners[currentId] = listener;
    id += 1;
    listener(state);
    return currentId;
  }

  function unsubscribe(unsubID) {
    listeners[unsubID] = undefined;
  }

  return {
    publish: publish,
    subscribe: subscribe,
    unsubscribe: unsubscribe
  };
};

var channel$1 = '__EMOTION_THEMING__';

var _contextTypes$1;

var contextTypes$1 = (_contextTypes$1 = {}, _contextTypes$1[channel$1] = PropTypes__default.object, _contextTypes$1);

// adapted from styled-components' ThemeProvider
// https://github.com/styled-components/styled-components/blob/4503cab5b86aa9ef8314c5baa360a2fbb4812485/src/models/ThemeProvider.js
var isPlainObject = function isPlainObject(test) {
  return Object.prototype.toString.call(test) === '[object Object]';
};

function _componentWillMount$1() {
  var _this2 = this;

  function _ref2(theme) {
    _this2.outerTheme = theme;

    if (_this2.broadcast !== undefined) {
      _this2.publish(_this2.props.theme);
    }
  }

  // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme
  // with the outer theme
  if (this.context[channel$1] !== undefined) {
    this.unsubscribeToOuterId = this.context[channel$1].subscribe(_ref2);
  }

  this.broadcast = createBroadcast(this.getTheme(this.props.theme));
}

function _getChildContext() {
  var _ref;

  return _ref = {}, _ref[channel$1] = {
    subscribe: this.broadcast.subscribe,
    unsubscribe: this.broadcast.unsubscribe
  }, _ref;
}

function _componentWillReceive(nextProps) {
  if (this.props.theme !== nextProps.theme) {
    this.publish(nextProps.theme);
  }
}

function _componentWillUnmount$1() {
  var themeContext = this.context[channel$1];

  if (themeContext !== undefined) {
    themeContext.unsubscribe(this.unsubscribeToOuterId);
  }
}

function _getTheme(theme) {
  if (typeof theme === 'function') {
    var mergedTheme = theme(this.outerTheme);

    if (!isPlainObject(mergedTheme)) {
      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
    }

    return mergedTheme;
  }

  if (!isPlainObject(theme)) {
    throw new Error('[ThemeProvider] Please make your theme prop a plain object');
  }

  if (this.outerTheme === undefined) {
    return theme;
  }

  return _extends({}, this.outerTheme, theme);
}

function _publish(theme) {
  this.broadcast.publish(this.getTheme(theme));
}

function _render() {
  if (!this.props.children) {
    return null;
  }

  return React.Children.only(this.props.children);
}

var ThemeProvider =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose$1(ThemeProvider, _Component);

  function ThemeProvider() {
    var _this;

    _this = _Component.call(this) || this;
    _this.getTheme = _this.getTheme.bind(_this);
    return _this;
  }

  var _proto = ThemeProvider.prototype;
  _proto.componentWillMount = _componentWillMount$1;
  _proto.getChildContext = _getChildContext;
  _proto.componentWillReceiveProps = _componentWillReceive;
  _proto.componentWillUnmount = _componentWillUnmount$1; // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation

  _proto.getTheme = _getTheme;
  _proto.publish = _publish;
  _proto.render = _render;
  return ThemeProvider;
}(React.Component);

ThemeProvider.childContextTypes = contextTypes$1;
ThemeProvider.contextTypes = contextTypes$1;

function _componentWillMount$1$1() {
  var _this = this;

  var themeContext = this.context[channel$1];

  if (themeContext === undefined) {
    // eslint-disable-next-line no-console
    console.error('[withTheme] Please use ThemeProvider to be able to use withTheme');
    return;
  }

  this.unsubscribeId = themeContext.subscribe(function (theme) {
    _this.setState({
      theme: theme
    });
  });
}

function _componentWillUnmount$1$1() {
  if (this.unsubscribeId !== -1) {
    this.context[channel$1].unsubscribe(this.unsubscribeId);
  }
}

var withTheme = function withTheme(Component$$1) {
  var componentName = Component$$1.displayName || Component$$1.name || 'Component';

  function _render() {
    return React.createElement(Component$$1, _extends({
      theme: this.state.theme
    }, this.props));
  }

  var WithTheme =
  /*#__PURE__*/
  function (_React$Component) {
    _inheritsLoose$1(WithTheme, _React$Component);

    function WithTheme() {
      return _React$Component.apply(this, arguments) || this;
    }

    var _proto = WithTheme.prototype;
    _proto.componentWillMount = _componentWillMount$1$1;
    _proto.componentWillUnmount = _componentWillUnmount$1$1;
    _proto.render = _render;
    return WithTheme;
  }(React.Component);

  WithTheme.displayName = "WithTheme(" + componentName + ")";
  WithTheme.contextTypes = contextTypes$1;
  return hoistNonReactStatics(WithTheme, Component$$1);
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

var lib = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
var createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {
  var currentListeners = [];
  var nextListeners = currentListeners;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function listen(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function () {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function emit() {
    currentListeners = nextListeners;
    var listeners = currentListeners;
    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(listeners, arguments);
    }
  }

  return {
    listen: listen,
    emit: emit
  };
};
});

unwrapExports(lib);
var lib_1 = lib.createChangeEmitter;

function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
}

/* global window */
var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = symbolObservablePonyfill(root);

var setStatic = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */
    return BaseComponent;
  };
};

var setDisplayName = function setDisplayName(displayName) {
  return setStatic('displayName', displayName);
};

var getDisplayName = function getDisplayName(Component$$1) {
  if (typeof Component$$1 === 'string') {
    return Component$$1;
  }

  if (!Component$$1) {
    return undefined;
  }

  return Component$$1.displayName || Component$$1.name || 'Component';
};

var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + '(' + getDisplayName(BaseComponent) + ')';
};

var _typeof$1 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};











var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends$1 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};









var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var createEagerElementUtil = function createEagerElementUtil(hasKey, isReferentiallyTransparent, type, props, children) {
  if (!hasKey && isReferentiallyTransparent) {
    if (children) {
      return type(_extends$1({}, props, { children: children }));
    }
    return type(props);
  }

  var Component$$1 = type;

  if (children) {
    return React__default.createElement(
      Component$$1,
      props,
      children
    );
  }

  return React__default.createElement(Component$$1, props);
};

var isClassComponent = function isClassComponent(Component$$1) {
  return Boolean(Component$$1 && Component$$1.prototype && _typeof$1(Component$$1.prototype.isReactComponent) === 'object');
};

var isReferentiallyTransparentFunctionComponent = function isReferentiallyTransparentFunctionComponent(Component$$1) {
  return Boolean(typeof Component$$1 === 'function' && !isClassComponent(Component$$1) && !Component$$1.defaultProps && !Component$$1.contextTypes && ("development" === 'production' || !Component$$1.propTypes));
};

var createFactory = function createFactory(type) {
  var isReferentiallyTransparent = isReferentiallyTransparentFunctionComponent(type);
  return function (p, c) {
    return createEagerElementUtil(false, isReferentiallyTransparent, type, p, c);
  };
};

var mapProps = function mapProps(propsMapper) {
  return function (BaseComponent) {
    var factory = createFactory(BaseComponent);
    var MapProps = function MapProps(props) {
      return factory(propsMapper(props));
    };
    {
      return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps);
    }
    return MapProps;
  };
};

var Nothing = function (_Component) {
  inherits(Nothing, _Component);

  function Nothing() {
    classCallCheck(this, Nothing);
    return possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  Nothing.prototype.render = function render() {
    return null;
  };

  return Nothing;
}(React.Component);

Nothing.displayName = 'Nothing';

var isComponentKey = function isComponentKey(key) {
  return key.charAt(0) !== key.charAt(0).toLowerCase();
};

var _isComponentKey = function _isComponentKey(value, key) {
  return isComponentKey(key);
};
var omitComponentKeys = omitByIndexed.bind(null, _isComponentKey);
var pickComponentKeys = pickByIndexed.bind(null, _isComponentKey);

var classCallCheck$1 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends$2 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits$1 = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};









var objectWithoutProperties$1 = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn$1 = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var empty = {};

var unpackRest = function unpackRest(rest) {
	return groupKeys(function (key) {
		if (isComponentKey(key)) {
			return 'components';
		}

		if (isObject(rest[key])) {
			return 'propsDescriptions';
		}

		return 'themeProps';
	}, rest);
};

var unpackThemeDescription = (function (themeDescription) {
	if (!themeDescription) {
		return empty;
	}

	var css = themeDescription.css,
	    vars = themeDescription.vars,
	    rest = objectWithoutProperties$1(themeDescription, ['css', 'vars']);


	return _extends$2({ css: css, vars: vars }, unpackRest(rest));
});

var parsePropsDescriptions = function parsePropsDescriptions(componentName, props) {
	var propsDescriptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	var activeDescriptions = pickByIndexed(function (value, prop) {
		return props[prop];
	}, propsDescriptions);

	return Object.keys(activeDescriptions).map(function (prop) {
		var _componentDescription;

		var propDescription = activeDescriptions[prop];

		var _unpackThemeDescripti = unpackThemeDescription(propDescription),
		    themeProps = _unpackThemeDescripti.themeProps,
		    components = _unpackThemeDescripti.components;

		if (!themeProps) {
			return components;
		}

		var componentDescription = (_componentDescription = {}, _componentDescription[componentName] = themeProps, _componentDescription);

		if (!components) {
			return componentDescription;
		}

		return _extends$2({}, componentDescription, components);
	});
};

var mergeInnerTheme = function mergeInnerTheme(componentName) {
	return function (props) {
		return function (theme) {
			var componentDescription = theme[componentName];

			if (!componentDescription) {
				return theme;
			}

			var _unpackThemeDescripti2 = unpackThemeDescription(componentDescription),
			    propsDescriptions = _unpackThemeDescripti2.propsDescriptions,
			    components = _unpackThemeDescripti2.components;

			if (!propsDescriptions && !components) {
				return theme;
			}

			var activePropsDescriptions = parsePropsDescriptions(componentName, props, propsDescriptions);

			return mergeAll([theme, components].concat(activePropsDescriptions).filter(Boolean));
		};
	};
};

var withSubtheme = (function (WrappedComponent) {
	var _class, _temp;

	var wrappedName = WrappedComponent.__ui_kit_name;

	return _temp = _class = function (_React$Component) {
		inherits$1(WithSubtheme, _React$Component);

		function WithSubtheme() {
			classCallCheck$1(this, WithSubtheme);
			return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
		}

		WithSubtheme.prototype.render = function render() {
			return React.createElement(
				ThemeProvider,
				{ theme: WithSubtheme.mergeInnerTheme(this.props) },
				React.createElement(WrappedComponent, this.props)
			);
		};

		return WithSubtheme;
	}(React.Component), _class.displayName = 'WithSubtheme(' + wrappedName + ')', _class.mergeInnerTheme = mergeInnerTheme(wrappedName), _temp;
});

var styled = createEmotionStyled(emotion, React);

var registeredComponents = {};

var unpackCss = function unpackCss(props, css$$1) {
	var basedOnProps = pickBy(isObject, css$$1);

	if (Object.keys(basedOnProps) === 0) {
		return css$$1;
	}

	return compact(mapValuesIndexed(function (value, key) {
		if (!isObject(value)) {
			return value;
		}

		if (key[0] === ':') {
			return unpackCss(props, value);
		}

		var activeProp = find(function (prop) {
			return props[prop];
		}, Object.keys(value));

		// if ("development" !== 'production' && !activeProp && !value.default) {
		// 	console.warn(`This css description ("${JSON.stringify(value)}") has no default value.`)
		// }

		return value[activeProp] || value.default;
	}, css$$1));
};

var parseStyles = function parseStyles(props, componentName, mapPropsToStyles) {
	var theme = props.theme,
	    style = props.style;

	var _unpackThemeDescripti = unpackThemeDescription(theme[componentName]),
	    css$$1 = _unpackThemeDescripti.css,
	    componentVars = _unpackThemeDescripti.vars,
	    themeProps = _unpackThemeDescripti.themeProps;

	var vars = componentVars ? _extends$2({}, theme.vars, componentVars) : theme.vars;

	// TODO: should it be possible to specify common props in theme object?
	return [vars, typeof mapPropsToStyles === 'function' && themeProps !== undefined && mapPropsToStyles(themeProps), css$$1 && unpackCss(props, css$$1), mapCommonPropsToStyles(props), typeof mapPropsToStyles === 'function' && mapPropsToStyles(props), style];
};

var styled$1 = (function (component) {
	var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	var displayName = options.displayName,
	    displayType = options.displayType,
	    mapPropsToStyles = options.mapPropsToStyles;


	if ("development" !== 'production' && displayName) {
		if (registeredComponents[displayName]) {
			console.warn('"' + displayName + '" is already registered. Those names should be unique.');
		}
		registeredComponents[displayName] = true;
	}

	if ("development" !== 'production' && !displayName && options.section) {
		console.warn('For `section` components valid `displayName` is required.');
	}

	var factory = styled(component, options);

	return function () {
		for (var _len = arguments.length, styles = Array(_len), _key = 0; _key < _len; _key++) {
			styles[_key] = arguments[_key];
		}

		var name = displayName || displayType || null;
		var styledComponent = factory.apply(undefined, styles.concat([function (props) {
			return parseStyles(props, name, mapPropsToStyles);
		}]));
		styledComponent.__ui_kit_name = name;
		return options.section ? withSubtheme(styledComponent) : styledComponent;
	};
});

var getBottomFoldPosition = function getBottomFoldPosition(element) {
	return element.scrollTop + element.clientHeight;
};

var getOffsetTop = function getOffsetTop(element) {
	return element.getBoundingClientRect().top + window.pageYOffset;
};

// what about situation when element is not in container?
var isAboveFold = function isAboveFold(container, element) {
	return getOffsetTop(element) - getOffsetTop(container) + element.clientHeight <= container.clientHeight;
};

var isScrollOnBottom = function isScrollOnBottom(threshold, node$$1) {
	return Math.abs(node$$1.scrollTop + node$$1.offsetHeight - node$$1.scrollHeight) <= threshold;
};

var isScrollOnTop = function isScrollOnTop(threshold, node$$1) {
	return node$$1.scrollTop <= threshold;
};

// TODO: this should be de facto a separate package
var allowScrollEvent = function allowScrollEvent(event) {
	var currentTarget = event.currentTarget,
	    deltaY = event.deltaY;
	var scrollTop = currentTarget.scrollTop,
	    scrollHeight = currentTarget.scrollHeight;

	var scrollingDown = deltaY > 0;

	if (scrollingDown && deltaY > scrollHeight - getBottomFoldPosition(currentTarget)) {
		currentTarget.scrollTop = scrollHeight;
		return false;
	}

	if (!scrollingDown && -deltaY > scrollTop) {
		currentTarget.scrollTop = 0;
		return false;
	}

	event.stopPropagation();
	return true;
};

var containScrollInSubtree = function containScrollInSubtree(event) {
	var allowed = allowScrollEvent(event);

	if (allowed) {
		return;
	}

	event.preventDefault();
};



var ENTER_KEYCODE = 13;
var wasEnterPressed = function wasEnterPressed(event) {
	return event.which === ENTER_KEYCODE;
};
var wasNewLineIntended = function wasNewLineIntended(event) {
	return wasEnterPressed(event) && (event.altKey || event.shiftKey);
};
var wasOnlyEnterPressed = function wasOnlyEnterPressed(event) {
	return wasEnterPressed(event) && !event.altKey && !event.shiftKey;
};

var noop$1 = function noop$$1() {};

var withPinnedScroll = (function () {
	var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	    _ref$pinThreshold = _ref.pinThreshold,
	    pinThreshold = _ref$pinThreshold === undefined ? 20 : _ref$pinThreshold,
	    _ref$reverse = _ref.reverse,
	    reverse = _ref$reverse === undefined ? false : _ref$reverse;

	return function (WrappedComponent) {
		var _class, _temp2;

		return _temp2 = _class = function (_React$Component) {
			inherits$1(WithPinnedScroll, _React$Component);

			function WithPinnedScroll() {
				var _temp, _this, _ret;

				classCallCheck$1(this, WithPinnedScroll);

				for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
					args[_key] = arguments[_key];
				}

				return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._prevScrollTop = null, _this._shouldScrollToEdge = null, _this._scrollTopFromBottomFold = null, _this._getListRef = function (ref) {
					_this._listRef = ref;
					_this.props.innerRef(ref);
				}, _this._handleScroll = throttle(200, function (event) {
					var _this2 = _this,
					    props = _this2.props;

					props.onScroll(event);

					if (_this.isScrollOnBottom()) {
						props.onScrollBottom(event);
						return;
					}

					if (_this.isScrollOnTop()) {
						props.onScrollTop(event);
						return;
					}
				}), _this._handleWheel = function (event) {
					if (_this.props.containScrollInSubtree) {
						containScrollInSubtree(event);
					}
					_this.props.onWheel(event);
				}, _this.isScrollOnBottom = function () {
					return isScrollOnBottom(pinThreshold, _this._listRef);
				}, _this.isScrollOnTop = function () {
					return isScrollOnTop(pinThreshold, _this._listRef);
				}, _this.scrollToBottom = function () {
					var _this3 = _this,
					    node$$1 = _this3._listRef;

					node$$1.scrollTop = node$$1.scrollHeight;
				}, _this.scrollToTop = function () {
					var _this4 = _this,
					    node$$1 = _this4._listRef;

					node$$1.scrollTop = 0;
				}, _temp), possibleConstructorReturn$1(_this, _ret);
			}

			WithPinnedScroll.prototype.componentDidMount = function componentDidMount() {
				if (reverse) {
					return;
				}

				this.scrollToBottom();
			};

			WithPinnedScroll.prototype.componentWillUpdate = function componentWillUpdate() {
				var node$$1 = this._listRef;


				this._shouldScrollToEdge = (reverse ? isScrollOnTop : isScrollOnBottom)(pinThreshold, node$$1);

				if (!reverse) {
					this._prevScrollTop = node$$1.scrollTop;
					this._scrollTopFromBottomFold = Math.abs(node$$1.scrollTop - node$$1.scrollHeight);
				}
			};

			WithPinnedScroll.prototype.componentDidUpdate = function componentDidUpdate() {
				if (this._shouldScrollToEdge) {
					if (reverse) {
						this.scrollToTop();
					} else {
						this.scrollToBottom();
					}
				} else if (!reverse) {
					this._maybeRestoreScrollPosition();
				}

				this._prevScrollTop = null;
				this._shouldScrollToEdge = null;
				this._scrollTopFromBottomFold = null;
			};

			WithPinnedScroll.prototype._maybeRestoreScrollPosition = function _maybeRestoreScrollPosition() {
				var node$$1 = this._listRef;


				if (node$$1.scrollTop === this._prevScrollTop) {
					return;
				}

				node$$1.scrollTop = Math.abs(this._scrollTopFromBottomFold - node$$1.scrollHeight);
			};

			WithPinnedScroll.prototype.render = function render() {
				// eslint-disable-next-line no-unused-vars
				var _props = this.props,
				    containScrollInSubtreeProp = _props.containScrollInSubtree,
				    onScrollBottom = _props.onScrollBottom,
				    onScrollTop = _props.onScrollTop,
				    props = objectWithoutProperties$1(_props, ['containScrollInSubtree', 'onScrollBottom', 'onScrollTop']);


				return React.createElement(WrappedComponent, _extends$2({}, props, {
					innerRef: this._getListRef,
					isScrollOnBottom: this.isScrollOnBottom,
					isScrollOnTop: this.isScrollOnTop,
					onScroll: this._handleScroll,
					onWheel: this._handleWheel,
					scrollToBottom: this.scrollToBottom,
					scrollToTop: this.scrollToTop
				}));
			};

			return WithPinnedScroll;
		}(React.Component), _class.displayName = 'WithPinnedScroll(' + getDisplayName(WrappedComponent) + ')', _class.propTypes = {
			containScrollInSubtree: PropTypes.bool,
			innerRef: PropTypes.func,
			onScroll: PropTypes.func,
			onScrollBottom: PropTypes.func,
			onScrollTop: PropTypes.func,
			onWheel: PropTypes.func
		}, _class.defaultProps = {
			containScrollInSubtree: false,
			innerRef: noop$1,
			onScrollBottom: noop$1,
			onScrollTop: noop$1,
			onWheel: noop$1,
			onScroll: noop$1
		}, _temp2;
	};
});

var StyledList = /*#__PURE__*/styled$1('div', { displayName: 'ChatList', section: true, target: 'egyled90'
})();

var ChatList = withPinnedScroll({ reverse: true })(StyledList);

var mapPropsToStyles$1 = function mapPropsToStyles(props) {
	var styles = {};

	if (props.verticalAlign) {
		if (props.verticalAlign === 'top') {
			styles.alignItems = 'flex-start';
		} else if (props.verticalAlign === 'bottom') {
			styles.alignItems = 'flex-end';
		} else {
			styles.alignItems = props.verticalAlign;
		}
	}

	if (props.justify) {
		if (props.justify === true) {
			styles.justifyContent = 'space-between';
		} else if (props.justify === 'left') {
			styles.justifyContent = 'flex-start';
		} else if (props.justify === 'right') {
			styles.justifyContent = 'flex-end';
		} else {
			styles.justifyContent = props.justify;
		}
	}

	if (props.reverse) {
		styles.flexDirection = 'row-reverse';
	}

	return styles;
};

var StyledRow = /*#__PURE__*/styled$1('div', { mapPropsToStyles: mapPropsToStyles$1, target: 'e108e6fy0'
})('display:flex;min-width:0;');

var mapPropsToStyles = function mapPropsToStyles(props) {
	return {
		background: props.active ? 'rgba(0, 0, 0, 0.1)' : 'rgba(0, 0, 0, 0)'
	};
};

var StyledItem = /*#__PURE__*/styled$1(StyledRow, { displayName: 'ChatListItem', mapPropsToStyles: mapPropsToStyles, section: true, target: 'edumshe0'
})('padding:0.5em;transition:background 0.2s;border-bottom:1px solid rgba(0,0,0,0.1);&:hover{cursor:pointer;}');

var ChatListItem = function ChatListItem(props) {
	return React.createElement(StyledItem, props);
};

ChatListItem.propTypes = {
	active: PropTypes.bool,
	children: PropTypes.node.isRequired
};

var StyledBar = /*#__PURE__*/styled$1(StyledRow, { displayName: 'AgentBar', section: true, target: 'e1j58gbc0'
})('padding:1em;');

var AgentBar = function AgentBar(props) {
	return React.createElement(StyledBar, _extends$2({ verticalAlign: 'center' }, props));
};

AgentBar.propTypes = {
	children: PropTypes.node
};

var mapPropsToStyles$2 = function mapPropsToStyles(props) {
	var propsStyle = {};
	var imageStyle = {};

	var size = props.size,
	    radius = props.radius,
	    fontSize = props.fontSize;


	if (size) {
		propsStyle.width = size;
		propsStyle.height = size;
		propsStyle.lineHeight = size;
	}

	if (radius) {
		propsStyle.borderRadius = radius;

		imageStyle.borderRadius = radius;
	}

	if (fontSize) {
		propsStyle.fontSize = fontSize;
	}

	return _extends$2({}, propsStyle, { '& img': imageStyle });
};

var StyledAvatar = /*#__PURE__*/styled$1('div', { displayName: 'Avatar', mapPropsToStyles: mapPropsToStyles$2, target: 'e11ezd0e0'
})('border:1px solid #fff;border-radius:50%;text-align:center;background-color:#fff;text-transform:uppercase;img{display:block;border-radius:inherit;width:100%;height:100%;object-fit:cover;}');

var Avatar$1 = function Avatar(props) {
	var imgUrl = props.imgUrl,
	    letter = props.letter;

	var child = void 0;
	if (imgUrl) {
		child = React.createElement('img', { src: imgUrl });
	} else if (letter) {
		child = React.createElement(
			'span',
			null,
			letter
		);
	} else {
		{
			console.warn('Avatar component expects one of imgUrl or letter props.');
		}
		child = null;
	}
	return React.createElement(
		StyledAvatar,
		props,
		child
	);
};

Avatar$1.propTypes = {
	/** URL of the image */
	imgUrl: PropTypes.string,
	/** Letter to be used instead of the image (when imgUrl is not provided) */
	letter: PropTypes.string,
	/** Avatar size (width and height) */
	size: PropTypes.string,
	/** Override component's styles */
	style: PropTypes.shape()
};

var compactChildren = function compactChildren(children) {
	return React.Children.toArray(children).filter(Boolean);
};

var hasControlledProps = function hasControlledProps(controlledList, ownProps) {
	return values(pick(controlledList, ownProps)).filter(function (prop) {
		return prop !== undefined;
	}).length > 0;
};

var INHERIT = 'inherit';
var ZERO = '0';

var singleChildRadiuses = {
	borderTopLeftRadius: INHERIT,
	borderTopRightRadius: INHERIT,
	borderBottomRightRadius: INHERIT,
	borderBottomLeftRadius: INHERIT
};

var firstChildRadiuses = {
	borderTopLeftRadius: INHERIT,
	borderTopRightRadius: INHERIT,
	borderBottomRightRadius: ZERO,
	borderBottomLeftRadius: ZERO
};

var lastChildRadiuses = {
	borderTopLeftRadius: ZERO,
	borderTopRightRadius: ZERO,
	borderBottomRightRadius: INHERIT,
	borderBottomLeftRadius: INHERIT
};

var cloneWithMaybeStyle = function cloneWithMaybeStyle(element, styles) {
	return React.cloneElement(element, {
		style: !element.props.style ? styles : _extends$2({}, element.props.style, styles)
	});
};

var withPassthroughBorderRadiuses = (function (WrappedComponent) {
	var WithPassthroughBorderRadiuses = function (_React$Component) {
		inherits$1(WithPassthroughBorderRadiuses, _React$Component);

		function WithPassthroughBorderRadiuses() {
			classCallCheck$1(this, WithPassthroughBorderRadiuses);
			return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
		}

		WithPassthroughBorderRadiuses.prototype.render = function render() {
			var children = this.props.children;

			var compactedChildren = compactChildren(children);
			var childrenCount = React.Children.count(compactedChildren);

			return React.createElement(
				WrappedComponent,
				this.props,
				React.Children.map(compactedChildren, function (child, index) {
					if (childrenCount === 1) {
						return cloneWithMaybeStyle(child, singleChildRadiuses);
					}

					if (index === 0) {
						return cloneWithMaybeStyle(child, firstChildRadiuses);
					}

					if (index === childrenCount - 1) {
						return cloneWithMaybeStyle(child, lastChildRadiuses);
					}

					return child;
				})
			);
		};

		return WithPassthroughBorderRadiuses;
	}(React.Component);

	WithPassthroughBorderRadiuses.propTypes = {
		children: PropTypes.node.isRequired
	};


	return hoistNonReactStatics(WithPassthroughBorderRadiuses, WrappedComponent);
});

var withThemeProps = (function (WrappedComponent) {
	var wrappedName = WrappedComponent.__ui_kit_name;

	var WithThemeProps = function (_React$Component) {
		inherits$1(WithThemeProps, _React$Component);

		function WithThemeProps() {
			classCallCheck$1(this, WithThemeProps);
			return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
		}

		WithThemeProps.prototype.render = function render() {
			var _props = this.props,
			    theme = _props.theme,
			    props = objectWithoutProperties$1(_props, ['theme']);
			// eslint-disable-next-line no-unused-vars

			var _unpackThemeDescripti = unpackThemeDescription(theme[wrappedName]),
			    _unpackThemeDescripti2 = _unpackThemeDescripti.themeProps,
			    themeProps = _unpackThemeDescripti2 === undefined ? {} : _unpackThemeDescripti2;

			return React.createElement(WrappedComponent, _extends$2({}, themeProps, props));
		};

		return WithThemeProps;
	}(React.Component);

	WithThemeProps.displayName = 'WithThemeProps(' + wrappedName + ')';
	WithThemeProps.propTypes = { theme: PropTypes.shape() };


	return withTheme(WithThemeProps);
});

var flipBorderRadiusesHorizontally = function flipBorderRadiusesHorizontally(_ref) {
	var borderTopLeftRadius = _ref.borderTopLeftRadius,
	    borderTopRightRadius = _ref.borderTopRightRadius,
	    borderBottomRightRadius = _ref.borderBottomRightRadius,
	    borderBottomLeftRadius = _ref.borderBottomLeftRadius;
	return {
		borderTopLeftRadius: borderTopRightRadius,
		borderTopRightRadius: borderTopLeftRadius,
		borderBottomRightRadius: borderBottomLeftRadius,
		borderBottomLeftRadius: borderBottomRightRadius
	};
};

var mapPropsToStyles$3 = function mapPropsToStyles(props) {
	var isOwn = props.isOwn,
	    ovalBorderRadius = props.ovalBorderRadius,
	    sharpBorderRadius = props.sharpBorderRadius,
	    radiusType = props.radiusType;

	var borderRadiuses = {
		borderTopLeftRadius: radiusType === 'single' || radiusType === 'first' ? ovalBorderRadius : sharpBorderRadius,
		borderTopRightRadius: ovalBorderRadius,
		borderBottomRightRadius: ovalBorderRadius,
		borderBottomLeftRadius: radiusType === 'single' || radiusType === 'last' ? ovalBorderRadius : sharpBorderRadius

		// TODO maybe this could be reversed somehow in theme?
	};return isOwn ? flipBorderRadiusesHorizontally(borderRadiuses) : borderRadiuses;
};

var StyledBubble = /*#__PURE__*/styled$1('div', { displayName: 'Bubble', mapPropsToStyles: mapPropsToStyles$3, target: 'emwkn670'
})('border:1px solid rgba(0,0,0,0.05);display:inline-block;max-width:100%;margin-bottom:0.1em;& img{max-width:100%;display:block;}');

StyledBubble.propTypes = {
	/** Test of the message */
	children: PropTypes.node,
	/** Message auhor - me (right side) or their (left side) */
	isOwn: PropTypes.bool,
	/** Specifies rendering type, it's used for appropriate corners' rounding */
	radiusType: PropTypes.oneOf(['single', 'first', 'last'])
};

var Bubble$1 = withThemeProps(withPassthroughBorderRadiuses(StyledBubble));

var StyledColumn = /*#__PURE__*/styled$1('div', {
	target: 'ek650k30'
})('display:flex;flex-direction:column;min-width:0;');

var mapPropsToStyles$4 = function mapPropsToStyles(props) {
	return { flexShrink: props.shrink ? 1 : 0 };
};

var StyledFill = /*#__PURE__*/styled$1('div', { mapPropsToStyles: mapPropsToStyles$4, target: 'e1jdwequ0'
})();

var Fill$1 = function Fill(props) {
	return React.createElement(StyledFill, _extends$2({ flexFill: true }, props));
};

Fill$1.defaultProps = {
	shrink: true
};

Fill$1.propTypes = {
	shrink: PropTypes.bool
};

var mapPropsToStyles$5 = function mapPropsToStyles(props) {
	return { flexShrink: props.shrink ? 1 : 0 };
};

var StyledFit = /*#__PURE__*/styled$1('div', { mapPropsToStyles: mapPropsToStyles$5, target: 'e1yi1p4d0'
})();

var Fit$1 = function Fit(props) {
	return React.createElement(StyledFit, _extends$2({ flexFit: true }, props));
};

Fit$1.defaultProps = {
	shrink: true
};

Fit$1.propTypes = {
	shrink: PropTypes.bool
};

var StyledButton = /*#__PURE__*/styled$1('button', { displayName: 'IconButton', section: true, target: 'e1m5b1js0'
})('appearance:none;background:transparent;border:0;display:inline-block;margin:0;padding:0.5em;color:inherit;&:hover{cursor:', function (props) {
	return props.disabled ? 'default' : 'pointer';
}, ';}&:active,&:focus{outline:none;}');

StyledButton.propTypes = {
	active: PropTypes.bool,
	disabled: PropTypes.bool,
	children: PropTypes.node.isRequired,
	color: PropTypes.string,
	onClick: PropTypes.func
};

var hasClass_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hasClass;
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
module.exports = exports["default"];
});

unwrapExports(hasClass_1);

var addClass_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = addClass;



var _hasClass2 = _interopRequireDefault(hasClass_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}
module.exports = exports['default'];
});

unwrapExports(addClass_1);

function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

var removeClass = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

var PropTypes$1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = undefined;
exports.transitionTimeout = transitionTimeout;



var _propTypes2 = _interopRequireDefault(PropTypes__default);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;

  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

        // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var timeoutsShape = exports.timeoutsShape = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({
  enter: _propTypes2.default.number,
  exit: _propTypes2.default.number
}).isRequired]);

var classNamesShape = exports.classNamesShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  exit: _propTypes2.default.string,
  active: _propTypes2.default.string
}), _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  enterDone: _propTypes2.default.string,
  enterActive: _propTypes2.default.string,
  exit: _propTypes2.default.string,
  exitDone: _propTypes2.default.string,
  exitActive: _propTypes2.default.string
})]);
});

unwrapExports(PropTypes$1);
var PropTypes_1 = PropTypes$1.classNamesShape;
var PropTypes_2 = PropTypes$1.timeoutsShape;
var PropTypes_3 = PropTypes$1.transitionTimeout;

var Transition_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;



var PropTypes$$1 = _interopRequireWildcard(PropTypes__default);



var _react2 = _interopRequireDefault(React__default);



var _reactDom2 = _interopRequireDefault(reactDom);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UNMOUNTED = exports.UNMOUNTED = 'unmounted';
var EXITED = exports.EXITED = 'exited';
var ENTERING = exports.ENTERING = 'entering';
var ENTERED = exports.ENTERED = 'entered';
var EXITING = exports.EXITING = 'exiting';

/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the components.
 * It's up to you to give meaning and effect to those states. For example we can
 * add styles to a component when it enters or exits:
 *
 * ```jsx
 * import Transition from 'react-transition-group/Transition';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {(state) => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * As noted the `Transition` component doesn't _do_ anything by itself to its child component.
 * What it does do is track transition states over time so you can update the
 * component (such as by adding styles or classes) when it changes states.
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component begins the
 * "Enter" stage. During this stage, the component will shift from its current transition state,
 * to `'entering'` for the duration of the transition and then to the `'entered'` stage once
 * it's complete. Let's take the following example:
 *
 * ```jsx
 * state = { in: false };
 *
 * toggleEnterState = () => {
 *   this.setState({ in: true });
 * }
 *
 * render() {
 *   return (
 *     <div>
 *       <Transition in={this.state.in} timeout={500} />
 *       <button onClick={this.toggleEnterState}>Click to Enter</button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state and
 * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.
 *
 * ## Timing
 *
 * Timing is often the trickiest part of animation, mistakes can result in slight delays
 * that are hard to pin down. A common example is when you want to add an exit transition,
 * you should set the desired final styles when the state is `'exiting'`. That's when the
 * transition to those styles will start and, if you matched the `timeout` prop with the
 * CSS Transition duration, it will end exactly when the state changes to `'exited'`.
 *
 * > **Note**: For simpler transitions the `Transition` component might be enough, but
 * > take into account that it's platform-agnostic, while the `CSSTransition` component
 * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * > in order to make more complex transitions more predictable. For example, even though
 * > classes `example-enter` and `example-enter-active` are applied immediately one after
 * > another, you can still transition from one to the other because of the forced reflow
 * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)
 * > for more info). Take this into account when choosing between `Transition` and
 * > `CSSTransition`.
 *
 * ## Example
 *
 * <iframe src="https://codesandbox.io/embed/741op4mmj0?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
 *
 */

var Transition = function (_React$Component) {
  _inherits(Transition, _React$Component);

  function Transition(props, context) {
    _classCallCheck(this, Transition);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    var parentGroup = context.transitionGroup;
    // In the context of a TransitionGroup all enters are really appears
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;

    var initialStatus = void 0;
    _this.nextStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.nextStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = { status: initialStatus };

    _this.nextCallback = null;
    return _this;
  }

  Transition.prototype.getChildContext = function getChildContext() {
    return { transitionGroup: null }; // allows for nested Transitions
  };

  Transition.prototype.componentDidMount = function componentDidMount() {
    this.updateStatus(true);
  };

  Transition.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _ref = this.pendingState || this.state,
        status = _ref.status;

    if (nextProps.in) {
      if (status === UNMOUNTED) {
        this.setState({ status: EXITED });
      }
      if (status !== ENTERING && status !== ENTERED) {
        this.nextStatus = ENTERING;
      }
    } else {
      if (status === ENTERING || status === ENTERED) {
        this.nextStatus = EXITING;
      }
    }
  };

  Transition.prototype.componentDidUpdate = function componentDidUpdate() {
    this.updateStatus();
  };

  Transition.prototype.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  Transition.prototype.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;

    var exit = void 0,
        enter = void 0,
        appear = void 0;

    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter;
      appear = timeout.appear;
    }
    return { exit: exit, enter: enter, appear: appear };
  };

  Transition.prototype.updateStatus = function updateStatus() {
    var mounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var nextStatus = this.nextStatus;

    if (nextStatus !== null) {
      this.nextStatus = null;
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();
      var node$$1 = _reactDom2.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node$$1, mounting);
      } else {
        this.performExit(node$$1);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({ status: UNMOUNTED });
    }
  };

  Transition.prototype.performEnter = function performEnter(node$$1, mounting) {
    var _this2 = this;

    var enter = this.props.enter;

    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;

    var timeouts = this.getTimeouts();

    // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set
    if (!mounting && !enter) {
      this.safeSetState({ status: ENTERED }, function () {
        _this2.props.onEntered(node$$1);
      });
      return;
    }

    this.props.onEnter(node$$1, appearing);

    this.safeSetState({ status: ENTERING }, function () {
      _this2.props.onEntering(node$$1, appearing);

      // FIXME: appear timeout?
      _this2.onTransitionEnd(node$$1, timeouts.enter, function () {
        _this2.safeSetState({ status: ENTERED }, function () {
          _this2.props.onEntered(node$$1, appearing);
        });
      });
    });
  };

  Transition.prototype.performExit = function performExit(node$$1) {
    var _this3 = this;

    var exit = this.props.exit;

    var timeouts = this.getTimeouts();

    // no exit animation skip right to EXITED
    if (!exit) {
      this.safeSetState({ status: EXITED }, function () {
        _this3.props.onExited(node$$1);
      });
      return;
    }
    this.props.onExit(node$$1);

    this.safeSetState({ status: EXITING }, function () {
      _this3.props.onExiting(node$$1);

      _this3.onTransitionEnd(node$$1, timeouts.exit, function () {
        _this3.safeSetState({ status: EXITED }, function () {
          _this3.props.onExited(node$$1);
        });
      });
    });
  };

  Transition.prototype.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  Transition.prototype.safeSetState = function safeSetState(nextState, callback) {
    var _this4 = this;

    // We need to track pending updates for instances where a cWRP fires quickly
    // after cDM and before the state flushes, which would double trigger a
    // transition
    this.pendingState = nextState;

    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, function () {
      _this4.pendingState = null;
      callback();
    });
  };

  Transition.prototype.setNextCallback = function setNextCallback(callback) {
    var _this5 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this5.nextCallback = null;

        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  Transition.prototype.onTransitionEnd = function onTransitionEnd(node$$1, timeout, handler) {
    this.setNextCallback(handler);

    if (node$$1) {
      if (this.props.addEndListener) {
        this.props.addEndListener(node$$1, this.nextCallback);
      }
      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    } else {
      setTimeout(this.nextCallback, 0);
    }
  };

  Transition.prototype.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }

    var _props = this.props,
        children = _props.children,
        childProps = _objectWithoutProperties(_props, ['children']);
    // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react2.default.Children.only(children);
    return _react2.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react2.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes$$1.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};


Transition.propTypes = {
  /**
   * A `function` child can be used instead of a React element.
   * This function is called with the current transition status
   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used
   * to apply context specific props to a component.
   *
   * ```jsx
   * <Transition timeout={150}>
   *   {(status) => (
   *     <MyComponent className={`fade fade-${status}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes$$1.oneOfType([PropTypes$$1.func.isRequired, PropTypes$$1.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes$$1.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes$$1.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes$$1.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes$$1.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes$$1.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes$$1.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided
   *
   * You may specify a single timeout for all transitions like: `timeout={500}`,
   * or individually like:
   *
   * ```jsx
   * timeout={{
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * @type {number | { enter?: number, exit?: number }}
   */
  timeout: function timeout(props) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var pt = PropTypes$1.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;
    return pt.apply(undefined, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes$$1.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes$$1.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$$1.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes$$1.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes$$1.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes$$1.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes$$1.func
};

// Name the function so it is clearer in the documentation
function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,

  onEnter: noop,
  onEntering: noop,
  onEntered: noop,

  onExit: noop,
  onExiting: noop,
  onExited: noop
};

Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

exports.default = Transition;
});

unwrapExports(Transition_1);
var Transition_2 = Transition_1.EXITING;
var Transition_3 = Transition_1.ENTERED;
var Transition_4 = Transition_1.ENTERING;
var Transition_5 = Transition_1.EXITED;
var Transition_6 = Transition_1.UNMOUNTED;

var CSSTransition_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var PropTypes$$1 = _interopRequireWildcard(PropTypes__default);



var _addClass2 = _interopRequireDefault(addClass_1);



var _removeClass2 = _interopRequireDefault(removeClass);



var _react2 = _interopRequireDefault(React__default);



var _Transition2 = _interopRequireDefault(Transition_1);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var addClass = function addClass(node$$1, classes) {
  return node$$1 && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass2.default)(node$$1, c);
  });
};
var removeClass$$1 = function removeClass$$1(node$$1, classes) {
  return node$$1 && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass2.default)(node$$1, c);
  });
};

var propTypes = _extends({}, _Transition2.default.propTypes, {

  /**
   * The animation classNames applied to the component as it enters, exits or has finished the transition.
   * A single name can be provided and it will be suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,
   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: PropTypes$1.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes$$1.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes$$1.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes$$1.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes$$1.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement
   */
  onExiting: PropTypes$$1.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes$$1.func
});

/**
 * A `Transition` component using CSS transitions and animations.
 * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` stages of the transition. The first class is applied and then a
 * second "active" class in order to activate the css animation. After the animation,
 * matching `done` class names are applied to persist the animation state.
 *
 * When the `in` prop is toggled to `true` the Component will get
 * the `example-enter` CSS class and the `example-enter-active` CSS class
 * added in the next tick. This is a convention based on the `classNames` prop.
 *
 * ## Example
 *
 * <iframe src="https://codesandbox.io/embed/m77l2vp00x?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
 */

var CSSTransition = function (_React$Component) {
  _inherits(CSSTransition, _React$Component);

  function CSSTransition() {
    var _temp, _this, _ret;

    _classCallCheck(this, CSSTransition);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node$$1, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node$$1, 'exit');
      addClass(node$$1, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node$$1);
      }
    }, _this.onEntering = function (node$$1, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node$$1, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node$$1);
      }
    }, _this.onEntered = function (node$$1, appearing) {
      var _this$getClassNames3 = _this.getClassNames('enter'),
          doneClassName = _this$getClassNames3.doneClassName;

      _this.removeClasses(node$$1, appearing ? 'appear' : 'enter');
      addClass(node$$1, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node$$1);
      }
    }, _this.onExit = function (node$$1) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          className = _this$getClassNames4.className;

      _this.removeClasses(node$$1, 'appear');
      _this.removeClasses(node$$1, 'enter');
      addClass(node$$1, className);

      if (_this.props.onExit) {
        _this.props.onExit(node$$1);
      }
    }, _this.onExiting = function (node$$1) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames5.activeClassName;

      _this.reflowAndAddClass(node$$1, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node$$1);
      }
    }, _this.onExited = function (node$$1) {
      var _this$getClassNames6 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames6.doneClassName;

      _this.removeClasses(node$$1, 'exit');
      addClass(node$$1, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node$$1);
      }
    }, _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;


      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;

      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';

      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';

      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  CSSTransition.prototype.removeClasses = function removeClasses(node$$1, type) {
    var _getClassNames = this.getClassNames(type),
        className = _getClassNames.className,
        activeClassName = _getClassNames.activeClassName,
        doneClassName = _getClassNames.doneClassName;

    className && removeClass$$1(node$$1, className);
    activeClassName && removeClass$$1(node$$1, activeClassName);
    doneClassName && removeClass$$1(node$$1, doneClassName);
  };

  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node$$1, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    /* eslint-disable no-unused-expressions */
    node$$1 && node$$1.scrollTop;
    /* eslint-enable no-unused-expressions */
    addClass(node$$1, className);
  };

  CSSTransition.prototype.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;

    return _react2.default.createElement(_Transition2.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react2.default.Component);

CSSTransition.propTypes = propTypes;

exports.default = CSSTransition;
module.exports = exports['default'];
});

unwrapExports(CSSTransition_1);

var ChildMapping = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;



/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, React__default.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) React__default.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }

  // For each key of `next`, the list of keys to insert before that key in
  // the combined list
  var nextKeysPending = Object.create(null);

  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i = void 0;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }

  // Finally, add the keys which didn't appear before any key in `next`
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}
});

unwrapExports(ChildMapping);
var ChildMapping_1 = ChildMapping.getChildMapping;
var ChildMapping_2 = ChildMapping.mergeChildMappings;

var TransitionGroup_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var _propTypes2 = _interopRequireDefault(PropTypes__default);



var _react2 = _interopRequireDefault(React__default);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var propTypes = {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes2.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   */
  children: _propTypes2.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes2.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes2.default.bool,
  /**
    * A convenience prop that enables or disables exit animations
    * for all children. Note that specifying this will override any defaults set
    * on individual children Transitions.
    */
  exit: _propTypes2.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes2.default.func
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};

/**
 * The `<TransitionGroup>` component manages a set of `<Transition>` components
 * in a list. Like with the `<Transition>` component, `<TransitionGroup>`, is a
 * state machine for managing the mounting and unmounting of components over
 * time.
 *
 * Consider the example below using the `Fade` CSS transition from before.
 * As items are removed or added to the TodoList the `in` prop is toggled
 * automatically by the `<TransitionGroup>`. You can use _any_ `<Transition>`
 * component in a `<TransitionGroup>`, not just css.
 *
 * ## Example
 *
 * <iframe src="https://codesandbox.io/embed/00rqyo26kn?fontsize=14" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual `<Transition>`
 * components. This means you can mix and match animations across different
 * list items.
 */

var TransitionGroup = function (_React$Component) {
  _inherits(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    _classCallCheck(this, TransitionGroup);

    // Initial children should all be entering, dependent on appear
    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    _this.state = {
      children: (0, ChildMapping.getChildMapping)(props.children, function (child) {
        return (0, React__default.cloneElement)(child, {
          onExited: _this.handleExited.bind(_this, child),
          in: true,
          appear: _this.getProp(child, 'appear'),
          enter: _this.getProp(child, 'enter'),
          exit: _this.getProp(child, 'exit')
        });
      })
    };
    return _this;
  }

  TransitionGroup.prototype.getChildContext = function getChildContext() {
    return {
      transitionGroup: { isMounting: !this.appeared }
    };
  };
  // use child config unless explictly set by the Group


  TransitionGroup.prototype.getProp = function getProp(child, prop) {
    var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props;

    return props[prop] != null ? props[prop] : child.props[prop];
  };

  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    var prevChildMapping = this.state.children;
    var nextChildMapping = (0, ChildMapping.getChildMapping)(nextProps.children);

    var children = (0, ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping);

    Object.keys(children).forEach(function (key) {
      var child = children[key];

      if (!(0, React__default.isValidElement)(child)) return;

      var hasPrev = key in prevChildMapping;
      var hasNext = key in nextChildMapping;

      var prevChild = prevChildMapping[key];
      var isLeaving = (0, React__default.isValidElement)(prevChild) && !prevChild.props.in;

      // item is new (entering)
      if (hasNext && (!hasPrev || isLeaving)) {
        // console.log('entering', key)
        children[key] = (0, React__default.cloneElement)(child, {
          onExited: _this2.handleExited.bind(_this2, child),
          in: true,
          exit: _this2.getProp(child, 'exit', nextProps),
          enter: _this2.getProp(child, 'enter', nextProps)
        });
      }
      // item is old (exiting)
      else if (!hasNext && hasPrev && !isLeaving) {
          // console.log('leaving', key)
          children[key] = (0, React__default.cloneElement)(child, { in: false });
        }
        // item hasn't changed transition states
        // copy over the last transition props;
        else if (hasNext && hasPrev && (0, React__default.isValidElement)(prevChild)) {
            // console.log('unchanged', key)
            children[key] = (0, React__default.cloneElement)(child, {
              onExited: _this2.handleExited.bind(_this2, child),
              in: prevChild.props.in,
              exit: _this2.getProp(child, 'exit', nextProps),
              enter: _this2.getProp(child, 'enter', nextProps)
            });
          }
    });

    this.setState({ children: children });
  };

  TransitionGroup.prototype.handleExited = function handleExited(child, node$$1) {
    var currentChildMapping = (0, ChildMapping.getChildMapping)(this.props.children);

    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node$$1);
    }

    this.setState(function (state) {
      var children = _extends({}, state.children);

      delete children[child.key];
      return { children: children };
    });
  };

  TransitionGroup.prototype.render = function render() {
    var _props = this.props,
        Component$$1 = _props.component,
        childFactory = _props.childFactory,
        props = _objectWithoutProperties(_props, ['component', 'childFactory']);

    var children = values(this.state.children).map(childFactory);

    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component$$1 === null) {
      return children;
    }
    return _react2.default.createElement(
      Component$$1,
      props,
      children
    );
  };

  return TransitionGroup;
}(_react2.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes2.default.object.isRequired
};


TransitionGroup.propTypes = propTypes;
TransitionGroup.defaultProps = defaultProps;

exports.default = TransitionGroup;
module.exports = exports['default'];
});

unwrapExports(TransitionGroup_1);

var ReplaceTransition_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;



var _propTypes2 = _interopRequireDefault(PropTypes__default);



var _react2 = _interopRequireDefault(React__default);





var _TransitionGroup2 = _interopRequireDefault(TransitionGroup_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  in: _propTypes2.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react2.default.Children.count(props[propName]) !== 2) return new Error('"' + propName + '" must be exactly two transition components.');

    return null;
  }
};

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

var ReplaceTransition = function (_React$Component) {
  _inherits(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _temp, _this, _ret;

    _classCallCheck(this, ReplaceTransition);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
  }

  ReplaceTransition.prototype.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react2.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, reactDom.findDOMNode)(this));
  };

  ReplaceTransition.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        inProp = _props.in,
        props = _objectWithoutProperties(_props, ['children', 'in']);

    var _React$Children$toArr = _react2.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;

    return _react2.default.createElement(
      _TransitionGroup2.default,
      props,
      inProp ? _react2.default.cloneElement(first, {
        key: 'first',
        onEnter: this.handleEnter,
        onEntering: this.handleEntering,
        onEntered: this.handleEntered

      }) : _react2.default.cloneElement(second, {
        key: 'second',
        onEnter: this.handleExit,
        onEntering: this.handleExiting,
        onEntered: this.handleExited
      })
    );
  };

  return ReplaceTransition;
}(_react2.default.Component);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.handleEnter = function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _this2.handleLifecycle('onEnter', 0, args);
  };

  this.handleEntering = function () {
    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _this2.handleLifecycle('onEntering', 0, args);
  };

  this.handleEntered = function () {
    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    return _this2.handleLifecycle('onEntered', 0, args);
  };

  this.handleExit = function () {
    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    return _this2.handleLifecycle('onExit', 1, args);
  };

  this.handleExiting = function () {
    for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }

    return _this2.handleLifecycle('onExiting', 1, args);
  };

  this.handleExited = function () {
    for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
      args[_key7] = arguments[_key7];
    }

    return _this2.handleLifecycle('onExited', 1, args);
  };
};

ReplaceTransition.propTypes = propTypes;

exports.default = ReplaceTransition;
module.exports = exports['default'];
});

unwrapExports(ReplaceTransition_1);

var reactTransitionGroup = createCommonjsModule(function (module) {
var _CSSTransition2 = _interopRequireDefault(CSSTransition_1);



var _ReplaceTransition2 = _interopRequireDefault(ReplaceTransition_1);



var _TransitionGroup2 = _interopRequireDefault(TransitionGroup_1);



var _Transition2 = _interopRequireDefault(Transition_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition2.default,
  TransitionGroup: _TransitionGroup2.default,
  ReplaceTransition: _ReplaceTransition2.default,
  CSSTransition: _CSSTransition2.default
};
});

unwrapExports(reactTransitionGroup);
var reactTransitionGroup_1 = reactTransitionGroup.Transition;
var reactTransitionGroup_2 = reactTransitionGroup.TransitionGroup;
var reactTransitionGroup_3 = reactTransitionGroup.ReplaceTransition;
var reactTransitionGroup_4 = reactTransitionGroup.CSSTransition;

var classCallCheck$2 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass$1 = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var _extends$3 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits$2 = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn$2 = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var callAll = function () {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return fns.forEach(function (fn) {
      return fn && fn.apply(undefined, args);
    });
  };
};
var noop$2 = function () {};

var Toggle = function (_Component) {
  inherits$2(Toggle, _Component);

  function Toggle() {
    var _ref;

    var _temp, _this, _ret;

    classCallCheck$2(this, Toggle);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn$2(this, (_ref = Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      on: _this.getOn({ on: _this.props.defaultOn })
    }, _this.getTogglerProps = function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _extends$3({
        'aria-expanded': Boolean(_this.getOn()),
        tabIndex: 0
      }, props, {
        onClick: callAll(props.onClick, _this.toggle)
      });
    }, _this.toggleKeys = ['Enter', ' '], _this.getInputTogglerProps = function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _this.getTogglerProps(_extends$3({}, props, {
        onKeyUp: callAll(props.onKeyUp, function (event) {
          if (event.key === 'Enter') {
            // <input> already respond to Enter
            _this.toggle();
          }
        })
      }));
    }, _this.getElementTogglerProps = function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _this.getTogglerProps(_extends$3({}, props, {
        onKeyUp: callAll(props.onKeyUp, function (event) {
          if (_this.toggleKeys.indexOf(event.key) > -1) {
            _this.toggle();
          }
        })
      }));
    }, _this.setOnState = function () {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !_this.getOn();

      var cb = _this.getOn() === state ? noop$2 : function () {
        _this.props.onToggle(state, _this.getTogglerStateAndHelpers());
      };
      _this.setState({ on: state }, cb);
    }, _this.setOn = _this.setOnState.bind(_this, true), _this.setOff = _this.setOnState.bind(_this, false), _this.toggle = _this.setOnState.bind(_this, undefined), _temp), possibleConstructorReturn$2(_this, _ret);
  }

  createClass$1(Toggle, [{
    key: 'getOn',
    value: function getOn() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;
      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;

      return this.isOnControlled() ? props.on : state.on;
    }
  }, {
    key: 'isOnControlled',
    value: function isOnControlled() {
      return this.props.on !== undefined;
    } // This matches <button> behavior

  }, {
    key: 'getTogglerStateAndHelpers',
    value: function getTogglerStateAndHelpers() {
      return {
        on: this.getOn(),
        getTogglerProps: this.getTogglerProps,
        getInputTogglerProps: this.getInputTogglerProps,
        getElementTogglerProps: this.getElementTogglerProps,
        setOn: this.setOn,
        setOff: this.setOff,
        toggle: this.toggle
      };
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(_ref2) {
      var on = _ref2.on;

      if (on !== this.props.on && on !== this.state.on) {
        this.setOnState(on);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var renderProp = unwrapArray(this.props.children);
      return renderProp(this.getTogglerStateAndHelpers());
    }
  }]);
  return Toggle;
}(React.Component);

/**
 * Takes an argument and if it's an array, returns the first item in the array
 * otherwise returns the argument
 * @param {*} arg the maybe-array
 * @return {*} the arg or it's first item
 */


Toggle.propTypes = {
  defaultOn: PropTypes__default.bool,
  on: PropTypes__default.bool,
  onToggle: PropTypes__default.func,
  children: PropTypes__default.oneOfType([PropTypes__default.func, PropTypes__default.array]).isRequired
};
Toggle.defaultProps = {
  defaultOn: false,
  onToggle: noop$2
};
function unwrapArray(arg) {
  return Array.isArray(arg) ? arg[0] : arg;
}

function createCommonjsModule$1(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

var emptyFunction_1 = emptyFunction;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

{
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

var invariant_1 = invariant;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction_1;

{
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var warning_1 = warning;

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$2.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

{
  var invariant$1 = invariant_1;
  var warning$1 = warning_1;
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

var checkPropTypes_1 = checkPropTypes;

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant_1(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning_1(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');
      return emptyFunction_1.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');
      return emptyFunction_1.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning_1(
          false,
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction_1.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule$1(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

{
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);
}
});

/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var NODE_ENV = "development";

var invariant$3 = function(condition, format, a, b, c, d, e, f) {
  if (NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

var invariant_1$2 = invariant$3;

/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = "development" !== 'production';

var warning$2 = function() {};

if (__DEV__) {
  warning$2 = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

var warning_1$2 = warning$2;

function createDeprecationWarning() {
  var alreadyWarned = false;
  return function (message) {
    warning_1$2(alreadyWarned, message);
    alreadyWarned = true;
  };
}

var classCallCheck$3 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};









var _extends$4 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



var inherits$3 = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};











var possibleConstructorReturn$3 = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var deprecationWarning = createDeprecationWarning();

function createBroadcast$1(initialValue) {
  var currentValue = initialValue;
  var subscribers = [];

  var getValue = function getValue() {
    return currentValue;
  };

  var publish = function publish(state) {
    currentValue = state;
    subscribers.forEach(function (s) {
      return s(currentValue);
    });
  };

  var subscribe = function subscribe(subscriber) {
    subscribers.push(subscriber);

    return function () {
      subscribers = subscribers.filter(function (s) {
        return s !== subscriber;
      });
    };
  };

  return {
    getValue: getValue,
    publish: publish,
    subscribe: subscribe
  };
}

/**
 * A <Broadcast> provides a generic way for descendants to "subscribe"
 * to some value that changes over time, bypassing any intermediate
 * shouldComponentUpdate's in the hierarchy. It puts all subscription
 * functions on context.broadcasts, keyed by "channel".
 *
 * To use it, a subscriber must opt-in to context.broadcasts. See the
 * <Subscriber> component for a reference implementation.
 */

var Broadcast = function (_React$Component) {
  inherits$3(Broadcast, _React$Component);

  function Broadcast() {
    var _temp, _this, _ret;

    classCallCheck$3(this, Broadcast);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn$3(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.broadcast = createBroadcast$1(_this.props.value), _temp), possibleConstructorReturn$3(_this, _ret);
  }

  Broadcast.prototype.getChildContext = function getChildContext() {
    var _babelHelpers$extends;

    return {
      broadcasts: _extends$4({}, this.context.broadcasts, (_babelHelpers$extends = {}, _babelHelpers$extends[this.props.channel] = this.broadcast, _babelHelpers$extends))
    };
  };

  Broadcast.prototype.componentWillMount = function componentWillMount() {
    deprecationWarning("<Broadcast> is deprecated and will be removed in the next major release. " + "Please use createContext instead. See https://goo.gl/QAF37J for more info.");
  };

  Broadcast.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    invariant_1$2(this.props.channel === nextProps.channel, "You cannot change <Broadcast channel>");

    if (!this.props.compareValues(this.props.value, nextProps.value)) {
      this.broadcast.publish(nextProps.value);
    }
  };

  Broadcast.prototype.render = function render() {
    return React__default.Children.only(this.props.children);
  };

  return Broadcast;
}(React__default.Component);

Broadcast.propTypes = {
  channel: propTypes.string.isRequired,
  children: propTypes.node.isRequired,
  compareValues: propTypes.func,
  value: propTypes.any
};
Broadcast.defaultProps = {
  compareValues: function compareValues(prevValue, nextValue) {
    return prevValue === nextValue;
  }
};
Broadcast.contextTypes = {
  broadcasts: propTypes.object
};
Broadcast.childContextTypes = {
  broadcasts: propTypes.object.isRequired
};

var deprecationWarning$1 = createDeprecationWarning();

/**
 * A <Subscriber> pulls the value for a channel off of context.broadcasts
 * and passes it to its children function.
 */

var Subscriber = function (_React$Component) {
  inherits$3(Subscriber, _React$Component);

  function Subscriber() {
    var _temp, _this, _ret;

    classCallCheck$3(this, Subscriber);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn$3(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      value: undefined
    }, _temp), possibleConstructorReturn$3(_this, _ret);
  }

  Subscriber.prototype.getBroadcast = function getBroadcast() {
    var broadcasts = this.context.broadcasts || {};
    var broadcast = broadcasts[this.props.channel];

    invariant_1$2(this.props.quiet || broadcast, '<Subscriber channel="%s"> must be rendered in the context of a <Broadcast channel="%s">', this.props.channel, this.props.channel);

    return broadcast;
  };

  Subscriber.prototype.componentWillMount = function componentWillMount() {
    deprecationWarning$1("<Subscriber> is deprecated and will be removed in the next major release. " + "Please use createContext instead. See https://goo.gl/QAF37J for more info.");

    var broadcast = this.getBroadcast();

    if (broadcast) {
      this.setState({
        value: broadcast.getValue()
      });
    }
  };

  Subscriber.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    var broadcast = this.getBroadcast();

    if (broadcast) {
      this.unsubscribe = broadcast.subscribe(function (value) {
        _this2.setState({ value: value });
      });
    }
  };

  Subscriber.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.unsubscribe) this.unsubscribe();
  };

  Subscriber.prototype.render = function render() {
    var children = this.props.children;

    return children ? children(this.state.value) : null;
  };

  return Subscriber;
}(React__default.Component);

Subscriber.propTypes = {
  channel: propTypes.string.isRequired,
  children: propTypes.func,
  quiet: propTypes.bool
};
Subscriber.defaultProps = {
  quiet: false
};
Subscriber.contextTypes = {
  broadcasts: propTypes.object
};

// TODO: Swap this out for Symbol once we don't need a shim for it.
var uid = 1;

function createContext(defaultValue) {
  var channel = uid++;

  /**
   * A <Provider> is a container for a "value" that its <Consumer>
   * may subscribe to.
   */

  var Provider = function (_React$Component) {
    inherits$3(Provider, _React$Component);

    function Provider() {
      var _temp, _this, _ret;

      classCallCheck$3(this, Provider);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = possibleConstructorReturn$3(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.subscribers = [], _this.publish = function (value) {
        _this.subscribers.forEach(function (s) {
          return s(value);
        });
      }, _this.subscribe = function (subscriber) {
        _this.subscribers.push(subscriber);

        return function () {
          _this.subscribers = _this.subscribers.filter(function (s) {
            return s !== subscriber;
          });
        };
      }, _this.getValue = function () {
        return _this.props.value;
      }, _temp), possibleConstructorReturn$3(_this, _ret);
    }
    /**
     * For convenience when setting up a component that tracks this
     * <Provider>'s value in state.
     *
     *   const { Provider, Consumer } = createContext("default value")
     *
     *   class MyComponent {
     *     state = {
     *       value: Provider.defaultValue
     *     }
     *
     *     // ...
     *
     *     render() {
     *       return <Provider value={this.state.value}/>
     *     }
     *   }
     */


    Provider.prototype.getChildContext = function getChildContext() {
      var _babelHelpers$extends;

      return {
        broadcasts: _extends$4({}, this.context.broadcasts, (_babelHelpers$extends = {}, _babelHelpers$extends[channel] = {
          subscribe: this.subscribe,
          getValue: this.getValue
        }, _babelHelpers$extends))
      };
    };

    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.value !== nextProps.value) {
        this.publish(nextProps.value);
      }
    };

    Provider.prototype.render = function render() {
      return this.props.children;
    };

    return Provider;
  }(React__default.Component);

  /**
   * A <Consumer> sets state whenever its <Provider value> changes
   * and calls its render prop with the result.
   */


  Provider.defaultValue = defaultValue;
  Provider.propTypes = {
    children: propTypes.node,
    value: propTypes.any
  };
  Provider.defaultProps = {
    value: defaultValue
  };
  Provider.contextTypes = {
    broadcasts: propTypes.object
  };
  Provider.childContextTypes = {
    broadcasts: propTypes.object.isRequired
  };

  var Consumer = function (_React$Component2) {
    inherits$3(Consumer, _React$Component2);

    function Consumer() {
      var _temp2, _this2, _ret2;

      classCallCheck$3(this, Consumer);

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _ret2 = (_temp2 = (_this2 = possibleConstructorReturn$3(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this2), _this2.broadcast = _this2.context.broadcasts && _this2.context.broadcasts[channel], _this2.state = {
        value: _this2.broadcast ? _this2.broadcast.getValue() : defaultValue
      }, _temp2), possibleConstructorReturn$3(_this2, _ret2);
    }

    Consumer.prototype.componentDidMount = function componentDidMount() {
      var _this3 = this;

      if (this.broadcast) {
        this.unsubscribe = this.broadcast.subscribe(function (value) {
          _this3.setState({ value: value });
        });
      } else {
        warning_1$2(this.props.quiet, "<Consumer> was rendered outside the context of its <Provider>");
      }
    };

    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.unsubscribe) this.unsubscribe();
    };

    Consumer.prototype.render = function render() {
      var children = this.props.children;

      return children ? children(this.state.value) : null;
    };

    return Consumer;
  }(React__default.Component);

  Consumer.contextTypes = {
    broadcasts: propTypes.object
  };
  Consumer.propTypes = {
    children: propTypes.func,
    quiet: propTypes.bool
  };
  Consumer.defaultProps = {
    quiet: false
  };


  return {
    Provider: Provider,
    Consumer: Consumer
  };
}

var _createContext = createContext({
	isScrollOnBottom: noop,
	isScrollOnTop: noop,
	registerUnseenListItem: noop,
	scrollToBottom: noop,
	scrollToTop: noop
});
var MessageListProvider = _createContext.Provider;
var MessageListSpy = _createContext.Consumer;

var autoInc = function autoInc() {
	var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

	var counter = start;
	return function () {
		return counter++;
	};
};
var nextId = autoInc();

var StyledList$1 = /*#__PURE__*/styled$1('div', { displayName: 'MessageList', target: 'e1i3n9g60'
})('padding:0.5em;overflow-y:auto;height:100%;');

var MessageList$1 = function (_React$Component) {
	inherits$1(MessageList, _React$Component);

	function MessageList() {
		var _temp, _this, _ret;

		classCallCheck$1(this, MessageList);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._listItems = [], _this._registerUnseenListItem = function (listItemDescription) {
			var id = nextId();
			_this._listItems.push(_extends$2({}, listItemDescription, {
				id: id
			}));

			return _this._unregisterUnseenListItem.bind(_this, id);
		}, _this._unregisterUnseenListItem = function (id) {
			var index = findIndex(function (_ref) {
				var itemId = _ref.id;
				return itemId === id;
			}, _this._listItems);

			if (index === -1) {
				return;
			}

			_this._listItems.splice(index, 1);
		}, _this._getListRef = function (ref) {
			_this.listRef = ref;
			_this.props.innerRef(ref);
		}, _this._handleScroll = throttle(300, function (event) {
			if (_this.props.active) {
				_this.callSeenCallbacks();
			}
			_this.props.onScroll(event);
		}), _this._context = {
			isScrollOnBottom: _this.props.isScrollOnBottom,
			isScrollOnTop: _this.props.isScrollOnTop,
			registerUnseenListItem: _this._registerUnseenListItem,
			scrollToBottom: _this.props.scrollToBottom,
			scrollToTop: _this.props.scrollToTop
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	MessageList.prototype.componentDidMount = function componentDidMount() {
		if (this.props.active === true) {
			this.callSeenCallbacks();
		}
	};

	MessageList.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
		if (prevProps.active === false && this.props.active === true) {
			this.callSeenCallbacks();
		}
	};

	MessageList.prototype.callSeenCallbacks = function callSeenCallbacks() {
		var _this2 = this;

		this._listItems.forEach(function (listItem) {
			if (!isAboveFold(_this2.listRef, listItem.ref)) {
				return;
			}
			listItem.onSeen();
		});
	};

	MessageList.prototype.render = function render() {
		return React.createElement(
			MessageListProvider,
			{ value: this._context },
			React.createElement(StyledList$1, _extends$2({}, this.props, { innerRef: this._getListRef, onScroll: this._handleScroll }))
		);
	};

	return MessageList;
}(React.Component);

MessageList$1.propTypes = {
	/** This prop tell us if we should call onSeen callbacks from contained MessageListItems when scrolling */
	active: PropTypes.bool,
	/** Children of the list */
	children: PropTypes.node.isRequired,
	/** Prop used as function ref to the underlaying DOM element */
	innerRef: PropTypes.func,
	/** Callback hooked into list's scroll event */
	onScroll: PropTypes.func
};
MessageList$1.defaultProps = {
	active: true,
	innerRef: noop,
	onScroll: noop
};


var MessageList$2 = withPinnedScroll()(MessageList$1);

var MessageListItem$1 = function (_React$Component) {
	inherits$1(MessageListItem, _React$Component);

	function MessageListItem() {
		var _temp, _this, _ret;

		classCallCheck$1(this, MessageListItem);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._unregisterFromMessageList = noop, _this._registerInMessageList = memoize$1$1(function (register) {
			return function (ref) {
				// this only handles null ref (when it stops to listen to onSeen - when this.props.seen transition from true to false)
				_this._unregisterFromMessageList();

				if (!ref) {
					return;
				}

				_this._unregisterFromMessageList = register({
					ref: ref,
					onSeen: _this.props.onSeen
				});
			};
		}), _temp), possibleConstructorReturn$1(_this, _ret);
	}

	MessageListItem.prototype.componentWillUnmount = function componentWillUnmount() {
		this._unregisterFromMessageList();
	};

	MessageListItem.prototype.render = function render() {
		var _this2 = this;

		return React.createElement(
			MessageListSpy,
			{ quiet: true },
			function (_ref) {
				var registerUnseenListItem = _ref.registerUnseenListItem;
				return React.createElement(
					'div',
					{ ref: _this2.props.seen ? null : _this2._registerInMessageList(registerUnseenListItem) },
					React.Children.only(_this2.props.children)
				);
			}
		);
	};

	return MessageListItem;
}(React.Component);

MessageListItem$1.propTypes = {
	children: PropTypes.node.isRequired,
	onSeen: PropTypes.func
};
MessageListItem$1.defaultProps = {
	onSeen: noop
};

var fade = /*#__PURE__*/css('&-enter{opacity:0;height:0;}&-enter&-enter-active{opacity:1;height:1.2em;transition:height 200ms ease-in-out,opacity 100ms ease-in-out 100ms;}&-exit{opacity:1;height:1.2em;}&-exit&-exit-active{opacity:0;height:0;transition:height 100ms ease-in-out 100ms,opacity 200ms ease-in-out;}');

var Fade = function Fade(_ref) {
	var children = _ref.children,
	    props = objectWithoutProperties$1(_ref, ['children']);
	return React.createElement(
		reactTransitionGroup_4,
		_extends$2({}, props, { classNames: fade, timeout: 200 }),
		children
	);
};

Fade.propTypes = {
	children: PropTypes.node
};

var mapPropsToStyles$6 = function mapPropsToStyles(_ref) {
	var horizontalAlign = _ref.horizontalAlign;

	if (!horizontalAlign) {
		return null;
	}

	return {
		flexDirection: horizontalAlign === 'left' ? 'row' : 'row-reverse'
	};
};

// TODO: check out if this element should be flex, seems it might be some leftover, need to check all browsers
var StyledMessage = /*#__PURE__*/styled$1('div', { displayName: 'Message', mapPropsToStyles: mapPropsToStyles$6, section: true, target: 'e10ccb470'
})('display:flex;align-items:flex-start;font-size:0.9em;margin:0.3em;max-width:100%;a{color:inherit;}');

var AuthorName = /*#__PURE__*/styled$1('span', { displayName: 'AuthorName', target: 'e10ccb471'
})('font-size:0.8em;');

var MessageMeta = /*#__PURE__*/styled$1('div', { displayName: 'MessageMeta', target: 'e10ccb472'
})('text-align:left;');

var Content = /*#__PURE__*/styled$1('div', { displayName: 'Content', target: 'e10ccb473'
})('display:flex;flex-direction:column;overflow:hidden;align-items:flex-start;');

var Time = /*#__PURE__*/styled$1('span', { displayName: 'Time', target: 'e10ccb474'
})('font-size:0.8em;');

var Status = /*#__PURE__*/styled$1('div', { displayName: 'Status', target: 'e10ccb475'
})('text-align:right;font-size:0.8em;');

var Message$1 = function (_React$Component) {
	inherits$1(Message, _React$Component);

	function Message() {
		classCallCheck$1(this, Message);
		return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
	}

	Message.prototype.render = function render() {
		var _props = this.props,
		    children = _props.children,
		    authorName = _props.authorName,
		    deliveryStatus = _props.deliveryStatus,
		    isOwn = _props.isOwn,
		    date = _props.date,
		    showMetaOnClick = _props.showMetaOnClick,
		    onSeen = _props.onSeen,
		    radiusType = _props.radiusType,
		    seen = _props.seen,
		    props = objectWithoutProperties$1(_props, ['children', 'authorName', 'deliveryStatus', 'isOwn', 'date', 'showMetaOnClick', 'onSeen', 'radiusType', 'seen']);

		var message = React.createElement(
			Toggle,
			null,
			function (_ref2) {
				var authorOpened = _ref2.on,
				    getElementTogglerProps = _ref2.getElementTogglerProps;
				return React.createElement(
					StyledMessage,
					_extends$2({}, getElementTogglerProps(props), { own: isOwn, tabIndex: null }),
					React.createElement(
						Content,
						null,
						React.createElement(
							reactTransitionGroup_2,
							null,
							(!showMetaOnClick || authorOpened) && React.createElement(
								Fade,
								null,
								React.createElement(
									MessageMeta,
									null,
									authorName && React.createElement(
										AuthorName,
										null,
										authorName,
										' '
									),
									date && React.createElement(
										Time,
										null,
										date
									)
								)
							)
						),
						children,
						deliveryStatus && React.createElement(
							Status,
							null,
							deliveryStatus
						)
					)
				);
			}
		);

		return React.createElement(
			MessageListItem$1,
			{ onSeen: onSeen, seen: seen },
			message
		);
	};

	return Message;
}(React.Component);

Message$1.propTypes = {
	/** Message author's name */
	authorName: PropTypes.string,
	authorOpened: PropTypes.bool,
	/** Message children components */
	children: PropTypes.node,
	/** Message date */
	date: PropTypes.string,
	deliveryStatus: PropTypes.string,
	/** Message author - agent (left side) or visitor (right side) */
	isOwn: PropTypes.bool,
	onClick: PropTypes.func,
	/** Callback called when the user scrolls the list to the message. Message must be wrapped by MessageList component. */
	onSeen: PropTypes.func,
	showMetaOnClick: PropTypes.bool,
	/** Override component's styles */
	style: PropTypes.shape(),
	toggleAuthor: PropTypes.func,
	/** Specifies rendering type, it's used for appropriate corners' rounding */
	radiusType: PropTypes.oneOf(['single', 'first', 'last']),
	seen: PropTypes.bool
};
Message$1.defaultProps = {
	onClick: function onClick() {},
	seen: false
};

var SubTitle = /*#__PURE__*/styled$1('div', { displayName: 'SubTitle', target: 'e1fut3qs0'
})('font-weight:300;opacity:0.7;');

SubTitle.defaultProps = {
	textWrap: true
};

var Title = /*#__PURE__*/styled$1('div', { displayName: 'Title', target: 'e9xf8br0'
})('font-weight:500;');

Title.defaultProps = {
	textWrap: true
};

// eslint-disable-next-line no-console
var warnOnce = once(console.warn.bind(console));

var StyledTitle = /*#__PURE__*/styled$1('div', { displayName: 'MessageTitle', target: 'e1ykjxgu0'
})('font-weight:500;padding:1em;');

var MessageTitle = function MessageTitle(_ref) {
	var children = _ref.children,
	    title = _ref.title,
	    subtitle = _ref.subtitle,
	    props = objectWithoutProperties$1(_ref, ['children', 'title', 'subtitle']);

	if ("development" !== 'production' && children && (title || subtitle)) {
		// eslint-disable-next-line no-console
		warnOnce(['You should not use title nor subtitle & children props together.', 'They cannot be rendered at once - children prop has higher rendering priority.'].join('\n'));
	}
	var childs = children ? children : [title && React.createElement(
		Title,
		{ key: 'title' },
		title
	), subtitle && React.createElement(
		SubTitle,
		{ key: 'subtitle' },
		subtitle
	)];
	return React.createElement(
		StyledTitle,
		props,
		childs
	);
};

MessageTitle.propTypes = {
	children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),
	subtitle: PropTypes.string,
	title: PropTypes.string
};

var StyledText = /*#__PURE__*/styled$1('div', { displayName: 'MessageText', target: 'eovu8nx0'
})('white-space:pre-line;word-wrap:break-word;overflow-wrap:break-word;max-width:100%;padding:1em;');

var mapPropsToStyles$7 = function mapPropsToStyles(props) {
	var _ref = props.style || {},
	    borderTopLeftRadius = _ref.borderTopLeftRadius,
	    borderTopRightRadius = _ref.borderTopRightRadius,
	    borderBottomRightRadius = _ref.borderBottomRightRadius,
	    borderBottomLeftRadius = _ref.borderBottomLeftRadius;

	return {
		img: {
			borderTopLeftRadius: borderTopLeftRadius,
			borderTopRightRadius: borderTopRightRadius,
			borderBottomRightRadius: borderBottomRightRadius,
			borderBottomLeftRadius: borderBottomLeftRadius
		}
	};
};

var StyledMedia = /*#__PURE__*/styled$1('div', { displayName: 'MessageMedia', mapPropsToStyles: mapPropsToStyles$7, target: 'evmhqt80'
})('overflow:hidden;img{display:block;max-width:400px;width:100%;height:auto;margin:0 auto;}');

var INHERIT$1 = 'inherit';

var mapPropsToStyles$8 = function mapPropsToStyles(props) {
	var _ref = props.style || {},
	    borderTopLeftRadius = _ref.borderTopLeftRadius,
	    borderTopRightRadius = _ref.borderTopRightRadius,
	    borderBottomRightRadius = _ref.borderBottomRightRadius,
	    borderBottomLeftRadius = _ref.borderBottomLeftRadius;

	return {
		'button:first-child': {
			// TODO: this border is hardcoded, should be configurable?
			borderTop: borderTopLeftRadius === INHERIT$1 && borderTopRightRadius === INHERIT$1 ? 0 : '1px solid rgba(0, 0, 0, 0.1)'
		},
		'button:last-child': {
			borderBottom: borderBottomRightRadius === INHERIT$1 && borderBottomLeftRadius === INHERIT$1 ? 0 : '1px solid rgba(0, 0, 0, 0.1)'
		}
	};
};

var StyledButtons = /*#__PURE__*/styled$1('div', { displayName: 'MessageButtons', mapPropsToStyles: mapPropsToStyles$8, target: 'edowbh60'
})();

var MessageButtons = withPassthroughBorderRadiuses(StyledButtons);

//      

// @private
var _typeof$3 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};



















var _extends$5 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};



























var taggedTemplateLiteralLoose$1 = function (strings, raw) {
  strings.raw = raw;
  return strings;
};

var _opinionatedRules;
var _abbrTitle;
var _unopinionatedRules;

//      
var opinionatedRules = (_opinionatedRules = {
  html: {
    fontFamily: 'sans-serif'
  },

  body: {
    margin: '0'
  }

}, _opinionatedRules['a:active,\n  a:hover'] = {
  outlineWidth: '0'
}, _opinionatedRules['button,\n  input,\n  optgroup,\n  select,\n  textarea'] = {
  fontFamily: 'sans-serif',
  fontSize: '100%',
  lineHeight: '1.15'
}, _opinionatedRules);

var unopinionatedRules = (_unopinionatedRules = {
  html: {
    lineHeight: '1.15',
    textSizeAdjust: '100%'
  }

}, _unopinionatedRules['article,\n  aside,\n  footer,\n  header,\n  nav,\n  section'] = {
  display: 'block'
}, _unopinionatedRules.h1 = {
  fontSize: '2em',
  margin: '0.67em 0'
}, _unopinionatedRules['figcaption,\n  figure,\n  main'] = {
  display: 'block'
}, _unopinionatedRules.figure = {
  margin: '1em 40px'
}, _unopinionatedRules.hr = {
  boxSizing: 'content-box',
  height: '0',
  overflow: 'visible'
}, _unopinionatedRules.pre = {
  fontFamily: 'monospace, monospace',
  fontSize: '1em'
}, _unopinionatedRules.a = {
  'background-color': 'transparent',
  '-webkit-text-decoration-skip': 'objects'
}, _unopinionatedRules['abbr[title]'] = (_abbrTitle = {
  borderBottom: 'none',
  textDecoration: 'underline'
}, _abbrTitle['textDecoration'] = 'underline dotted', _abbrTitle), _unopinionatedRules['b,\n  strong'] = {
  fontWeight: 'inherit'
}, _unopinionatedRules['code,\n  kbd,\n  samp'] = {
  fontFamily: 'monospace, monospace',
  fontSize: '1em'
}, _unopinionatedRules.dfn = {
  fontStyle: 'italic'
}, _unopinionatedRules.mark = {
  backgroundColor: '#ff0',
  color: '#000'
}, _unopinionatedRules.small = {
  fontSize: '80%'
}, _unopinionatedRules['sub,\n  sup'] = {
  fontSize: '75%',
  lineHeight: '0',
  position: 'relative',
  verticalAlign: 'baseline'
}, _unopinionatedRules.sub = {
  bottom: '-0.25em'
}, _unopinionatedRules.sup = {
  top: '-0.5em'
}, _unopinionatedRules['audio,\n  video'] = {
  display: 'inline-block'
}, _unopinionatedRules['audio:not([controls])'] = {
  display: 'none',
  height: '0'
}, _unopinionatedRules.img = {
  borderStyle: 'none'
}, _unopinionatedRules['svg:not(:root)'] = {
  overflow: 'hidden'
}, _unopinionatedRules['button,\n  input,\n  optgroup,\n  select,\n  textarea'] = {
  margin: '0'
}, _unopinionatedRules['button,\n  input'] = {
  overflow: 'visible'
}, _unopinionatedRules['button,\n  select'] = {
  textTransform: 'none'
}, _unopinionatedRules['button,\n  html [type="button"],\n  [type="reset"],\n  [type="submit"]'] = {
  '-webkit-appearance': 'button'
}, _unopinionatedRules['button::-moz-focus-inner,\n  [type="button"]::-moz-focus-inner,\n  [type="reset"]::-moz-focus-inner,\n  [type="submit"]::-moz-focus-inner'] = {
  borderStyle: 'none',
  padding: '0'
}, _unopinionatedRules['button:-moz-focusring,\n  [type="button"]:-moz-focusring,\n  [type="reset"]:-moz-focusring,\n  [type="submit"]:-moz-focusring'] = {
  outline: '1px dotted ButtonText'
}, _unopinionatedRules.fieldset = {
  border: '1px solid #c0c0c0',
  margin: '0 2px',
  padding: '0.35em 0.625em 0.75em'
}, _unopinionatedRules.legend = {
  boxSizing: 'border-box',
  color: 'inherit',
  display: 'table',
  maxWidth: '100%',
  padding: '0',
  whiteSpace: 'normal'
}, _unopinionatedRules.progress = {
  display: 'inline-block',
  verticalAlign: 'baseline'
}, _unopinionatedRules.textarea = {
  overflow: 'auto'
}, _unopinionatedRules['[type="checkbox"],\n  [type="radio"]'] = {
  boxSizing: 'border-box',
  padding: '0'
}, _unopinionatedRules['[type="number"]::-webkit-inner-spin-button,\n  [type="number"]::-webkit-outer-spin-button'] = {
  height: 'auto'
}, _unopinionatedRules['[type="search"]'] = {
  '-webkit-appearance': 'textfield',
  outlineOffset: '-2px'
}, _unopinionatedRules['[type="search"]::-webkit-search-cancel-button,\n  [type="search"]::-webkit-search-decoration'] = {
  '-webkit-appearance': 'none'
}, _unopinionatedRules['::-webkit-file-upload-button'] = {
  '-webkit-appearance': 'button',
  font: 'inherit'
}, _unopinionatedRules['details,\n  menu'] = {
  display: 'block'
}, _unopinionatedRules.summary = {
  display: 'list-item'
}, _unopinionatedRules.canvas = {
  display: 'inline-block'
}, _unopinionatedRules.template = {
  display: 'none'
}, _unopinionatedRules['[hidden]'] = {
  display: 'none'
}, _unopinionatedRules);

var _templateObject = /*#__PURE__*/ taggedTemplateLiteralLoose$1(['radial-gradient(', '', '', '', ')'], ['radial-gradient(', '', '', '', ')']);

//      


function colorToInt(color) {
  return Math.round(color * 255);
}

function convertToInt(red, green, blue) {
  return colorToInt(red) + "," + colorToInt(green) + "," + colorToInt(blue);
}

function hslToRgb(hue, saturation, lightness) {
  var convert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : convertToInt;

  if (saturation === 0) {
    // achromatic
    return convert(lightness, lightness, lightness);
  }

  // formular from https://en.wikipedia.org/wiki/HSL_and_HSV
  var huePrime = hue % 360 / 60;
  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));

  var red = 0;
  var green = 0;
  var blue = 0;

  if (huePrime >= 0 && huePrime < 1) {
    red = chroma;
    green = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red = secondComponent;
    green = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green = chroma;
    blue = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green = secondComponent;
    blue = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red = secondComponent;
    blue = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red = chroma;
    blue = secondComponent;
  }

  var lightnessModification = lightness - chroma / 2;
  var finalRed = red + lightnessModification;
  var finalGreen = green + lightnessModification;
  var finalBlue = blue + lightnessModification;
  return convert(finalRed, finalGreen, finalBlue);
}

//      
var namedColorMap = {
  aliceblue: 'f0f8ff',
  antiquewhite: 'faebd7',
  aqua: '00ffff',
  aquamarine: '7fffd4',
  azure: 'f0ffff',
  beige: 'f5f5dc',
  bisque: 'ffe4c4',
  black: '000',
  blanchedalmond: 'ffebcd',
  blue: '0000ff',
  blueviolet: '8a2be2',
  brown: 'a52a2a',
  burlywood: 'deb887',
  cadetblue: '5f9ea0',
  chartreuse: '7fff00',
  chocolate: 'd2691e',
  coral: 'ff7f50',
  cornflowerblue: '6495ed',
  cornsilk: 'fff8dc',
  crimson: 'dc143c',
  cyan: '00ffff',
  darkblue: '00008b',
  darkcyan: '008b8b',
  darkgoldenrod: 'b8860b',
  darkgray: 'a9a9a9',
  darkgreen: '006400',
  darkgrey: 'a9a9a9',
  darkkhaki: 'bdb76b',
  darkmagenta: '8b008b',
  darkolivegreen: '556b2f',
  darkorange: 'ff8c00',
  darkorchid: '9932cc',
  darkred: '8b0000',
  darksalmon: 'e9967a',
  darkseagreen: '8fbc8f',
  darkslateblue: '483d8b',
  darkslategray: '2f4f4f',
  darkslategrey: '2f4f4f',
  darkturquoise: '00ced1',
  darkviolet: '9400d3',
  deeppink: 'ff1493',
  deepskyblue: '00bfff',
  dimgray: '696969',
  dimgrey: '696969',
  dodgerblue: '1e90ff',
  firebrick: 'b22222',
  floralwhite: 'fffaf0',
  forestgreen: '228b22',
  fuchsia: 'ff00ff',
  gainsboro: 'dcdcdc',
  ghostwhite: 'f8f8ff',
  gold: 'ffd700',
  goldenrod: 'daa520',
  gray: '808080',
  green: '008000',
  greenyellow: 'adff2f',
  grey: '808080',
  honeydew: 'f0fff0',
  hotpink: 'ff69b4',
  indianred: 'cd5c5c',
  indigo: '4b0082',
  ivory: 'fffff0',
  khaki: 'f0e68c',
  lavender: 'e6e6fa',
  lavenderblush: 'fff0f5',
  lawngreen: '7cfc00',
  lemonchiffon: 'fffacd',
  lightblue: 'add8e6',
  lightcoral: 'f08080',
  lightcyan: 'e0ffff',
  lightgoldenrodyellow: 'fafad2',
  lightgray: 'd3d3d3',
  lightgreen: '90ee90',
  lightgrey: 'd3d3d3',
  lightpink: 'ffb6c1',
  lightsalmon: 'ffa07a',
  lightseagreen: '20b2aa',
  lightskyblue: '87cefa',
  lightslategray: '789',
  lightslategrey: '789',
  lightsteelblue: 'b0c4de',
  lightyellow: 'ffffe0',
  lime: '0f0',
  limegreen: '32cd32',
  linen: 'faf0e6',
  magenta: 'f0f',
  maroon: '800000',
  mediumaquamarine: '66cdaa',
  mediumblue: '0000cd',
  mediumorchid: 'ba55d3',
  mediumpurple: '9370db',
  mediumseagreen: '3cb371',
  mediumslateblue: '7b68ee',
  mediumspringgreen: '00fa9a',
  mediumturquoise: '48d1cc',
  mediumvioletred: 'c71585',
  midnightblue: '191970',
  mintcream: 'f5fffa',
  mistyrose: 'ffe4e1',
  moccasin: 'ffe4b5',
  navajowhite: 'ffdead',
  navy: '000080',
  oldlace: 'fdf5e6',
  olive: '808000',
  olivedrab: '6b8e23',
  orange: 'ffa500',
  orangered: 'ff4500',
  orchid: 'da70d6',
  palegoldenrod: 'eee8aa',
  palegreen: '98fb98',
  paleturquoise: 'afeeee',
  palevioletred: 'db7093',
  papayawhip: 'ffefd5',
  peachpuff: 'ffdab9',
  peru: 'cd853f',
  pink: 'ffc0cb',
  plum: 'dda0dd',
  powderblue: 'b0e0e6',
  purple: '800080',
  rebeccapurple: '639',
  red: 'f00',
  rosybrown: 'bc8f8f',
  royalblue: '4169e1',
  saddlebrown: '8b4513',
  salmon: 'fa8072',
  sandybrown: 'f4a460',
  seagreen: '2e8b57',
  seashell: 'fff5ee',
  sienna: 'a0522d',
  silver: 'c0c0c0',
  skyblue: '87ceeb',
  slateblue: '6a5acd',
  slategray: '708090',
  slategrey: '708090',
  snow: 'fffafa',
  springgreen: '00ff7f',
  steelblue: '4682b4',
  tan: 'd2b48c',
  teal: '008080',
  thistle: 'd8bfd8',
  tomato: 'ff6347',
  turquoise: '40e0d0',
  violet: 'ee82ee',
  wheat: 'f5deb3',
  white: 'fff',
  whitesmoke: 'f5f5f5',
  yellow: 'ff0',
  yellowgreen: '9acd32'
};

/**
 * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.
 * @private
 */
function nameToHex(color) {
  if (typeof color !== 'string') return color;
  var normalizedColorName = color.toLowerCase();
  return namedColorMap[normalizedColorName] ? '#' + namedColorMap[normalizedColorName] : color;
}

//      
var hexRegex = /^#[a-fA-F0-9]{6}$/;
var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
var rgbRegex = /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/;
var rgbaRegex = /^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/;
var hslRegex = /^hsl\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*\)$/;
var hslaRegex = /^hsla\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/;

/**
 * Returns an RgbColor or RgbaColor object. This utility function is only useful
 * if want to extract a color component. With the color util `toColorString` you
 * can convert a RgbColor or RgbaColor object back to a string.
 *
 * @example
 * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
 * const color1 = 'rgb(255, 0, 0)';
 * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
 * const color2 = 'hsla(210, 10%, 40%, 0.75)';
 */
function parseToRgb(color) {
  if (typeof color !== 'string') {
    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');
  }
  var normalizedColor = nameToHex(color);
  if (normalizedColor.match(hexRegex)) {
    return {
      red: parseInt('' + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt('' + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt('' + normalizedColor[5] + normalizedColor[6], 16)
    };
  }
  if (normalizedColor.match(reducedHexRegex)) {
    return {
      red: parseInt('' + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt('' + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt('' + normalizedColor[3] + normalizedColor[3], 16)
    };
  }
  var rgbMatched = rgbRegex.exec(normalizedColor);
  if (rgbMatched) {
    return {
      red: parseInt('' + rgbMatched[1], 10),
      green: parseInt('' + rgbMatched[2], 10),
      blue: parseInt('' + rgbMatched[3], 10)
    };
  }
  var rgbaMatched = rgbaRegex.exec(normalizedColor);
  if (rgbaMatched) {
    return {
      red: parseInt('' + rgbaMatched[1], 10),
      green: parseInt('' + rgbaMatched[2], 10),
      blue: parseInt('' + rgbaMatched[3], 10),
      alpha: parseFloat('' + rgbaMatched[4])
    };
  }
  var hslMatched = hslRegex.exec(normalizedColor);
  if (hslMatched) {
    var hue = parseInt('' + hslMatched[1], 10);
    var saturation = parseInt('' + hslMatched[2], 10) / 100;
    var lightness = parseInt('' + hslMatched[3], 10) / 100;
    var rgbColorString = 'rgb(' + hslToRgb(hue, saturation, lightness) + ')';
    var hslRgbMatched = rgbRegex.exec(rgbColorString);
    return {
      red: parseInt('' + hslRgbMatched[1], 10),
      green: parseInt('' + hslRgbMatched[2], 10),
      blue: parseInt('' + hslRgbMatched[3], 10)
    };
  }
  var hslaMatched = hslaRegex.exec(normalizedColor);
  if (hslaMatched) {
    var _hue = parseInt('' + hslaMatched[1], 10);
    var _saturation = parseInt('' + hslaMatched[2], 10) / 100;
    var _lightness = parseInt('' + hslaMatched[3], 10) / 100;
    var _rgbColorString = 'rgb(' + hslToRgb(_hue, _saturation, _lightness) + ')';
    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);
    return {
      red: parseInt('' + _hslRgbMatched[1], 10),
      green: parseInt('' + _hslRgbMatched[2], 10),
      blue: parseInt('' + _hslRgbMatched[3], 10),
      alpha: parseFloat('' + hslaMatched[4])
    };
  }
  throw new Error("Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.");
}

//      


function rgbToHsl(color) {
  // make sure rgb are contained in a set of [0, 255]
  var red = color.red / 255;
  var green = color.green / 255;
  var blue = color.blue / 255;

  var max = Math.max(red, green, blue);
  var min = Math.min(red, green, blue);
  var lightness = (max + min) / 2;

  if (max === min) {
    // achromatic
    if (color.alpha !== undefined) {
      return { hue: 0, saturation: 0, lightness: lightness, alpha: color.alpha };
    } else {
      return { hue: 0, saturation: 0, lightness: lightness };
    }
  }

  var hue = void 0;
  var delta = max - min;
  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);
  switch (max) {
    case red:
      hue = (green - blue) / delta + (green < blue ? 6 : 0);
      break;
    case green:
      hue = (blue - red) / delta + 2;
      break;
    default:
      // blue case
      hue = (red - green) / delta + 4;
      break;
  }

  hue *= 60;
  if (color.alpha !== undefined) {
    return { hue: hue, saturation: saturation, lightness: lightness, alpha: color.alpha };
  }
  return { hue: hue, saturation: saturation, lightness: lightness };
}

//      

/**
 * Returns an HslColor or HslaColor object. This utility function is only useful
 * if want to extract a color component. With the color util `toColorString` you
 * can convert a HslColor or HslaColor object back to a string.
 *
 * @example
 * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
 * const color1 = 'rgb(255, 0, 0)';
 * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
 * const color2 = 'hsla(210, 10%, 40%, 0.75)';
 */
function parseToHsl(color) {
  // Note: At a later stage we can optimize this function as right now a hsl
  // color would be parsed converted to rgb values and converted back to hsl.
  return rgbToHsl(parseToRgb(color));
}

//      

/**
 * Reduces hex values if possible e.g. #ff8866 to #f86
 * @private
 */
var reduceHexValue = function reduceHexValue(value) {
  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
    return "#" + value[1] + value[3] + value[5];
  }
  return value;
};

//      
function numberToHex(value) {
  var hex = value.toString(16);
  return hex.length === 1 ? "0" + hex : hex;
}

//      

/**
 * Returns a string value for the color. The returned result is the smallest possible hex notation.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgb(255, 205, 100),
 *   background: rgb({ red: 255, green: 205, blue: 100 }),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgb(255, 205, 100)};
 *   background: ${rgb({ red: 255, green: 205, blue: 100 })};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#ffcd64";
 *   background: "#ffcd64";
 * }
 */
function rgb(value, green, blue) {
  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {
    return reduceHexValue('#' + numberToHex(value) + numberToHex(green) + numberToHex(blue));
  } else if ((typeof value === 'undefined' ? 'undefined' : _typeof$3(value)) === 'object' && green === undefined && blue === undefined) {
    return reduceHexValue('#' + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
  }

  throw new Error('Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).');
}

//      

/**
 * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
 *
 * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgba(255, 205, 100, 0.7),
 *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),
 *   background: rgba(255, 205, 100, 1),
 *   background: rgba('#ffffff', 0.4),
 *   background: rgba('black', 0.7),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgba(255, 205, 100, 0.7)};
 *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};
 *   background: ${rgba(255, 205, 100, 1)};
 *   background: ${rgba('#ffffff', 0.4)};
 *   background: ${rgba('black', 0.7)};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(255,205,100,0.7)";
 *   background: "rgba(255,205,100,0.7)";
 *   background: "#ffcd64";
 *   background: "rgba(255,255,255,0.4)";
 *   background: "rgba(0,0,0,0.7)";
 * }
 */
function rgba(firstValue, secondValue, thirdValue, fourthValue) {
  if (typeof firstValue === 'string' && typeof secondValue === 'number') {
    var rgbValue = parseToRgb(firstValue);
    return 'rgba(' + rgbValue.red + ',' + rgbValue.green + ',' + rgbValue.blue + ',' + secondValue + ')';
  } else if (typeof firstValue === 'number' && typeof secondValue === 'number' && typeof thirdValue === 'number' && typeof fourthValue === 'number') {
    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : 'rgba(' + firstValue + ',' + secondValue + ',' + thirdValue + ',' + fourthValue + ')';
  } else if ((typeof firstValue === 'undefined' ? 'undefined' : _typeof$3(firstValue)) === 'object' && secondValue === undefined && thirdValue === undefined && fourthValue === undefined) {
    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : 'rgba(' + firstValue.red + ',' + firstValue.green + ',' + firstValue.blue + ',' + firstValue.alpha + ')';
  }

  throw new Error('Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).');
}

//      
function colorToHex(color) {
  return numberToHex(Math.round(color * 255));
}

function convertToHex(red, green, blue) {
  return reduceHexValue('#' + colorToHex(red) + colorToHex(green) + colorToHex(blue));
}

function hslToHex(hue, saturation, lightness) {
  return hslToRgb(hue, saturation, lightness, convertToHex);
}

//      

/**
 * Returns a string value for the color. The returned result is the smallest possible hex notation.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: hsl(359, 0.75, 0.4),
 *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${hsl(359, 0.75, 0.4)};
 *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#b3191c";
 *   background: "#b3191c";
 * }
 */
function hsl(value, saturation, lightness) {
  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number') {
    return hslToHex(value, saturation, lightness);
  } else if ((typeof value === 'undefined' ? 'undefined' : _typeof$3(value)) === 'object' && saturation === undefined && lightness === undefined) {
    return hslToHex(value.hue, value.saturation, value.lightness);
  }

  throw new Error('Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).');
}

//      

/**
 * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: hsla(359, 0.75, 0.4, 0.7),
 *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),
 *   background: hsla(359, 0.75, 0.4, 1),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${hsla(359, 0.75, 0.4, 0.7)};
 *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};
 *   background: ${hsla(359, 0.75, 0.4, 1)};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(179,25,28,0.7)";
 *   background: "rgba(179,25,28,0.7)";
 *   background: "#b3191c";
 * }
 */
function hsla(value, saturation, lightness, alpha) {
  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {
    return alpha >= 1 ? hslToHex(value, saturation, lightness) : 'rgba(' + hslToRgb(value, saturation, lightness) + ',' + alpha + ')';
  } else if ((typeof value === 'undefined' ? 'undefined' : _typeof$3(value)) === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {
    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : 'rgba(' + hslToRgb(value.hue, value.saturation, value.lightness) + ',' + value.alpha + ')';
  }

  throw new Error('Passed invalid arguments to hsla, please pass multiple numbers e.g. hsl(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).');
}

//      
var isRgb = function isRgb(color) {
  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');
};

var isRgba = function isRgba(color) {
  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && typeof color.alpha === 'number';
};

var isHsl = function isHsl(color) {
  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');
};

var isHsla = function isHsla(color) {
  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && typeof color.alpha === 'number';
};

var errMsg = 'Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.';

/**
 * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.
 * This util is useful in case you only know on runtime which color object is
 * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: toColorString({ red: 255, green: 205, blue: 100 }),
 *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),
 *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),
 *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};
 *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};
 *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};
 *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#ffcd64";
 *   background: "rgba(255,205,100,0.72)";
 *   background: "#00f";
 *   background: "rgba(179,25,25,0.72)";
 * }
 */

function toColorString(color) {
  if ((typeof color === 'undefined' ? 'undefined' : _typeof$3(color)) !== 'object') throw new Error(errMsg);
  if (isRgba(color)) return rgba(color);
  if (isRgb(color)) return rgb(color);
  if (isHsla(color)) return hsla(color);
  if (isHsl(color)) return hsl(color);

  throw new Error(errMsg);
}

//      

// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js


// eslint-disable-next-line no-unused-vars


// eslint-disable-next-line no-unused-vars

// eslint-disable-next-line no-redeclare


function curried(f, length, acc) {
  return function fn() {
    // eslint-disable-next-line prefer-rest-params
    var combined = acc.concat(Array.prototype.slice.call(arguments));
    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);
  };
}

// eslint-disable-next-line no-redeclare
function curry(f) {
  // eslint-disable-line no-redeclare
  return curried(f, f.length, []);
}

//      

/**
 * Changes the hue of the color. Hue is a number between 0 to 360. The first
 * argument for adjustHue is the amount of degrees the color is rotated along
 * the color wheel.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: adjustHue(180, '#448'),
 *   background: adjustHue(180, 'rgba(101,100,205,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${adjustHue(180, '#448')};
 *   background: ${adjustHue(180, 'rgba(101,100,205,0.7)')};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#888844";
 *   background: "rgba(136,136,68,0.7)";
 * }
 */
function adjustHue(degree, color) {
  var hslColor = parseToHsl(color);
  return toColorString(_extends$5({}, hslColor, {
    hue: (hslColor.hue + degree) % 360
  }));
}

var curriedAdjustHue = /*#__PURE__*/curry(adjustHue);

//      

function guard(lowerBoundary, upperBoundary, value) {
  return Math.max(lowerBoundary, Math.min(upperBoundary, value));
}

//      

/**
 * Returns a string value for the darkened color.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: darken(0.2, '#FFCD64'),
 *   background: darken(0.2, 'rgba(255,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${darken(0.2, '#FFCD64')};
 *   background: ${darken(0.2, 'rgba(255,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#ffbd31";
 *   background: "rgba(255,189,49,0.7)";
 * }
 */
function darken(amount, color) {
  var hslColor = parseToHsl(color);
  return toColorString(_extends$5({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness - amount)
  }));
}

var curriedDarken = /*#__PURE__*/curry(darken);

//      

/**
 * Decreases the intensity of a color. Its range is between 0 to 1. The first
 * argument of the desaturate function is the amount by how much the color
 * intensity should be decreased.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: desaturate(0.2, '#CCCD64'),
 *   background: desaturate(0.2, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${desaturate(0.2, '#CCCD64')};
 *   background: ${desaturate(0.2, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#b8b979";
 *   background: "rgba(184,185,121,0.7)";
 * }
 */
function desaturate(amount, color) {
  var hslColor = parseToHsl(color);
  return toColorString(_extends$5({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation - amount)
  }));
}

var curriedDesaturate = /*#__PURE__*/curry(desaturate);

//      
/**
 * Returns a number (float) representing the luminance of a color.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',
 *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
 *                             'rgba(58, 133, 255, 1)' :
 *                             'rgba(255, 57, 149, 1)',
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};
 *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
 *                             'rgba(58, 133, 255, 1)' :
 *                             'rgba(255, 57, 149, 1)'};
 *
 * // CSS in JS Output
 *
 * div {
 *   background: "#CCCD64";
 *   background: "rgba(58, 133, 255, 1)";
 * }
 */
function getLuminance(color) {
  var rgbColor = parseToRgb(color);

  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {
    var channel = rgbColor[key] / 255;
    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);
  }),
      r = _Object$keys$map[0],
      g = _Object$keys$map[1],
      b = _Object$keys$map[2];

  return 0.2126 * r + 0.7152 * g + 0.0722 * b;
}

//      

/**
 * Returns a string value for the lightened color.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: lighten(0.2, '#CCCD64'),
 *   background: lighten(0.2, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${lighten(0.2, '#FFCD64')};
 *   background: ${lighten(0.2, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#e5e6b1";
 *   background: "rgba(229,230,177,0.7)";
 * }
 */
function lighten(amount, color) {
  var hslColor = parseToHsl(color);
  return toColorString(_extends$5({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness + amount)
  }));
}

var curriedLighten = /*#__PURE__*/curry(lighten);

//      

/**
 * Mixes two colors together by calculating the average of each of the RGB components.
 *
 * By default the weight is 0.5 meaning that half of the first color and half the second
 * color should be used. Optionally the weight can be modified by providing a number
 * as the first argument. 0.25 means that a quarter of the first color and three quarters
 * of the second color should be used.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: mix(0.5, '#f00', '#00f')
 *   background: mix(0.25, '#f00', '#00f')
 *   background: mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${mix(0.5, '#f00', '#00f')};
 *   background: ${mix(0.25, '#f00', '#00f')};
 *   background: ${mix(0.5, 'rgba(255, 0, 0, 0.5)', '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#7f007f";
 *   background: "#3f00bf";
 *   background: "rgba(63, 0, 191, 0.75)";
 * }
 */
function mix() {
  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;
  var color = arguments[1];
  var otherColor = arguments[2];

  var parsedColor1 = parseToRgb(color);
  var color1 = _extends$5({}, parsedColor1, {
    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1
  });

  var parsedColor2 = parseToRgb(otherColor);
  var color2 = _extends$5({}, parsedColor2, {
    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1
  });

  // The formular is copied from the original Sass implementation:
  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method
  var alphaDelta = color1.alpha - color2.alpha;
  var x = weight * 2 - 1;
  var y = x * alphaDelta === -1 ? x : x + alphaDelta;
  var z = 1 + x * alphaDelta;
  var weight1 = (y / z + 1) / 2.0;
  var weight2 = 1 - weight1;

  var mixedColor = {
    red: Math.floor(color1.red * weight1 + color2.red * weight2),
    green: Math.floor(color1.green * weight1 + color2.green * weight2),
    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),
    alpha: color1.alpha + (color2.alpha - color1.alpha) * (weight / 1.0)
  };

  return rgba(mixedColor);
}

var curriedMix = /*#__PURE__*/curry(mix);

//      
/**
 * Increases the opacity of a color. Its range for the amount is between 0 to 1.
 *
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');
 *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),
 *   background: opacify(0.5, 'rgba(255, 0, 0, 0.2)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};
 *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},
 *   background: ${opacify(0.5, 'rgba(255, 0, 0, 0.2)')},
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#fff";
 *   background: "rgba(255,255,255,0.7)";
 *   background: "rgba(255,0,0,0.7)";
 * }
 */
function opacify(amount, color) {
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends$5({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 + amount * 100) / 100)
  });
  return rgba(colorWithAlpha);
}

var curriedOpacify = /*#__PURE__*/curry(opacify);

//      
/**
 * Selects black or white for best contrast depending on the luminosity of the given color.
 * Follows W3C specs for readability at https://www.w3.org/TR/WCAG20-TECHS/G18.html
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   color: readableColor('#000'),
 *   color: readableColor('papayawhip'),
 *   color: readableColor('rgb(255,0,0)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   color: ${readableColor('#000')};
 *   color: ${readableColor('papayawhip')};
 *   color: ${readableColor('rgb(255,0,0)')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   color: "#fff";
 *   color: "#fff";
 *   color: "#000";
 * }
 */

function readableColor(color) {
  return getLuminance(color) > 0.179 ? '#000' : '#fff';
}

var curriedReadableColor = /*#__PURE__*/curry(readableColor);

//      

/**
 * Increases the intensity of a color. Its range is between 0 to 1. The first
 * argument of the saturate function is the amount by how much the color
 * intensity should be increased.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: saturate(0.2, '#CCCD64'),
 *   background: saturate(0.2, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${saturate(0.2, '#FFCD64')};
 *   background: ${saturate(0.2, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#e0e250";
 *   background: "rgba(224,226,80,0.7)";
 * }
 */
function saturate(amount, color) {
  var hslColor = parseToHsl(color);
  return toColorString(_extends$5({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation + amount)
  }));
}

var curriedSaturate = /*#__PURE__*/curry(saturate);

//      

/**
 * Sets the hue of a color to the provided value. The hue range can be
 * from 0 and 359.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: setHue(42, '#CCCD64'),
 *   background: setHue(244, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${setHue(42, '#CCCD64')};
 *   background: ${setHue(244, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#cdae64";
 *   background: "rgba(107,100,205,0.7)";
 * }
 */
function setHue(hue, color) {
  return toColorString(_extends$5({}, parseToHsl(color), {
    hue: hue
  }));
}

var curriedSetHue = /*#__PURE__*/curry(setHue);

//      

/**
 * Sets the lightness of a color to the provided value. The lightness range can be
 * from 0 and 1.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: setLightness(0.2, '#CCCD64'),
 *   background: setLightness(0.75, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${setLightness(0.2, '#CCCD64')};
 *   background: ${setLightness(0.75, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#4d4d19";
 *   background: "rgba(223,224,159,0.7)";
 * }
 */
function setLightness(lightness, color) {
  return toColorString(_extends$5({}, parseToHsl(color), {
    lightness: lightness
  }));
}

var curriedSetLightness = /*#__PURE__*/curry(setLightness);

//      

/**
 * Sets the saturation of a color to the provided value. The lightness range can be
 * from 0 and 1.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: setSaturation(0.2, '#CCCD64'),
 *   background: setSaturation(0.75, 'rgba(204,205,100,0.7)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${setSaturation(0.2, '#CCCD64')};
 *   background: ${setSaturation(0.75, 'rgba(204,205,100,0.7)')};
 * `
 *
 * // CSS in JS Output
 * element {
 *   background: "#adad84";
 *   background: "rgba(228,229,76,0.7)";
 * }
 */
function setSaturation(saturation, color) {
  return toColorString(_extends$5({}, parseToHsl(color), {
    saturation: saturation
  }));
}

var curriedSetSaturation = /*#__PURE__*/curry(setSaturation);

//      

/**
 * Shades a color by mixing it with black. `shade` can produce
 * hue shifts, where as `darken` manipulates the luminance channel and therefore
 * doesn't produce hue shifts.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: shade(0.25, '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${shade(0.25, '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#00003f";
 * }
 */

function shade(percentage, color) {
  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {
    throw new Error('Passed an incorrect argument to shade, please pass a percentage less than or equal to 1 and larger than or equal to -1.');
  }
  if (typeof color !== 'string') {
    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');
  }
  return curriedMix(percentage, color, 'rgb(0, 0, 0)');
}

var curriedShade = /*#__PURE__*/curry(shade);

//      

/**
 * Tints a color by mixing it with white. `tint` can produce
 * hue shifts, where as `lighten` manipulates the luminance channel and therefore
 * doesn't produce hue shifts.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: tint(0.25, '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${tint(0.25, '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#bfbfff";
 * }
 */

function tint(percentage, color) {
  if (typeof percentage !== 'number' || percentage > 1 || percentage < -1) {
    throw new Error('Passed an incorrect argument to tint, please pass a percentage less than or equal to 1 and larger than or equal to -1.');
  }
  if (typeof color !== 'string') {
    throw new Error('Passed an incorrect argument to a color function, please pass a string representation of a color.');
  }
  return curriedMix(percentage, color, 'rgb(255, 255, 255)');
}

var curriedTint = /*#__PURE__*/curry(tint);

//      
/**
 * Decreases the opacity of a color. Its range for the amount is between 0 to 1.
 *
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: transparentize(0.1, '#fff');
 *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),
 *   background: transparentize(0.5, 'rgba(255, 0, 0, 0.8)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${transparentize(0.1, '#fff')};
 *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')},
 *   background: ${transparentize(0.5, 'rgba(255, 0, 0, 0.8)')},
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(255,255,255,0.9)";
 *   background: "rgba(255,255,255,0.8)";
 *   background: "rgba(255,0,0,0.3)";
 * }
 */
function transparentize(amount, color) {
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends$5({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 - amount * 100) / 100)
  });
  return rgba(colorWithAlpha);
}

var curriedTransparentize = /*#__PURE__*/curry(transparentize);

var getDarker = curriedDarken(0.2);

var mapPropsToStyles$9 = function mapPropsToStyles(props) {
	// TODO: fix color here
	var color = props.primary ? props.theme.vars['--primary-color'] : 'black';
	var darkerColor = getDarker(color);

	return {
		borderColor: color,
		color: color,
		':hover': {
			color: darkerColor,
			borderColor: darkerColor
		}
	};
};

var StyledButton$1 = /*#__PURE__*/styled$1('button', { displayName: 'Button', mapPropsToStyles: mapPropsToStyles$9, target: 'e1972fzd0'
})('border-width:1px;border-style:solid;background-color:#fff;font-size:1em;font-family:inherit;appearance:none;padding:0.8em;transition:box-shadow 0.1s,color 0.1s,border-color 0.2s;&:hover{cursor:pointer;}&:active{box-shadow:none;outline:none;}&:focus{box-shadow:none;outline:none;}');

var Button$1 = function Button(props) {
	return React.createElement(
		StyledButton$1,
		props,
		props.label
	);
};

Button$1.propTypes = {
	/** Button's label */
	label: PropTypes.string
};

// TODO: rework MessageButton & Button
var buttonClass = /*#__PURE__*/css('display:inline-block;width:100%;border-left:0;border-right:0;border-top:0;border-bottom-color:rgba(0,0,0,0.1);box-shadow:none;transition:background-color 0.1s;background:transparent;color:inherit;margin:0;&:hover{border-bottom-color:rgba(0,0,0,0.15);background:rgba(0,0,0,0.02);color:inherit;}&:active{background:rgba(0,0,0,0.04);color:inherit;}');

var MessageButton = function (_React$Component) {
	inherits$1(MessageButton, _React$Component);

	function MessageButton() {
		var _temp, _this, _ret;

		classCallCheck$1(this, MessageButton);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
			event.stopPropagation();
			_this.props.onClick(event);
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	MessageButton.prototype.render = function render() {
		var props = this.props;
		return React.createElement(
			Button$1,
			_extends$2({}, props, { className: (props.className || '') + ' ' + buttonClass, onClick: this.handleClick }),
			props.label
		);
	};

	return MessageButton;
}(React.Component);

MessageButton.propTypes = {
	className: PropTypes.string,
	/** Button's label */
	label: PropTypes.string,
	onClick: PropTypes.func,
	primary: PropTypes.bool,
	/** Button's value */
	value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
MessageButton.defaultProps = {
	onClick: noop
};

var SINGLE = { radiusType: 'single' };
var FIRST = { radiusType: 'first' };
var LAST = { radiusType: 'last' };

var hideMetaProps = {
	authorName: null,
	date: null
};

var mapPropsToStyles$10 = function mapPropsToStyles(props) {
	if (props.isOwn) {
		return { flexDirection: 'reverse-row' };
	}

	return null;
};

var StyledGroup = /*#__PURE__*/styled$1('div', { displayName: 'MessageGroup', mapPropsToStyles: mapPropsToStyles$10, target: 'eslhdd60'
})('display:flex;margin-bottom:1em;');

var AvatarWrapper = /*#__PURE__*/styled$1('div', {
	target: 'eslhdd61'
})('display:flex;flex-direction:column;align-items:center;text-align:center;font-size:0.7em;line-height:1.6em;', function (props) {
	return {
		minWidth: props.theme.Avatar.size,
		margin: props.isOwn ? '0 0 0 .3em' : '0 .3em 0 0'
	};
}, ';');

var messageGropContainerStyle = /*#__PURE__*/css('overflow:hidden;');

var MessageGroup = function MessageGroup(_ref) {
	var avatar = _ref.avatar,
	    isOwn = _ref.isOwn,
	    children = _ref.children,
	    onlyFirstWithMeta = _ref.onlyFirstWithMeta,
	    props = objectWithoutProperties$1(_ref, ['avatar', 'isOwn', 'children', 'onlyFirstWithMeta']);

	var compactedChildren = compactChildren(children);
	var childrenCount = React.Children.count(compactedChildren);
	return React.createElement(
		StyledGroup,
		props,
		avatar && React.createElement(
			AvatarWrapper,
			{ flexFit: true, isOwn: isOwn },
			React.createElement(Avatar$1, { imgUrl: avatar })
		),
		React.createElement(
			Fill$1,
			{ className: messageGropContainerStyle },
			React.Children.map(compactedChildren, function (child, index) {
				if (childrenCount === 1) {
					return React.cloneElement(child, SINGLE);
				}

				if (index === 0) {
					return React.cloneElement(child, FIRST);
				}

				var hideMeta = onlyFirstWithMeta && index > 0;

				if (index === childrenCount - 1) {
					return React.cloneElement(child, hideMeta ? _extends$2({}, LAST, hideMetaProps) : LAST);
				}

				return hideMeta ? React.cloneElement(child, hideMetaProps) : child;
			})
		)
	);
};

MessageGroup.propTypes = {
	/** Message author's avatar URL */
	avatar: PropTypes.string,
	/** Component's children nodes - i.e. Message components */
	children: PropTypes.node,
	/** Message author - agent (left side) or visitor (right side) */
	isOwn: PropTypes.bool,
	onlyFirstWithMeta: PropTypes.bool
};

var darkTheme = {
	vars: {
		'primary-color': '#0d449b',
		'secondary-color': '#3a3a3a',
		'tertiary-color': 'rgba(0, 0, 0, 0.8)'
	},
	AgentBar: {
		css: {
			color: '#fff'
		},
		IconButton: {
			css: {
				background: 'rgba(0, 0, 0, 0.2)',
				borderRadius: '50%',
				padding: '1em',
				margin: '.3em'
			}
		},
		Icon: {
			css: {
				transform: 'scale(0.7)'
			}
		}
	},
	Bubble: {
		css: {
			color: '#fff'
		}
	},
	TitleBar: {
		css: {
			background: '#3a3a3a',
			borderRadius: '1.2em 1.2em 0 0',
			padding: '.5em'
		}
	},
	FixedWrapperMaximized: {
		css: {
			borderRadius: '1.2em',
			overflow: 'hidden',
			height: '660px'
		}
	},
	Message: {
		secondaryTextColor: '#fff'
	},
	TextComposer: {
		css: {
			background: '#eaeaea'
		}
	},
	TextInput: {
		css: {
			background: '#eaeaea'
		}
	}
};

var purpleTheme = {
	vars: {
		'primary-color': '#6D5BBA',
		'secondary-color': '#3a3a3a',
		'tertiary-color': 'rgba(0, 0, 0, 0.8)'
	},
	Avatar: {
		size: '20px',
		css: {
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	AgentBar: {
		css: {
			color: '#fff',
			background: 'linear-gradient(to right, #6D5BBA, #8D58BF)',
			borderRadius: '.5em',
			marginBottom: '.7em',
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	TitleBar: {
		css: {
			background: 'transparent',
			borderRadius: '.5em',
			marginBottom: '.5em',
			padding: '0'
		},
		IconButton: {
			css: {
				background: 'linear-gradient(to right, #6D5BBA, #8D58BF)',
				borderRadius: '8px',
				padding: '1em',
				margin: '.3em',
				boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
			}
		}
	},
	MessageList: {
		css: {
			background: 'linear-gradient(to right, #6D5BBA, #8D58BF)',
			marginBottom: '.7em',
			borderRadius: '.5em',
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	TextComposer: {
		css: {
			borderRadius: '.5em',
			marginBottom: '.7em',
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	Message: {
		secondaryTextColor: '#fff',
		own: {
			Bubble: {
				css: {
					color: '#fff',
					background: '#AA8BD2'
				}
			}
		}
	},
	Bubble: {
		ovalBorderRadius: '.4em',
		sharpBorderRadius: '.4em',
		css: {
			color: '#5A6976',
			background: '#fff',
			fontSize: '14px'
		}
	},
	FixedWrapperMaximized: {
		css: {
			width: '280px'
		}
	}
};

var elegantTheme = {
	vars: {
		'primary-color': '#5A6976'
	},
	Avatar: {
		size: '20px',
		css: {
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	FixedWrapperMaximized: {
		css: {
			width: '310px',
			borderRadius: 0,
			boxShadow: '0 .1em 1em rgba(0, 0, 0, 0.3)'
		}
	},
	AgentBar: {
		css: {
			color: '#000',
			background: '#fff'
		},
		Avatar: {
			css: {
				boxShadow: 'none'
			}
		}
	},
	TitleBar: {
		css: {
			color: '#000',
			background: '#fff'
		},
		Icon: {
			color: '#D9A646'
		}
	},
	MessageList: {
		css: {
			background: 'rgba(0, 0, 0, 0.8)'
		}
	},
	Bubble: {
		sharpBorderRadius: '.4em',
		ovalBorderRadius: '.4em'
	}
};

var LIGHT_BLUE = '#427fe1';
var WHITE = '#fff';

var defaultTheme = {
	vars: {
		'primary-color': LIGHT_BLUE,
		'secondary-color': '#fbfbfb',
		'tertiary-color': WHITE
	},
	AgentBar: {
		Avatar: {
			size: '42px',
			css: {
				marginRight: '.6em'
			}
		},
		css: {
			backgroundColor: 'var(--secondary-color)'
		}
	},
	Avatar: {
		size: '30px'
	},
	Bubble: {
		sharpBorderRadius: '0.3em',
		ovalBorderRadius: '1.4em',
		css: {
			backgroundColor: 'var(--secondary-color)'
		}
	},
	Button: {},
	ChatListItem: {
		Avatar: {
			css: {
				marginRight: '.5em'
			}
		}
	},
	FixedWrapperMaximized: {
		animationDuration: 100,
		width: '400px',
		height: '500px'
	},
	FixedWrapperMinimized: {
		animationDuration: 100
	},
	FixedWrapperRoot: {
		position: 'right',
		css: {}
	},
	Message: {
		secondaryTextColor: '#000',
		horizontalAlign: 'left',
		own: {
			horizontalAlign: 'right',
			Bubble: {
				css: {
					backgroundColor: 'var(--primary-color)',
					color: WHITE
				}
			},
			Content: {
				css: {
					alignItems: 'flex-end'
				}
			},
			MessageMeta: {
				css: {
					textAlign: 'right'
				}
			},
			Time: {
				css: {
					textAlign: 'right'
				}
			}
		}
	},
	MessageButtons: {},
	MessageGroup: {},
	MessageList: {
		css: {
			backgroundColor: 'var(--tertiary-color)'
		}
	},
	MessageMedia: {},
	MessageText: {},
	MessageTitle: {},
	QuickReply: {
		css: {
			borderColor: 'var(--primary-color)',
			backgroundColor: '#fff',
			color: 'var(--primary-color)'
		}
	},
	TextComposer: {
		// TODO: this is a color for text, but sounds like a color for background
		inputColor: '#000',
		Icon: {
			color: '#aaa'
		},
		IconButton: {
			active: {
				Icon: {
					color: 'var(--primary-color)'
				}
			}
		}
	},
	TitleBar: {
		iconsColor: '#fff',
		behaviour: 'default',
		css: {
			backgroundColor: 'var(--primary-color)'
		}
	}
};

var parseTheme = function parseTheme(theme) {
	var componentKeys = pickComponentKeys(theme);

	if (Object.keys(componentKeys).length === 0) {
		return _extends$2({}, theme, {
			vars: mapKeys(function (key) {
				return '--' + key;
			}, theme.vars || {})
		});
	}

	return _extends$2({}, theme, mapValues(function (component) {
		return _extends$2({}, parseTheme(component), {
			css: component.css || {}
		});
	}, componentKeys), {
		vars: mapKeys(function (key) {
			return '--' + key;
		}, theme.vars || {})
	});
};

/** @component */
var ThemeProvider$2 = mapProps(function (props) {
	return _extends$2({}, props, {
		theme: parseTheme(merge(defaultTheme, props.theme || {}))
	});
})(ThemeProvider);

// TODO: deduplicate all buttons where possible
// TODO: hover states and such should be handled - tweak at least borderColor, and backgroundColor
var StyledReply = /*#__PURE__*/styled$1('button', { displayName: 'QuickReply', target: 'e1gt5po80'
})('border-width:1px;border-style:solid;font-size:1em;appearance:none;transition:box-shadow 0.1s,color 0.1s,border-color 0.2s;margin:0.25em;background-color:#fff;border-radius:1.4em;box-shadow:0 0.1em 0.1em 0 rgba(32,34,40,0.05);font-weight:400;overflow:hidden;padding:0.375em 1em 0.5em;word-break:break-word;&:hover{cursor:pointer;}&:active,&:focus{box-shadow:none;outline:none;background-color:rgba(0,0,0,0.05);}');

var QuickReply = function (_React$Component) {
	inherits$1(QuickReply, _React$Component);

	function QuickReply() {
		var _temp, _this, _ret;

		classCallCheck$1(this, QuickReply);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._handleClick = function (event) {
			// TODO: discuss during review - button already has native value
			// QuickReply might not need onSelect, just onClick, and one can read the value by accessing event.target.value
			// QuickReplies OTOH needs onSelect
			_this.props.onSelect(_this.props.value);
			_this.props.onClick(event);
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	QuickReply.prototype.render = function render() {
		return React.createElement(StyledReply, _extends$2({}, this.props, { onClick: this._handleClick }));
	};

	return QuickReply;
}(React.Component);

QuickReply.defaultProps = {
	onClick: noop,
	onSelect: noop
};
QuickReply.propTypes = {
	children: PropTypes.node.isRequired,
	onClick: PropTypes.func,
	onSelect: PropTypes.func,
	value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};

// TODO: make some single warnOnce utility, which could cache calls based on some passed in type, or resulting string
// eslint-disable-next-line no-console
var warnOnce$1 = once(console.warn.bind(console));

var StyledReplies = /*#__PURE__*/styled$1('div', { displayName: 'QuickReplies', target: 'e1dnb9qc0'
})('display:flex;flex-wrap:wrap;text-align:center;justify-content:center;');

var QuickReplies = function (_React$Component) {
	inherits$1(QuickReplies, _React$Component);

	function QuickReplies() {
		var _temp, _this, _ret;

		classCallCheck$1(this, QuickReplies);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._handleSelect = function (value) {
			return _this.props.onSelect(value);
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	QuickReplies.prototype.render = function render() {
		var _this2 = this;

		// eslint-disable-next-line no-unused-vars
		var _props = this.props,
		    children = _props.children,
		    replies = _props.replies,
		    onSelect = _props.onSelect,
		    props = objectWithoutProperties$1(_props, ['children', 'replies', 'onSelect']);


		if ("development" !== 'production' && children && replies) {
			// eslint-disable-next-line no-console
			warnOnce$1(['You should not use replies & children props together.', 'They cannot be rendered at once - children prop has higher rendering priority.'].join('\n'));
		}

		var childs = children ? compactChildren(children) : replies.map(function (reply, index) {
			return React.createElement(
				QuickReply,
				{ key: index, value: reply },
				reply
			);
		});

		return React.createElement(
			StyledReplies,
			props,
			React.Children.map(childs, function (child) {
				return React.cloneElement(child, { onSelect: _this2._handleSelect });
			})
		);
	};

	return QuickReplies;
}(React.Component);

QuickReplies.defaultProps = {
	onSelect: noop
};
QuickReplies.propTypes = {
	children: PropTypes.node,
	onSelect: PropTypes.func,
	replies: PropTypes.arrayOf(PropTypes.string)
};

var StyledBar$1 = /*#__PURE__*/styled$1('div', { displayName: 'TitleBar', section: true, target: 'e1ohfhv0'
})('display:flex;justify-content:center;align-items:center;width:100%;border:#000;color:#fff;position:relative;z-index:2;text-align:center;padding:0.4em;');

var Title$2 = /*#__PURE__*/styled$1('div', {
	target: 'e1ohfhv1'
})('font-size:0.9em;margin:0;flex-grow:1;display:flex;align-items:center;padding:0 1em;justify-content:inherit;');

var TitleBar$1 = function TitleBar(_ref) {
	var leftIcons = _ref.leftIcons,
	    rightIcons = _ref.rightIcons,
	    title = _ref.title,
	    props = objectWithoutProperties$1(_ref, ['leftIcons', 'rightIcons', 'title']);

	return React.createElement(
		StyledBar$1,
		props,
		leftIcons,
		React.createElement(
			Title$2,
			{ ellipsis: true },
			title
		),
		rightIcons
	);
};

TitleBar$1.propTypes = {
	leftIcons: PropTypes.arrayOf(PropTypes.node),
	rightIcons: PropTypes.arrayOf(PropTypes.node),
	theme: PropTypes.shape(),
	title: PropTypes.string
};

var Toggle$3 = function (_React$Component) {
	inherits$1(Toggle, _React$Component);

	function Toggle() {
		var _temp, _this, _ret;

		classCallCheck$1(this, Toggle);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
			toggleState: _this.props.defaultState
		}, _this.switchOn = function () {
			_this.setState({
				toggleState: 'on'
			});
		}, _this.switchOff = function () {
			_this.setState({
				toggleState: 'off'
			});
		}, _this.toggle = function () {
			_this.setState({
				toggleState: _this.state.toggleState === 'on' ? 'off' : 'on'
			});
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	Toggle.prototype.render = function render() {
		return this.props.children({
			state: this.state.toggleState,
			on: this.switchOn,
			off: this.switchOff,
			toggle: this.toggle
		});
	};

	return Toggle;
}(React.Component);

Toggle$3.propTypes = {
	children: PropTypes.func.isRequired,
	defaultState: PropTypes.string
};
Toggle$3.defaultProps = {
	toggleState: 'on'
};

var _createContext$1 = createContext();
var ComposerProvider = _createContext$1.Provider;
var ComposerSpy = _createContext$1.Consumer;

var StyledComposer = /*#__PURE__*/styled$1('div', { displayName: 'TextComposer', section: true, target: 'eyij3xx0'
})('padding:0.5em;background:#fff;border-top:1px solid rgba(0,0,0,0.1);');

var TextComposer = function (_React$Component) {
	inherits$1(TextComposer, _React$Component);

	function TextComposer() {
		var _temp, _this, _ret;

		classCallCheck$1(this, TextComposer);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
			value: _this._getValue({ value: _this.props.defaultValue })
		}, _this._handleButtonClick = function (event) {
			var sent = _this.maybeSend();

			if (!sent) {
				return;
			}

			_this.props.onButtonClick(event);
		}, _this._handleChange = function (event) {
			var value = event.target.value;


			if (!_this._isControlled()) {
				_this.setState({ value: value });
			}

			_this.props.onValueChange(value);
			_this.props.onChange(event);
		}, _this._handleInputRef = function (ref) {
			_this._inputRef = ref;
			_this.props.inputRef(ref);
		}, _this._handleKeyDown = function (event) {
			var onKeyDown = _this.props.onKeyDown;


			if (wasOnlyEnterPressed(event)) {
				event.preventDefault();
			}

			if (!wasEnterPressed(event) || wasNewLineIntended(event)) {
				onKeyDown(event);
				return;
			}

			_this.maybeSend();
			onKeyDown(event);
		}, _this.maybeSend = function () {
			if (!_this._canSend()) {
				return false;
			}

			if (!_this._isControlled()) {
				_this.setState({ value: '' });
			}

			_this.props.onValueChange('');
			_this.props.onSend(trimEnd(_this.state.value));
			return true;
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	TextComposer.prototype._getValue = function _getValue() {
		var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;
		var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;

		return this._isControlled() ? props.value : state.value;
	};

	TextComposer.prototype._canSend = function _canSend() {
		return this.props.active && this.state.value.trim() !== '';
	};

	TextComposer.prototype._isControlled = function _isControlled() {
		return this.props.value === 'string';
	};

	TextComposer.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
		var value = this._getValue();
		var prevValue = this._getValue(prevState, prevProps);

		if (value !== prevValue && value === '') {
			this._inputRef.focus();
		}
	};

	TextComposer.prototype.render = function render() {
		// eslint-disable-next-line no-unused-vars
		var _props = this.props,
		    active = _props.active,
		    children = _props.children,
		    defaultValue = _props.defaultValue,
		    onButtonClick = _props.onButtonClick,
		    onChange = _props.onChange,
		    onKeyDown = _props.onKeyDown,
		    onSend = _props.onSend,
		    onValueChange = _props.onValueChange,
		    value = _props.value,
		    props = objectWithoutProperties$1(_props, ['active', 'children', 'defaultValue', 'onButtonClick', 'onChange', 'onKeyDown', 'onSend', 'onValueChange', 'value']);


		var contextValue = {
			active: this._canSend(),
			inputRef: this._handleInputRef,
			value: this._getValue(),
			maybeSend: this.maybeSend,
			onButtonClick: this._handleButtonClick,
			onChange: this._handleChange,
			onKeyDown: this._handleKeyDown
		};

		return React.createElement(
			ComposerProvider,
			{ value: contextValue },
			React.createElement(
				StyledComposer,
				props,
				children
			)
		);
	};

	return TextComposer;
}(React.Component);

TextComposer.propTypes = {
	active: PropTypes.bool,
	children: PropTypes.node,
	defaultValue: PropTypes.string,
	inputRef: PropTypes.func,
	onButtonClick: PropTypes.func,
	onChange: PropTypes.func,
	onKeyDown: PropTypes.func,
	onSend: PropTypes.func,
	value: PropTypes.string
};
TextComposer.defaultProps = {
	active: true,
	defaultValue: '',
	inputRef: noop,
	onButtonClick: noop,
	onChange: noop,
	onKeyDown: noop,
	onSend: noop,
	onValueChange: noop
};

var withComposer = (function () {
	var mapComposerToProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : identity;
	return function (WrappedComponent) {
		var _class, _temp;

		return _temp = _class = function (_React$Component) {
			inherits$1(WithComposer, _React$Component);

			function WithComposer() {
				classCallCheck$1(this, WithComposer);
				return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
			}

			WithComposer.prototype.render = function render() {
				var _this2 = this;

				return React.createElement(
					ComposerSpy,
					{ quiet: true },
					function (context) {
						return React.createElement(WrappedComponent, _extends$2({}, _this2.props, mapComposerToProps(context, _this2.props)));
					}
				);
			};

			return WithComposer;
		}(React.Component), _class.displayName = 'withComposer(' + getDisplayName(WrappedComponent) + ')', _temp;
	};
});

var mapPropsToStyles$11 = function mapPropsToStyles(_ref) {
	var color = _ref.color;

	if (!color) {
		return null;
	}

	return { fill: color, '& *': { fill: color } };
};

var createStyledIcon = memoize$1(
// temporarily omit those props here until shouldForwardProp gets released
function (Icon) {
	return (/*#__PURE__*/styled$1(function (_ref2) {
			var flexFill = _ref2.flexFill,
			    flexFit = _ref2.flexFit,
			    noShrink = _ref2.noShrink,
			    props = objectWithoutProperties$1(_ref2, ['flexFill', 'flexFit', 'noShrink']);
			return Icon(props);
		}, {
			displayType: 'Icon',
			mapPropsToStyles: mapPropsToStyles$11,
			target: 'e5ibypu0'
		})('&{display:block;}&,& *{fill:currentColor;}')
	);
});

var Icon = function Icon(_ref3) {
	var children = _ref3.children,
	    props = objectWithoutProperties$1(_ref3, ['children']);

	var StyledIcon = createStyledIcon(children.type);
	return React.createElement(StyledIcon, props);
};

Icon.propTypes = {
	children: PropTypes.node.isRequired
};

var Send = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			height: "18px",
			version: "1.1",
			viewBox: "0 0 21 18",
			width: "21px",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"send"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ fill: "none", fillRule: "evenodd", id: "Page-1", stroke: "none", strokeWidth: "1" },
			React__default.createElement(
				"g",
				{ fill: "#000000", id: "send" },
				React__default.createElement("polygon", { id: "Shape", points: "0.01 18 21 9 0.01 0 0 7 15 9 0 11" })
			)
		)
	);
});

var SendIcon = function SendIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Send, null)
	);
};

var SendButton = function (_React$Component) {
	inherits$1(SendButton, _React$Component);

	function SendButton() {
		classCallCheck$1(this, SendButton);
		return possibleConstructorReturn$1(this, _React$Component.apply(this, arguments));
	}

	SendButton.prototype.render = function render() {
		return React.createElement(
			StyledButton,
			this.props,
			React.createElement(SendIcon, null)
		);
	};

	return SendButton;
}(React.Component);

// eslint-disable-next-line no-console


SendButton.propTypes = {
	active: PropTypes.bool,
	onClick: PropTypes.func
};
var warnOnce$2 = once(console.warn.bind(console));

var SendButton$1 = withComposer(function (_ref, ownProps) {
	var active = _ref.active,
	    onButtonClick = _ref.onButtonClick;

	{
		var sendButtonProps = ['active', 'onClick'];
		if (hasControlledProps(sendButtonProps, ownProps)) {
			// eslint-disable-next-line no-console
			warnOnce$2([sendButtonProps + ' props are controlled by TextComposer,', 'if you want to use those please pass them to the TextComposer instead of ' + getDisplayName(SendButton) + '.'].join(' '));
		}
	}
	return active ? { active: active, onClick: onButtonClick } : { active: active };
})(SendButton);

function _extends$6() {
  _extends$6 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$6.apply(this, arguments);
}

function _inheritsLoose$2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var _sPO = Object.setPrototypeOf || function _sPO(o, p) {
  o.__proto__ = p;
  return o;
};

var _construct = typeof Reflect === "object" && Reflect.construct || function _construct(Parent, args, Class) {
  var Constructor,
      a = [null];
  a.push.apply(a, args);
  Constructor = Parent.bind.apply(Parent, a);
  return _sPO(new Constructor(), Class.prototype);
};

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var isBrowser$1 = typeof window !== 'undefined' && typeof document !== 'undefined';

var isIE = isBrowser$1 ? !!document.documentElement.currentStyle : false;
var HIDDEN_TEXTAREA_STYLE = {
  'min-height': '0',
  'max-height': 'none',
  height: '0',
  visibility: 'hidden',
  overflow: 'hidden',
  position: 'absolute',
  'z-index': '-1000',
  top: '0',
  right: '0'
};
var SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];
var computedStyleCache = {};
var hiddenTextarea = isBrowser$1 && document.createElement('textarea');

var forceHiddenStyles = function forceHiddenStyles(node$$1) {
  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {
    node$$1.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');
  });
};

if (isBrowser$1) {
  forceHiddenStyles(hiddenTextarea);
}

function calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {
  if (useCache === void 0) {
    useCache = false;
  }

  if (minRows === void 0) {
    minRows = null;
  }

  if (maxRows === void 0) {
    maxRows = null;
  }

  if (hiddenTextarea.parentNode === null) {
    document.body.appendChild(hiddenTextarea);
  } // Copy all CSS properties that have an impact on the height of the content in
  // the textbox


  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);

  if (nodeStyling === null) {
    return null;
  }

  var paddingSize = nodeStyling.paddingSize,
      borderSize = nodeStyling.borderSize,
      boxSizing = nodeStyling.boxSizing,
      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise
  // text-lines will not calculated properly as the shadow will technically be
  // narrower for content

  Object.keys(sizingStyle).forEach(function (key) {
    hiddenTextarea.style[key] = sizingStyle[key];
  });
  forceHiddenStyles(hiddenTextarea);
  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';
  var minHeight = -Infinity;
  var maxHeight = Infinity;
  var height = hiddenTextarea.scrollHeight;

  if (boxSizing === 'border-box') {
    // border-box: add border, since height = content + padding + border
    height = height + borderSize;
  } else if (boxSizing === 'content-box') {
    // remove padding, since height = content
    height = height - paddingSize;
  } // measure height of a textarea with a single row


  hiddenTextarea.value = 'x';
  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

  if (minRows !== null || maxRows !== null) {
    if (minRows !== null) {
      minHeight = singleRowHeight * minRows;

      if (boxSizing === 'border-box') {
        minHeight = minHeight + paddingSize + borderSize;
      }

      height = Math.max(minHeight, height);
    }

    if (maxRows !== null) {
      maxHeight = singleRowHeight * maxRows;

      if (boxSizing === 'border-box') {
        maxHeight = maxHeight + paddingSize + borderSize;
      }

      height = Math.min(maxHeight, height);
    }
  }

  var rowCount = Math.floor(height / singleRowHeight);
  return {
    height: height,
    minHeight: minHeight,
    maxHeight: maxHeight,
    rowCount: rowCount
  };
}

function calculateNodeStyling(node$$1, uid, useCache) {
  if (useCache === void 0) {
    useCache = false;
  }

  if (useCache && computedStyleCache[uid]) {
    return computedStyleCache[uid];
  }

  var style = window.getComputedStyle(node$$1);

  if (style === null) {
    return null;
  }

  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {
    obj[name] = style.getPropertyValue(name);
    return obj;
  }, {});
  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions

  if (boxSizing === '') {
    return null;
  } // IE (Edge has already correct behaviour) returns content width as computed width
  // so we need to add manually padding and border widths


  if (isIE && boxSizing === 'border-box') {
    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';
  }

  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);
  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);
  var nodeInfo = {
    sizingStyle: sizingStyle,
    paddingSize: paddingSize,
    borderSize: borderSize,
    boxSizing: boxSizing
  };

  if (useCache) {
    computedStyleCache[uid] = nodeInfo;
  }

  return nodeInfo;
}

var purgeCache = function purgeCache(uid) {
  return delete computedStyleCache[uid];
};

function autoInc$1(seed) {
  if (seed === void 0) {
    seed = 0;
  }

  return function () {
    return ++seed;
  };
}

var uid$1 = autoInc$1();

/**
 * <TextareaAutosize />
 */
var noop$3 = function noop() {}; // IE11 has a problem with eval source maps, can be reproduced with:
// eval('"use strict"; var onNextFrame = window.cancelAnimationFrame; onNextFrame(4);')
// so we bind window as context in dev modes


var _ref$2 = isBrowser$1 && window.requestAnimationFrame ? [window.requestAnimationFrame.bind(window), window.cancelAnimationFrame.bind(window)] : [setTimeout, clearTimeout];
var onNextFrame = _ref$2[0];
var clearNextFrameAction = _ref$2[1];

var TextareaAutosize =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose$2(TextareaAutosize, _React$Component);

  function TextareaAutosize(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this._resizeLock = false;

    _this._onRootDOMNode = function (node$$1) {
      _this._rootDOMNode = node$$1;

      _this.props.inputRef(node$$1);
    };

    _this._onChange = function (event) {
      if (!_this._controlled) {
        _this._resizeComponent();
      }

      _this.props.onChange(event);
    };

    _this._resizeComponent = function (callback) {
      if (callback === void 0) {
        callback = noop$3;
      }

      if (typeof _this._rootDOMNode === 'undefined') {
        callback();
        return;
      }

      var nodeHeight = calculateNodeHeight(_this._rootDOMNode, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);

      if (nodeHeight === null) {
        callback();
        return;
      }

      var height = nodeHeight.height,
          minHeight = nodeHeight.minHeight,
          maxHeight = nodeHeight.maxHeight,
          rowCount = nodeHeight.rowCount;
      _this.rowCount = rowCount;

      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {
        _this.setState({
          height: height,
          minHeight: minHeight,
          maxHeight: maxHeight
        }, callback);

        return;
      }

      callback();
    };

    _this.state = {
      height: props.style && props.style.height || 0,
      minHeight: -Infinity,
      maxHeight: Infinity
    };
    _this._uid = uid$1();
    _this._controlled = typeof props.value === 'string';
    return _this;
  }

  var _proto = TextareaAutosize.prototype;

  _proto.render = function render() {
    var _props = this.props,
        _inputRef = _props.inputRef,
        _maxRows = _props.maxRows,
        _minRows = _props.minRows,
        _onHeightChange = _props.onHeightChange,
        _useCacheForDOMMeasurements = _props.useCacheForDOMMeasurements,
        props = _objectWithoutProperties(_props, ["inputRef", "maxRows", "minRows", "onHeightChange", "useCacheForDOMMeasurements"]);

    props.style = _extends$6({}, props.style, {
      height: this.state.height
    });
    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);

    if (maxHeight < this.state.height) {
      props.style.overflow = 'hidden';
    }

    return React__default.createElement("textarea", _extends$6({}, props, {
      onChange: this._onChange,
      ref: this._onRootDOMNode
    }));
  };

  _proto.componentDidMount = function componentDidMount() {
    var _this2 = this;

    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment
    // causing competing rerenders (due to setState in the listener) in React.
    // More can be found here - facebook/react#6324


    this._resizeListener = function () {
      if (_this2._resizeLock) {
        return;
      }

      _this2._resizeLock = true;

      _this2._resizeComponent(function () {
        return _this2._resizeLock = false;
      });
    };

    window.addEventListener('resize', this._resizeListener);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    var _this3 = this;

    if (prevProps !== this.props) {
      this._clearNextFrame();

      this._onNextFrameActionId = onNextFrame(function () {
        return _this3._resizeComponent();
      });
    }

    if (this.state.height !== prevState.height) {
      this.props.onHeightChange(this.state.height, this);
    }
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this._clearNextFrame();

    window.removeEventListener('resize', this._resizeListener);
    purgeCache(this._uid);
  };

  _proto._clearNextFrame = function _clearNextFrame() {
    clearNextFrameAction(this._onNextFrameActionId);
  };

  return TextareaAutosize;
}(React__default.Component);

TextareaAutosize.propTypes = {
  inputRef: PropTypes__default.func,
  maxRows: PropTypes__default.number,
  minRows: PropTypes__default.number,
  onChange: PropTypes__default.func,
  onHeightChange: PropTypes__default.func,
  useCacheForDOMMeasurements: PropTypes__default.bool,
  value: PropTypes__default.string
};
TextareaAutosize.defaultProps = {
  inputRef: noop$3,
  onChange: noop$3,
  onHeightChange: noop$3,
  useCacheForDOMMeasurements: false
};

// TODO: look into this comment during review
// TODO: we should have our own styled factory and this omit should be applied for each "global" custom prop
// for wrapped custom React component
var StyledInput = /*#__PURE__*/styled$1(function (_ref) {
	var flexFill = _ref.flexFill,
	    props = objectWithoutProperties$1(_ref, ['flexFill']);
	return React.createElement(TextareaAutosize, props);
}, { displayName: 'TextInput', target: 'e1m92qam0'
})('apperance:none;border:0;resize:none;background-color:#fff;height:1.5em;line-height:1.5em;min-width 0;width:100%;font-size:1em;&:focus,&:active{outline:none;}');

var TextInput = function (_React$Component) {
	inherits$1(TextInput, _React$Component);

	function TextInput() {
		var _temp, _this, _ret;

		classCallCheck$1(this, TextInput);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = possibleConstructorReturn$1(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._getRef = function (ref) {
			_this.props.inputRef(ref);
			_this.props.innerRef(ref);
		}, _temp), possibleConstructorReturn$1(_this, _ret);
	}

	TextInput.prototype.render = function render() {
		// eslint-disable-next-line no-unused
		var _props = this.props,
		    innerRef = _props.innerRef,
		    inputRef = _props.inputRef,
		    props = objectWithoutProperties$1(_props, ['innerRef', 'inputRef']);

		return React.createElement(StyledInput, _extends$2({}, props, { inputRef: this._getRef }));
	};

	return TextInput;
}(React.Component);

// eslint-disable-next-line no-console


TextInput.defaultProps = {
	innerRef: noop,
	inputRef: noop,
	maxRows: 3,
	onChange: noop,
	onKeyDown: noop,
	placeholder: 'Write a message...'
};
TextInput.propTypes = {
	defaultValue: PropTypes.string,
	innerRef: PropTypes.func,
	inputRef: PropTypes.func,
	maxRows: PropTypes.number,
	minRows: PropTypes.number,
	onChange: PropTypes.func,
	onHeightChange: PropTypes.func,
	onKeyDown: PropTypes.func,
	placeholder: PropTypes.string,
	value: PropTypes.string
};
var warnOnce$3 = once(console.warn.bind(console));

var TextInput$1 = withComposer(function (_ref2, ownProps) {
	var inputRef = _ref2.inputRef,
	    onChange = _ref2.onChange,
	    onKeyDown = _ref2.onKeyDown,
	    value = _ref2.value;

	{
		var textInputProps = ['defaultValue', 'inputRef', 'onChange', 'onKeyDown', 'value'];
		if (hasControlledProps(textInputProps, ownProps)) {
			// eslint-disable-next-line no-console
			warnOnce$3([textInputProps + ' props are controlled by TextComposer,', 'if you want to use those please pass them to the TextComposer instead of ' + getDisplayName(TextInput) + '.'].join(' '));
		}
	}
	return { inputRef: inputRef, onChange: onChange, onKeyDown: onKeyDown, value: value };
})(TextInput);

var mapPropsToStyles$12 = function mapPropsToStyles(props) {
	var propsStyles = {};

	if (props.position === 'right') {
		propsStyles.right = '1em';
		propsStyles.left = 'auto';
	} else if (props.position === 'left') {
		propsStyles.right = 'auto';
		propsStyles.left = '1em';
	}

	return propsStyles;
};

var StyledWrapper = /*#__PURE__*/styled$1('div', { displayName: 'FixedWrapperRoot', mapPropsToStyles: mapPropsToStyles$12, target: 'e7t7c040'
})('position:fixed;bottom:0;z-index:99;font-size:16px;');

var FixedWrapperRoot = function FixedWrapperRoot(props) {
	return React.createElement(
		StyledWrapper,
		props,
		React.createElement(
			Toggle$3,
			{ defaultState: props.maximizedOnInit ? 'on' : 'off' },
			function (_ref) {
				var on = _ref.on,
				    off = _ref.off,
				    state = _ref.state;
				return React.createElement(
					'div',
					null,
					React.Children.map(props.children, function (child) {
						if (child.type === Maximized) {
							return React.cloneElement(child, {
								minimize: off,
								active: state === 'on'
							});
						}
						if (child.type === Minimized) {
							return React.cloneElement(child, {
								maximize: on,
								active: state === 'off'
							});
						}
						return child;
					})
				);
			}
		)
	);
};

FixedWrapperRoot.defaultProps = {
	maximizedOnInit: false
};

FixedWrapperRoot.propTypes = {
	/** Content of the component. FixedWrapper.Maximized and FixedWrapper.Minimized components will receive the proper state and methods */
	children: PropTypes.node.isRequired,
	/** Show maximized component on init */
	maximizedOnInit: PropTypes.bool,
	/** Override component's styles */
	style: PropTypes.shape()
};

var mapPropsToStyles$13 = function mapPropsToStyles(props) {
	var propsStyle = {};

	if (props.theme) {
		// TODO: should be done with nesting?
		propsStyle.right = props.theme.FixedWrapperRoot.position === 'right' ? '0' : 'auto';
		propsStyle.left = props.theme.FixedWrapperRoot.position === 'left' ? '0' : 'auto';
	}

	if (props.animationDuration) {
		propsStyle.transition = 'all ' + props.animationDuration + 'ms ease-out';
	}
	if (props.state) {
		propsStyle.transform = props.state === 'entered' ? 'none' : 'scale(0.8) translate(10%, 30%)';
		propsStyle.opacity = props.state === 'entered' ? '1' : '0';
	}
	if (props.height) {
		propsStyle.height = props.height;
	}
	if (props.width) {
		propsStyle.width = props.width;
	}
	return propsStyle;
};

var StyledWrapper$1 = /*#__PURE__*/styled$1('div', { displayName: 'FixedWrapperMaximized', mapPropsToStyles: mapPropsToStyles$13, target: 'ep7mz240'
})('display:flex;flex-direction:column;max-height:100vh;position:absolute;bottom:0;@media (max-width:490px){width:100%;height:100%;position:fixed;}');

var FixedWrapperMaximized = function FixedWrapperMaximized(props) {
	return React.createElement(
		reactTransitionGroup_1,
		{
			'in': props.active,
			mountOnEnter: true,
			timeout: props.theme.FixedWrapperMaximized.animationDuration,
			unmountOnExit: true
		},
		function (state) {
			return React.createElement(
				StyledWrapper$1,
				_extends$2({}, props, { state: state }),
				React.Children.map(props.children, function (child) {
					return React.cloneElement(child, {
						minimize: props.minimize
					});
				})
			);
		}
	);
};

FixedWrapperMaximized.propTypes = {
	/** Component active - shown or hidden */
	active: PropTypes.bool,
	/** Content of the component, will have minimize function injected */
	children: PropTypes.node.isRequired,
	/** Method to change component's state from shown to hiden - passed by FixedWrapper.Root */
	minimize: PropTypes.func,
	/** Override component's styles */
	style: PropTypes.shape()
};

var Maximized = withTheme(FixedWrapperMaximized);

var mapPropsToStyles$14 = function mapPropsToStyles(_ref) {
	var state = _ref.state,
	    theme = _ref.theme;

	var propsStyles = {};

	if (theme) {
		propsStyles.transition = 'all ' + theme.FixedWrapperMaximized.animationDuration + 'ms ease-out';
		// TODO could be done with nesting?
		propsStyles.right = theme.FixedWrapperRoot.position === 'right' ? '0' : 'auto';
		propsStyles.left = theme.FixedWrapperRoot.position === 'left' ? '0' : 'auto';
	}

	if (state) {
		propsStyles.transform = state === 'entered' ? 'none' : 'scale(0.8) translate(10%, 30%)';
		propsStyles.opacity = state === 'entered' ? '1' : '0';
	}
	return propsStyles;
};

var StyledWrapper$2 = /*#__PURE__*/styled$1('div', { displayName: 'FixedWrapperMinimized', mapPropsToStyles: mapPropsToStyles$14, target: 'eq1nrcm0'
})('width:60px;height:60px;position:absolute;bottom:1em;');

var FixedWrapperMinimized = function FixedWrapperMinimized(props) {
	return React.createElement(
		reactTransitionGroup_1,
		{
			'in': props.active,
			mountOnEnter: true,
			timeout: props.theme.FixedWrapperMinimized.animationDuration,
			unmountOnExit: true
		},
		function (state) {
			return React.createElement(
				StyledWrapper$2,
				_extends$2({}, props, { state: state }),
				React.Children.map(props.children, function (child) {
					return React.cloneElement(child, {
						maximize: props.maximize
					});
				})
			);
		}
	);
};

FixedWrapperMinimized.propTypes = {
	/** Component active - shown or hidden */
	active: PropTypes.bool,
	/** Content of the component, will have maximize function injected */
	children: PropTypes.node.isRequired,
	/** Method to change component's state from shown to hiden - passed by FixedWrapper.Root */
	maximize: PropTypes.func,
	/** Override component's styles */
	style: PropTypes.shape()
};

var Minimized = withTheme(FixedWrapperMinimized);



var FixedWrapperImport = Object.freeze({
	Root: FixedWrapperRoot,
	Maximized: Maximized,
	Minimized: Minimized
});

var FixedWrapper = FixedWrapperImport;

var Add = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			height: "20px",
			version: "1.1",
			viewBox: "0 0 20 20",
			width: "20px",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"add"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ fill: "none", fillRule: "evenodd", id: "Page-1", stroke: "none", strokeWidth: "1" },
			React__default.createElement(
				"g",
				{ fill: "#000000", fillRule: "nonzero", id: "add" },
				React__default.createElement("path", {
					d: "M10,0 C4.48,0 0,4.48 0,10 C0,15.52 4.48,20 10,20 C15.52,20 20,15.52 20,10 C20,4.48 15.52,0 10,0 Z M15,11 L11,11 L11,15 L9,15 L9,11 L5,11 L5,9 L9,9 L9,5 L11,5 L11,9 L15,9 L15,11 Z",
					id: "Shape"
				})
			)
		)
	);
});

var AddIcon = function AddIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Add, null)
	);
};

var ArrowLeft = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "8px",
			height: "13px",
			viewBox: "0 0 8 13",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"ArrowLeft"
		),
		React__default.createElement(
			"g",
			{ id: "Masrter", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "rich_carousele", transform: "translate(-840.000000, -560.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{
						id: "Group-2-Copy",
						transform: "translate(845.000000, 567.000000) scale(-1, 1) translate(-845.000000, -567.000000) translate(831.000000, 553.000000)"
					},
					React__default.createElement(
						"g",
						{ id: "ic_keyboard_arrow_right_black_24px", transform: "translate(3.000000, 1.000000)" },
						React__default.createElement("polygon", { id: "Shape", points: "8.59 17.34 13.17 12.75 8.59 8.16 10 6.75 16 12.75 10 18.75" })
					)
				)
			)
		)
	);
});

var ArrowLeftIcon = function ArrowLeftIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(ArrowLeft, null)
	);
};

var ArrowRight = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "8px",
			height: "13px",
			viewBox: "0 0 8 13",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"ArrowRight"
		),
		React__default.createElement(
			"g",
			{ id: "Masrter", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "rich_carousele", transform: "translate(-1104.000000, -560.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "Group-2", transform: "translate(1094.000000, 553.000000)" },
					React__default.createElement(
						"g",
						{ id: "ic_keyboard_arrow_right_black_24px", transform: "translate(2.000000, 1.000000)" },
						React__default.createElement("polygon", { id: "Shape", points: "8.59 17.34 13.17 12.75 8.59 8.16 10 6.75 16 12.75 10 18.75" })
					)
				)
			)
		)
	);
});

var ArrowRightIcon = function ArrowRightIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(ArrowRight, null)
	);
};

var Attach = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "20px",
			height: "11px",
			viewBox: "0 0 20 11",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"Attach"
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "Masrter", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "not_available_label", transform: "translate(-1098.000000, -754.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "ic_attachment_black_24px", transform: "translate(1096.000000, 747.000000)" },
					React__default.createElement("path", {
						d: "M2,12.5 C2,9.46 4.46,7 7.5,7 L18,7 C20.21,7 22,8.79 22,11 C22,13.21 20.21,15 18,15 L9.5,15 C8.12,15 7,13.88 7,12.5 C7,11.12 8.12,10 9.5,10 L17,10 L17,12 L9.41,12 C8.86,12 8.86,13 9.41,13 L18,13 C19.1,13 20,12.1 20,11 C20,9.9 19.1,9 18,9 L7.5,9 C5.57,9 4,10.57 4,12.5 C4,14.43 5.57,16 7.5,16 L17,16 L17,18 L7.5,18 C4.46,18 2,15.54 2,12.5 Z",
						id: "Shape"
					})
				)
			)
		)
	);
});

var AttachIcon = function AttachIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Attach, null)
	);
};

var Chat = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "28px",
			height: "28px",
			viewBox: "0 0 28 28",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "agentonline", fill: "#000000" },
				React__default.createElement("path", {
					d: "M14,25.5 C12.4,25.5 10.8,25.2 9.4,24.7 L4.5,27.5 L4.5,21.9 C2,19.6 0.5,16.5 0.5,13 C0.5,6.1 6.5,0.5 14,0.5 C21.5,0.5 27.5,6.1 27.5,13 C27.5,19.9 21.5,25.5 14,25.5 L14,25.5 Z M9,11.5 C8.2,11.5 7.5,12.2 7.5,13 C7.5,13.8 8.2,14.5 9,14.5 C9.8,14.5 10.5,13.8 10.5,13 C10.5,12.2 9.8,11.5 9,11.5 L9,11.5 Z M14,11.5 C13.2,11.5 12.5,12.2 12.5,13 C12.5,13.8 13.2,14.5 14,14.5 C14.8,14.5 15.5,13.8 15.5,13 C15.5,12.2 14.8,11.5 14,11.5 L14,11.5 Z M19,11.5 C18.2,11.5 17.5,12.2 17.5,13 C17.5,13.8 18.2,14.5 19,14.5 C19.8,14.5 20.5,13.8 20.5,13 C20.5,12.2 19.8,11.5 19,11.5 L19,11.5 Z",
					id: "Shape"
				})
			)
		)
	);
});

var ChatIcon = function ChatIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Chat, null)
	);
};

var CheckboxOff = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "Artboard-Copy-20", transform: "translate(-861.000000, -556.000000)" },
				React__default.createElement(
					"g",
					{ id: "checkbox-unchecked", transform: "translate(861.000000, 556.000000)" },
					React__default.createElement(
						"g",
						{ id: "Rectangle-16-Copy-6" },
						React__default.createElement("rect", {
							stroke: "#BCC6D0",
							strokeWidth: "1",
							x: "0.5",
							y: "0.5",
							width: "15",
							height: "15",
							rx: "4",
							style: {
								fill: 'none'
							}
						})
					)
				)
			)
		)
	);
});

var CheckboxOffIcon = function CheckboxOffIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(CheckboxOff, null)
	);
};

var CheckboxOn = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "Artboard-Copy-20", transform: "translate(-861.000000, -526.000000)" },
				React__default.createElement(
					"g",
					{ id: "checkbox-checked", transform: "translate(861.000000, 526.000000)" },
					React__default.createElement(
						"g",
						{ id: "Rectangle-16-Copy-4" },
						React__default.createElement("rect", {
							stroke: "#4384F5",
							strokeWidth: "1",
							x: "0.5",
							y: "0.5",
							width: "15",
							height: "15",
							rx: "4",
							style: {
								fill: 'none'
							}
						})
					),
					React__default.createElement("polygon", {
						id: "check-icon",
						fill: "#4384F5",
						points: "4 8.17070347 6.8554326 11.0329509 12.4300003 5.44475349 10.9852468 4 6.84861773 8.13662909 5.44475349 6.72594998"
					})
				)
			)
		)
	);
});

var CheckboxOnIcon = function CheckboxOnIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(CheckboxOn, null)
	);
};

var Close = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			height: "14px",
			version: "1.1",
			viewBox: "0 0 14 14",
			width: "14px",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"close"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ fill: "none", fillRule: "evenodd", id: "Page-1", stroke: "none", strokeWidth: "1" },
			React__default.createElement("polygon", {
				fill: "#000000",
				id: "close",
				points: "14 1.41 12.59 8.8817842e-16 7 5.59 1.41 8.8817842e-16 0 1.41 5.59 7 0 12.59 1.41 14 7 8.41 12.59 14 14 12.59 8.41 7"
			})
		)
	);
});

var CloseIcon = function CloseIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Close, null)
	);
};

var Email = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "18px",
			height: "14px",
			viewBox: "0 0 18 14",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"emailtranscript"
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "More_select", transform: "translate(-853.000000, -227.000000)" },
				React__default.createElement(
					"g",
					{ id: "Group-5", transform: "translate(830.000000, 207.000000)" },
					React__default.createElement(
						"g",
						{ id: "Group-4" },
						React__default.createElement(
							"g",
							{ id: "emailtranscript", transform: "translate(22.000000, 17.000000)" },
							React__default.createElement("path", {
								d: "M16.6666667,3.33333333 L3.33333333,3.33333333 C2.41666667,3.33333333 1.675,4.08333333 1.675,5 L1.66666667,15 C1.66666667,15.9166667 2.41666667,16.6666667 3.33333333,16.6666667 L16.6666667,16.6666667 C17.5833333,16.6666667 18.3333333,15.9166667 18.3333333,15 L18.3333333,5 C18.3333333,4.08333333 17.5833333,3.33333333 16.6666667,3.33333333 Z M16.6666667,15 L3.33333333,15 L3.33333333,6.66666667 L10,10.8333333 L16.6666667,6.66666667 L16.6666667,15 Z M10,9.16666667 L3.33333333,5 L16.6666667,5 L10,9.16666667 Z",
								id: "Shape",
								fillOpacity: "0.6",
								fill: "#424D57",
								fillRule: "nonzero"
							})
						)
					)
				)
			)
		)
	);
});

var EmailIcon = function EmailIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Email, null)
	);
};

var EmailFilled = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "21px",
			height: "16px",
			viewBox: "0 0 20 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement("path", {
				d: "M18,0 L2,0 C0.9,0 0.01,0.9 0.01,2 L0,14 C0,15.1 0.9,16 2,16 L18,16 C19.1,16 20,15.1 20,14 L20,2 C20,0.9 19.1,0 18,0 Z M17.6,4.25 L10.53,8.67 C10.21,8.87 9.79,8.87 9.47,8.67 L2.4,4.25 C2.15,4.09 2,3.82 2,3.53 C2,2.86 2.73,2.46 3.3,2.81 L10,7 L16.7,2.81 C17.27,2.46 18,2.86 18,3.53 C18,3.82 17.85,4.09 17.6,4.25 Z",
				id: "EmailFilled",
				fill: "#000000",
				fillRule: "nonzero"
			})
		)
	);
});

var EmailFilledIcon = function EmailFilledIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(EmailFilled, null)
	);
};

var Emoji = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			height: "20px",
			version: "1.1",
			viewBox: "0 0 20 20",
			width: "20px",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"emoji"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ fill: "none", fillRule: "evenodd", id: "Page-1", stroke: "none", strokeWidth: "1" },
			React__default.createElement(
				"g",
				{ fill: "#000000", id: "emoji" },
				React__default.createElement("path", {
					d: "M13.5,9 C14.3,9 15,8.3 15,7.5 C15,6.7 14.3,6 13.5,6 C12.7,6 12,6.7 12,7.5 C12,8.3 12.7,9 13.5,9 L13.5,9 Z M6.5,9 C7.3,9 8,8.3 8,7.5 C8,6.7 7.3,6 6.5,6 C5.7,6 5,6.7 5,7.5 C5,8.3 5.7,9 6.5,9 L6.5,9 Z M10,16 C12.6,16 14.8,14.3 15.7,12 L4.3,12 C5.2,14.3 7.4,16 10,16 L10,16 Z M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M10,18 C5.6,18 2,14.4 2,10 C2,5.6 5.6,2 10,2 C14.4,2 18,5.6 18,10 C18,14.4 14.4,18 10,18 L10,18 Z",
					id: "Shape"
				})
			)
		)
	);
});

var EmojiIcon = function EmojiIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Emoji, null)
	);
};

var Exit = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "24px",
			height: "24px",
			viewBox: "0 0 24 24",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "close_chat", transform: "translate(-963.000000, -248.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "ic_exit_to_app_black_24px", transform: "translate(960.000000, 245.000000)" },
					React__default.createElement("path", {
						d: "M12.6125,19.4875 L14.375,21.25 L20.625,15 L14.375,8.75 L12.6125,10.5125 L15.8375,13.75 L3.75,13.75 L3.75,16.25 L15.8375,16.25 L12.6125,19.4875 Z M23.75,3.75 L6.25,3.75 C4.8625,3.75 3.75,4.875 3.75,6.25 L3.75,11.25 L6.25,11.25 L6.25,6.25 L23.75,6.25 L23.75,23.75 L6.25,23.75 L6.25,18.75 L3.75,18.75 L3.75,23.75 C3.75,25.125 4.8625,26.25 6.25,26.25 L23.75,26.25 C25.125,26.25 26.25,25.125 26.25,23.75 L26.25,6.25 C26.25,4.875 25.125,3.75 23.75,3.75 Z",
						id: "exit"
					})
				)
			)
		)
	);
});

var ExitIcon = function ExitIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Exit, null)
	);
};

var Hourglass = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "26px",
			viewBox: "0 0 16 26",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"hourglass"
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "Queued", transform: "translate(-967.000000, -284.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "ic_hourglass_empty_black_24px", transform: "translate(960.000000, 282.000000)" },
					React__default.createElement("path", {
						d: "M7.5,2.5 L7.5,10 L7.5125,10 L7.5,10.0125 L12.5,15 L7.5,20 L7.5125,20.0125 L7.5,20.0125 L7.5,27.5 L22.5,27.5 L22.5,20.0125 L22.4875,20.0125 L22.5,20 L17.5,15 L22.5,10.0125 L22.4875,10 L22.5,10 L22.5,2.5 L7.5,2.5 Z M20,20.625 L20,25 L10,25 L10,20.625 L15,15.625 L20,20.625 Z M15,14.375 L10,9.375 L10,5 L20,5 L20,9.375 L15,14.375 Z",
						id: "hourglass"
					})
				)
			)
		)
	);
});

var HourglassIcon = function HourglassIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Hourglass, null)
	);
};

var Maximize = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({ fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" }, props),
		React__default.createElement("path", { d: "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z" })
	);
});

var MaximizeIcon = function MaximizeIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Maximize, null)
	);
};

var MenuVertical = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			height: "4px",
			version: "1.1",
			viewBox: "0 0 16 4",
			width: "16px",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"menu-vertical"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ fill: "none", fillRule: "evenodd", id: "Page-1", stroke: "none", strokeWidth: "1" },
			React__default.createElement(
				"g",
				{ fill: "#000000", id: "menu-vertical" },
				React__default.createElement("path", {
					d: "M2,0 C0.9,0 0,0.9 0,2 C0,3.1 0.9,4 2,4 C3.1,4 4,3.1 4,2 C4,0.9 3.1,0 2,0 Z M14,0 C12.9,0 12,0.9 12,2 C12,3.1 12.9,4 14,4 C15.1,4 16,3.1 16,2 C16,0.9 15.1,0 14,0 Z M8,0 C6.9,0 6,0.9 6,2 C6,3.1 6.9,4 8,4 C9.1,4 10,3.1 10,2 C10,0.9 9.1,0 8,0 Z",
					id: "Shape"
				})
			)
		)
	);
});

var MenuVerticalIcon = function MenuVerticalIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(MenuVertical, null)
	);
};

var Minimize = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({ fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" }, props),
		React__default.createElement("path", { d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" })
	);
});

var MinimizeIcon = function MinimizeIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Minimize, null)
	);
};

var Mute = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"Mute"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "More-mute", transform: "translate(-854.000000, -325.000000)", fill: "#424D57", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "Group-4", transform: "translate(830.000000, 207.000000)" },
					React__default.createElement(
						"g",
						{ id: "Group-3" },
						React__default.createElement(
							"g",
							{ id: "ic_volume_off_black_24px", transform: "translate(22.000000, 116.000000)" },
							React__default.createElement("path", {
								d: "M13.75,10 C13.75,8.525 12.9,7.25833333 11.6666667,6.64166667 L11.6666667,8.48333333 L13.7083333,10.525 C13.7333333,10.3583333 13.75,10.1833333 13.75,10 Z M15.8333333,10 C15.8333333,10.7833333 15.6666667,11.5166667 15.3833333,12.2 L16.6416667,13.4583333 C17.1916667,12.425 17.5,11.25 17.5,10 C17.5,6.43333333 15.0083333,3.45 11.6666667,2.69166667 L11.6666667,4.40833333 C14.075,5.125 15.8333333,7.35833333 15.8333333,10 Z M3.55833333,2.5 L2.5,3.55833333 L6.44166667,7.5 L2.5,7.5 L2.5,12.5 L5.83333333,12.5 L10,16.6666667 L10,11.0583333 L13.5416667,14.6 C12.9833333,15.0333333 12.3583333,15.375 11.6666667,15.5833333 L11.6666667,17.3 C12.8166667,17.0416667 13.8583333,16.5083333 14.7416667,15.7916667 L16.4416667,17.5 L17.5,16.4416667 L10,8.94166667 L3.55833333,2.5 Z M10,3.33333333 L8.25833333,5.075 L10,6.81666667 L10,3.33333333 Z",
								id: "Shape"
							})
						)
					)
				)
			)
		)
	);
});

var MuteIcon = function MuteIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Mute, null)
	);
};

var Unmute = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"Mute"
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "More_select", transform: "translate(-854.000000, -325.000000)", fill: "#FFFFFF", fillRule: "nonzero" },
				React__default.createElement(
					"g",
					{ id: "Group-5", transform: "translate(830.000000, 207.000000)" },
					React__default.createElement("path", {
						d: "M24.5,123.5 L24.5,128.5 L27.8333333,128.5 L32,132.666667 L32,119.333333 L27.8333333,123.5 L24.5,123.5 Z M35.75,126 C35.75,124.525 34.9,123.258333 33.6666667,122.641667 L33.6666667,129.35 C34.9,128.741667 35.75,127.475 35.75,126 Z M33.6666667,118.691667 L33.6666667,120.408333 C36.075,121.125 37.8333333,123.358333 37.8333333,126 C37.8333333,128.641667 36.075,130.875 33.6666667,131.591667 L33.6666667,133.308333 C37.0083333,132.55 39.5,129.566667 39.5,126 C39.5,122.433333 37.0083333,119.45 33.6666667,118.691667 Z",
						id: "mute"
					})
				)
			)
		)
	);
});

var UnmuteIcon = function UnmuteIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(Unmute, null)
	);
};

var RadioOff = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "Artboard-Copy-20", transform: "translate(-861.000000, -656.000000)" },
				React__default.createElement(
					"g",
					{ id: "radio-unchecked", transform: "translate(861.000000, 656.000000)" },
					React__default.createElement(
						"g",
						{ id: "Oval-Copy-5" },
						React__default.createElement("circle", {
							stroke: "#BCC6D0",
							strokeWidth: "1",
							cx: "8",
							cy: "8",
							r: "7.5",
							style: {
								fill: 'none'
							}
						})
					)
				)
			)
		)
	);
});

var RadioOffIcon = function RadioOffIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(RadioOff, null)
	);
};

var RadioOn = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "16px",
			height: "16px",
			viewBox: "0 0 16 16",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"g",
			{ id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{ id: "Artboard-Copy-20", transform: "translate(-861.000000, -626.000000)" },
				React__default.createElement(
					"g",
					{ id: "radio-checked", transform: "translate(861.000000, 626.000000)" },
					React__default.createElement(
						"g",
						{ id: "Oval-Copy-6" },
						React__default.createElement("circle", {
							stroke: "#4384F5",
							strokeWidth: "1",
							cx: "8",
							cy: "8",
							r: "7.5",
							style: {
								fill: 'none'
							}
						})
					),
					React__default.createElement("circle", { id: "Oval-2", fill: "#4384F5", cx: "8", cy: "8", r: "3" })
				)
			)
		)
	);
});

var RadioOnIcon = function RadioOnIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(RadioOn, null)
	);
};

var RateBad = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "14px",
			height: "19px",
			viewBox: "0 0 14 19",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"RateBad"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{
					id: "chat_feed_rate_me-copy-3",
					transform: "translate(-1092.000000, -247.000000)",
					fill: "#424D57",
					fillRule: "nonzero"
				},
				React__default.createElement(
					"g",
					{ id: "Group", transform: "translate(832.000000, 237.000000)" },
					React__default.createElement("path", {
						d: "M262.011431,10.0079649 C264.301872,10.0254688 266.149331,11.871012 266.149331,14.141574 L266.149331,15.006151 C266.149331,15.7362453 266.746389,16.3281036 267.482897,16.3281036 L270.483677,16.3281036 C270.679987,16.3281036 270.875953,16.3444026 271.069519,16.3768295 C272.984075,16.6975635 274.27384,18.4961084 273.950288,20.3939919 L273.161331,25.0218442 C272.786728,27.2191809 270.866945,28.8276198 268.618875,28.8276198 L265.455497,28.8276198 C262.442509,28.8276198 260,26.406381 260,23.4196316 L260,12.0040832 C260,10.9016253 260.893719,10.0079066 261.996177,10.0079066 C262.001262,10.0079066 262.006347,10.007926 262.011431,10.0079649 Z M268.206897,24.4827922 L272.086361,24.4827922 L272.086361,25.4442124 L269.168317,25.4442124 C268.637339,25.4442124 268.206897,25.0137699 268.206897,24.4827922 Z M268.206897,22.0689991 L273.056228,22.0689991 L273.056228,23.0304193 L269.168317,23.0304193 C268.637339,23.0304193 268.206897,22.5999768 268.206897,22.0689991 Z M268.206897,19.655206 L273.541161,19.655206 L273.541161,20.6166262 L269.168317,20.6166262 C268.637339,20.6166262 268.206897,20.1861837 268.206897,19.655206 Z M261.939732,23.4196316 C261.939732,25.3444256 263.513794,26.9047795 265.455497,26.9047795 L268.618875,26.9047795 C269.920389,26.9047795 271.031842,25.9735781 271.248717,24.7014358 L272.037675,20.0735835 C272.182715,19.2228081 271.604545,18.4165638 270.746296,18.2727865 C270.659525,18.2582503 270.571678,18.2509439 270.483677,18.2509439 L267.482897,18.2509439 C265.675104,18.2509439 264.209598,16.7982006 264.209598,15.006151 L264.209598,14.141574 C264.209598,12.9271831 263.221501,11.9401098 261.996478,11.930748 L261.939732,11.9303143 L261.939732,23.4196316 Z",
						id: "thumb-down",
						transform: "translate(267.000000, 19.413810) scale(-1, -1) translate(-267.000000, -19.413810) "
					})
				)
			)
		)
	);
});

var RateBadIcon = function RateBadIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(RateBad, null)
	);
};

var RateGood = (function (_ref) {
	var _ref$styles = _ref.styles,
	    styles = _ref$styles === undefined ? {} : _ref$styles,
	    props = objectWithoutProperties$1(_ref, ["styles"]);
	return React__default.createElement(
		"svg",
		_extends$2({
			width: "14px",
			height: "19px",
			viewBox: "0 0 14 19",
			version: "1.1",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink"
		}, props),
		React__default.createElement(
			"title",
			null,
			"RateGood"
		),
		React__default.createElement(
			"desc",
			null,
			"Created with Sketch."
		),
		React__default.createElement("defs", null),
		React__default.createElement(
			"g",
			{ id: "LC2", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
			React__default.createElement(
				"g",
				{
					id: "chat_feed_rate_me-copy-3",
					transform: "translate(-1047.000000, -247.000000)",
					fill: "#424D57",
					fillRule: "nonzero"
				},
				React__default.createElement(
					"g",
					{ id: "Group", transform: "translate(832.000000, 237.000000)" },
					React__default.createElement("path", {
						d: "M217.011431,10.0079649 C219.301872,10.0254688 221.149331,11.871012 221.149331,14.141574 L221.149331,15.006151 C221.149331,15.7362453 221.746389,16.3281036 222.482897,16.3281036 L225.483677,16.3281036 C225.679987,16.3281036 225.875953,16.3444026 226.069519,16.3768295 C227.984075,16.6975635 229.27384,18.4961084 228.950288,20.3939919 L228.161331,25.0218442 C227.786728,27.2191809 225.866945,28.8276198 223.618875,28.8276198 L220.455497,28.8276198 C217.442509,28.8276198 215,26.406381 215,23.4196316 L215,12.0040832 C215,10.9016253 215.893719,10.0079066 216.996177,10.0079066 C217.001262,10.0079066 217.006347,10.007926 217.011431,10.0079649 Z M223.206897,24.4827922 L227.086361,24.4827922 L227.086361,25.4442124 L224.168317,25.4442124 C223.637339,25.4442124 223.206897,25.0137699 223.206897,24.4827922 Z M223.206897,22.0689991 L228.056228,22.0689991 L228.056228,23.0304193 L224.168317,23.0304193 C223.637339,23.0304193 223.206897,22.5999768 223.206897,22.0689991 Z M223.206897,19.655206 L228.541161,19.655206 L228.541161,20.6166262 L224.168317,20.6166262 C223.637339,20.6166262 223.206897,20.1861837 223.206897,19.655206 Z M216.939732,23.4196316 C216.939732,25.3444256 218.513794,26.9047795 220.455497,26.9047795 L223.618875,26.9047795 C224.920389,26.9047795 226.031842,25.9735781 226.248717,24.7014358 L227.037675,20.0735835 C227.182715,19.2228081 226.604545,18.4165638 225.746296,18.2727865 C225.659525,18.2582503 225.571678,18.2509439 225.483677,18.2509439 L222.482897,18.2509439 C220.675104,18.2509439 219.209598,16.7982006 219.209598,15.006151 L219.209598,14.141574 C219.209598,12.9271831 218.221501,11.9401098 216.996478,11.930748 L216.939732,11.9303143 L216.939732,23.4196316 Z",
						id: "thumb-up"
					})
				)
			)
		)
	);
});

var RateGoodIcon = function RateGoodIcon(props) {
	return React.createElement(
		Icon,
		props,
		React.createElement(RateGood, null)
	);
};

exports.styled = styled$1;
exports.css = css;
exports.cx = cx;
exports.injectGlobal = injectGlobal;
exports.keyframes = keyframes;
exports.FixedWrapper = FixedWrapper;
exports.ChatList = ChatList;
exports.ChatListItem = ChatListItem;
exports.AgentBar = AgentBar;
exports.Avatar = Avatar$1;
exports.Bubble = Bubble$1;
exports.Column = StyledColumn;
exports.Fill = Fill$1;
exports.Fit = Fit$1;
exports.IconButton = StyledButton;
exports.Message = Message$1;
exports.MessageTitle = MessageTitle;
exports.MessageText = StyledText;
exports.MessageMedia = StyledMedia;
exports.MessageButtons = MessageButtons;
exports.MessageButton = MessageButton;
exports.MessageGroup = MessageGroup;
exports.MessageList = MessageList$2;
exports.MessageListSpy = MessageListSpy;
exports.MessageListItem = MessageListItem$1;
exports.Row = StyledRow;
exports.ThemeProvider = ThemeProvider$2;
exports.QuickReplies = QuickReplies;
exports.QuickReply = QuickReply;
exports.Subtitle = SubTitle;
exports.Title = Title;
exports.TitleBar = TitleBar$1;
exports.Toggle = Toggle$3;
exports.SendButton = SendButton$1;
exports.TextComposer = TextComposer;
exports.TextInput = TextInput$1;
exports.ComposerSpy = ComposerSpy;
exports.AddIcon = AddIcon;
exports.ArrowLeftIcon = ArrowLeftIcon;
exports.ArrowRightIcon = ArrowRightIcon;
exports.AttachIcon = AttachIcon;
exports.ChatIcon = ChatIcon;
exports.CheckboxOffIcon = CheckboxOffIcon;
exports.CheckboxOnIcon = CheckboxOnIcon;
exports.CloseIcon = CloseIcon;
exports.EmailIcon = EmailIcon;
exports.EmailFilledIcon = EmailFilledIcon;
exports.EmojiIcon = EmojiIcon;
exports.ExitIcon = ExitIcon;
exports.HourglassIcon = HourglassIcon;
exports.Icon = Icon;
exports.MaximizeIcon = MaximizeIcon;
exports.MenuVerticalIcon = MenuVerticalIcon;
exports.MinimizeIcon = MinimizeIcon;
exports.MuteIcon = MuteIcon;
exports.UnmuteIcon = UnmuteIcon;
exports.RadioOffIcon = RadioOffIcon;
exports.RadioOnIcon = RadioOnIcon;
exports.RateBadIcon = RateBadIcon;
exports.RateGoodIcon = RateGoodIcon;
exports.SendIcon = SendIcon;
exports.defaultTheme = defaultTheme;
exports.darkTheme = darkTheme;
exports.purpleTheme = purpleTheme;
exports.elegantTheme = elegantTheme;

Object.defineProperty(exports, '__esModule', { value: true });

})));
